{"ast":null,"code":"var _jsxFileName = \"D:\\\\0xtest\\\\wifi-card-master\\\\src\\\\components\\\\WifiCard.js\",\n    _s = $RefreshSig$();\n\nimport { CameraIcon, Card, Heading, MobilePhoneIcon, Pane, Paragraph, Text, TextareaField } from 'evergreen-ui';\nimport QRCode from 'qrcode.react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../../src/images/wifi.png';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WifiCard = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [qrvalue, setQrvalue] = useState('');\n\n  const escape = v => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n    let escaped = '';\n\n    for (const c of v) {\n      if (needsEscape.includes(c)) {\n        escaped += `\\\\${c}`;\n      } else {\n        escaped += c;\n      }\n    }\n\n    return escaped;\n  };\n\n  useEffect(() => {\n    const ssid = escape(props.settings.ssid);\n    const password = !props.settings.encryptionMode ? '' : escape(props.settings.password);\n    const qrval = props.settings.encryptionMode === 'WPA2-EAP' ? `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};E:${props.settings.eapMethod};I:${props.settings.eapIdentity};;` : `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};;`;\n    setQrvalue(qrval);\n  }, [props.settings]);\n\n  const portraitWidth = () => {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile ? '100%' : '280px';\n  };\n\n  const passwordFieldLabel = () => {\n    const hiddenPassword = props.settings.hidePassword || !props.settings.encryptionMode;\n    return hiddenPassword ? '' : t('wifi.password');\n  };\n\n  const eapIdentityFieldLabel = () => {\n    const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n    return hiddenIdentity ? '' : t('wifi.identity');\n  };\n\n  const eapMethodFieldLabel = () => {\n    return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: \"print-area\",\n      elevation: 3,\n      style: {\n        maxWidth: props.settings.portrait ? portraitWidth() : '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pane, {\n        display: \"flex\",\n        paddingBottom: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"icon\",\n          src: logo,\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: 700,\n          paddingRight: 10,\n          paddingLeft: 10,\n          textAlign: props.settings.portrait ? 'center' : 'unset',\n          children: t('wifi.login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pane, {\n        className: \"details\",\n        style: {\n          flexDirection: props.settings.portrait ? 'column' : 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          className: \"qrcode\",\n          style: {\n            padding: '1em'\n          },\n          value: qrvalue,\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pane, {\n          width: '100%',\n          children: [/*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"ssid\",\n            type: \"text\",\n            marginBottom: 5,\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: false,\n            maxLength: \"32\",\n            label: t('wifi.name'),\n            placeholder: t('wifi.name.placeholder'),\n            value: props.settings.ssid,\n            onChange: e => props.onSSIDChange(e.target.value),\n            isInvalid: !!props.ssidError,\n            validationMessage: !!props.ssidError && props.ssidError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"eapmethod\",\n            type: \"text\",\n            marginBottom: 5,\n            readOnly: true,\n            spellCheck: false,\n            className: `\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `,\n            label: eapMethodFieldLabel(),\n            value: props.settings.eapMethod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"identity\",\n            type: \"text\",\n            marginBottom: 5,\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: false,\n            className: `\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `,\n            label: eapIdentityFieldLabel(),\n            placeholder: t('wifi.identity.placeholder'),\n            value: props.settings.eapIdentity,\n            onChange: e => props.onEapIdentityChange(e.target.value),\n            isInvalid: !!props.eapIdentityError,\n            validationMessage: !!props.eapIdentityError && props.eapIdentityError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"password\",\n            type: \"text\",\n            maxLength: \"63\",\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: false,\n            className: `\n                ${(props.settings.hidePassword || !props.settings.encryptionMode) && 'hidden'}\n              `,\n            height: props.settings.portrait && props.settings.password.length > 40 ? '5em' : 'auto',\n            label: passwordFieldLabel(),\n            placeholder: t('wifi.password.placeholder'),\n            value: props.settings.password,\n            onChange: e => props.onPasswordChange(e.target.value),\n            isInvalid: !!props.passwordError,\n            validationMessage: !!props.passwordError && props.passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: [/*#__PURE__*/_jsxDEV(CameraIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobilePhoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: 300,\n          paddingRight: 8,\n          paddingLeft: 8,\n          children: t('wifi.tip')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WifiCard, \"JQmDaEYas/GfLViJ5/gqhd3qYPw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = WifiCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WifiCard\");","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/src/components/WifiCard.js"],"names":["CameraIcon","Card","Heading","MobilePhoneIcon","Pane","Paragraph","Text","TextareaField","QRCode","useEffect","useState","useTranslation","logo","WifiCard","props","t","qrvalue","setQrvalue","escape","v","needsEscape","escaped","c","includes","ssid","settings","password","encryptionMode","qrval","hiddenSSID","eapMethod","eapIdentity","portraitWidth","isMobile","test","navigator","userAgent","passwordFieldLabel","hiddenPassword","hidePassword","eapIdentityFieldLabel","hiddenIdentity","eapMethodFieldLabel","maxWidth","portrait","flexDirection","padding","e","onSSIDChange","target","value","ssidError","onEapIdentityChange","eapIdentityError","length","onPasswordChange","passwordError"],"mappings":"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","sourcesContent":["import {\n  CameraIcon,\n  Card,\n  Heading,\n  MobilePhoneIcon,\n  Pane,\n  Paragraph,\n  Text,\n  TextareaField,\n} from 'evergreen-ui';\nimport QRCode from 'qrcode.react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../../src/images/wifi.png';\nimport './style.css';\n\nexport const WifiCard = (props) => {\n  const { t } = useTranslation();\n  const [qrvalue, setQrvalue] = useState('');\n\n  const escape = (v) => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n\n    let escaped = '';\n    for (const c of v) {\n      if (needsEscape.includes(c)) {\n        escaped += `\\\\${c}`;\n      } else {\n        escaped += c;\n      }\n    }\n    return escaped;\n  };\n\n  useEffect(() => {\n    const ssid = escape(props.settings.ssid);\n    const password = !props.settings.encryptionMode\n      ? ''\n      : escape(props.settings.password);\n    const qrval =\n      props.settings.encryptionMode === 'WPA2-EAP'\n        ? `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};E:${props.settings.eapMethod};I:${props.settings.eapIdentity};;`\n        : `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};;`;\n    setQrvalue(qrval);\n  }, [props.settings]);\n\n  const portraitWidth = () => {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile ? '100%' : '280px';\n  };\n\n  const passwordFieldLabel = () => {\n    const hiddenPassword =\n      props.settings.hidePassword || !props.settings.encryptionMode;\n    return hiddenPassword ? '' : t('wifi.password');\n  };\n\n  const eapIdentityFieldLabel = () => {\n    const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n    return hiddenIdentity ? '' : t('wifi.identity');\n  };\n\n  const eapMethodFieldLabel = () => {\n    return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n  };\n\n  return (\n    <Pane>\n      <Card\n        id=\"print-area\"\n        elevation={3}\n        style={{ maxWidth: props.settings.portrait ? portraitWidth() : '100%' }}\n      >\n        <Pane display=\"flex\" paddingBottom={12}>\n          <img alt=\"icon\" src={logo} width=\"24\" height=\"24\" />\n          <Heading\n            size={700}\n            paddingRight={10}\n            paddingLeft={10}\n            textAlign={props.settings.portrait ? 'center' : 'unset'}\n          >\n            {t('wifi.login')}\n          </Heading>\n        </Pane>\n\n        <Pane\n          className=\"details\"\n          style={{ flexDirection: props.settings.portrait ? 'column' : 'row' }}\n        >\n          <QRCode\n            className=\"qrcode\"\n            style={{ padding: '1em' }}\n            value={qrvalue}\n            size={150}\n          />\n\n          <Pane width={'100%'}>\n            <TextareaField\n              id=\"ssid\"\n              type=\"text\"\n              marginBottom={5}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              maxLength=\"32\"\n              label={t('wifi.name')}\n              placeholder={t('wifi.name.placeholder')}\n              value={props.settings.ssid}\n              onChange={(e) => props.onSSIDChange(e.target.value)}\n              isInvalid={!!props.ssidError}\n              validationMessage={!!props.ssidError && props.ssidError}\n            />\n            <TextareaField\n              id=\"eapmethod\"\n              type=\"text\"\n              marginBottom={5}\n              readOnly={true}\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapMethodFieldLabel()}\n              value={props.settings.eapMethod}\n            />\n            <TextareaField\n              id=\"identity\"\n              type=\"text\"\n              marginBottom={5}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapIdentityFieldLabel()}\n              placeholder={t('wifi.identity.placeholder')}\n              value={props.settings.eapIdentity}\n              onChange={(e) => props.onEapIdentityChange(e.target.value)}\n              isInvalid={!!props.eapIdentityError}\n              validationMessage={\n                !!props.eapIdentityError && props.eapIdentityError\n              }\n            />\n            <TextareaField\n              id=\"password\"\n              type=\"text\"\n              maxLength=\"63\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${\n                  (props.settings.hidePassword ||\n                    !props.settings.encryptionMode) &&\n                  'hidden'\n                }\n              `}\n              height={\n                props.settings.portrait && props.settings.password.length > 40\n                  ? '5em'\n                  : 'auto'\n              }\n              label={passwordFieldLabel()}\n              placeholder={t('wifi.password.placeholder')}\n              value={props.settings.password}\n              onChange={(e) => props.onPasswordChange(e.target.value)}\n              isInvalid={!!props.passwordError}\n              validationMessage={!!props.passwordError && props.passwordError}\n            />\n          </Pane>\n        </Pane>\n        <hr />\n        <Paragraph>\n          <CameraIcon />\n          <MobilePhoneIcon />\n          <Text size={300} paddingRight={8} paddingLeft={8}>\n            {t('wifi.tip')}\n          </Text>\n        </Paragraph>\n      </Card>\n    </Pane>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}