{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar noop = function noop() {};\n\nvar style = {\n  position: 'fixed',\n  top: -500,\n  left: -500,\n  width: 100,\n  overflowY: 'scroll'\n};\nvar ScrollbarSize = /*#__PURE__*/memo(function ScrollbarSize(_ref) {\n  var _ref$handleScrollbarS = _ref.handleScrollbarSize,\n      handleScrollbarSize = _ref$handleScrollbarS === void 0 ? noop : _ref$handleScrollbarS;\n  var innerRef = useRef();\n  var outerRef = useRef();\n\n  var _useState = useState({\n    innerWidth: null,\n    outerWidth: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      widths = _useState2[0],\n      setWidths = _useState2[1];\n\n  useEffect(function () {\n    var newWidths = {\n      innerWidth: null,\n      outerWidth: null\n    };\n\n    if (innerRef.current) {\n      newWidths.innerWidth = innerRef.current.getBoundingClientRect().width;\n    }\n\n    if (outerRef.current) {\n      newWidths.outerWidth = outerRef.current.getBoundingClientRect().width;\n    }\n\n    setWidths(newWidths);\n  }, []);\n  useEffect(function () {\n    if (widths.innerWidth && widths.outerWidth) {\n      handleScrollbarSize(widths.outerWidth - widths.innerWidth);\n    }\n  }, [widths, handleScrollbarSize]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: outerRef,\n    \"aria-hidden\": true,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: innerRef\n  }));\n});\nScrollbarSize.propTypes = {\n  /**\n   * Returns the size of the scrollbar by creating a hidden fixed div.\n   */\n  handleScrollbarSize: PropTypes.func\n};\nexport default ScrollbarSize;","map":{"version":3,"sources":["D:/0xtest/WifiAssistant/node_modules/evergreen-ui/esm/table/src/ScrollbarSize.js"],"names":["_slicedToArray","React","memo","useRef","useState","useEffect","PropTypes","noop","style","position","top","left","width","overflowY","ScrollbarSize","_ref","_ref$handleScrollbarS","handleScrollbarSize","innerRef","outerRef","_useState","innerWidth","outerWidth","_useState2","widths","setWidths","newWidths","current","getBoundingClientRect","createElement","ref","propTypes","func"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,OADA;AAEVC,EAAAA,GAAG,EAAE,CAAC,GAFI;AAGVC,EAAAA,IAAI,EAAE,CAAC,GAHG;AAIVC,EAAAA,KAAK,EAAE,GAJG;AAKVC,EAAAA,SAAS,EAAE;AALD,CAAZ;AAOA,IAAIC,aAAa,GAAG,aAAaZ,IAAI,CAAC,SAASY,aAAT,CAAuBC,IAAvB,EAA6B;AACjE,MAAIC,qBAAqB,GAAGD,IAAI,CAACE,mBAAjC;AAAA,MACIA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCT,IAAnC,GAA0CS,qBADpE;AAEA,MAAIE,QAAQ,GAAGf,MAAM,EAArB;AACA,MAAIgB,QAAQ,GAAGhB,MAAM,EAArB;;AAEA,MAAIiB,SAAS,GAAGhB,QAAQ,CAAC;AACvBiB,IAAAA,UAAU,EAAE,IADW;AAEvBC,IAAAA,UAAU,EAAE;AAFW,GAAD,CAAxB;AAAA,MAIIC,UAAU,GAAGvB,cAAc,CAACoB,SAAD,EAAY,CAAZ,CAJ/B;AAAA,MAKII,MAAM,GAAGD,UAAU,CAAC,CAAD,CALvB;AAAA,MAMIE,SAAS,GAAGF,UAAU,CAAC,CAAD,CAN1B;;AAQAlB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIqB,SAAS,GAAG;AACdL,MAAAA,UAAU,EAAE,IADE;AAEdC,MAAAA,UAAU,EAAE;AAFE,KAAhB;;AAKA,QAAIJ,QAAQ,CAACS,OAAb,EAAsB;AACpBD,MAAAA,SAAS,CAACL,UAAV,GAAuBH,QAAQ,CAACS,OAAT,CAAiBC,qBAAjB,GAAyChB,KAAhE;AACD;;AAED,QAAIO,QAAQ,CAACQ,OAAb,EAAsB;AACpBD,MAAAA,SAAS,CAACJ,UAAV,GAAuBH,QAAQ,CAACQ,OAAT,CAAiBC,qBAAjB,GAAyChB,KAAhE;AACD;;AAEDa,IAAAA,SAAS,CAACC,SAAD,CAAT;AACD,GAfQ,EAeN,EAfM,CAAT;AAgBArB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAImB,MAAM,CAACH,UAAP,IAAqBG,MAAM,CAACF,UAAhC,EAA4C;AAC1CL,MAAAA,mBAAmB,CAACO,MAAM,CAACF,UAAP,GAAoBE,MAAM,CAACH,UAA5B,CAAnB;AACD;AACF,GAJQ,EAIN,CAACG,MAAD,EAASP,mBAAT,CAJM,CAAT;AAKA,SAAO,aAAahB,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,IAAAA,GAAG,EAAEX,QADwC;AAE7C,mBAAe,IAF8B;AAG7CX,IAAAA,KAAK,EAAEA;AAHsC,GAA3B,EAIjB,aAAaP,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AACzCC,IAAAA,GAAG,EAAEZ;AADoC,GAA3B,CAJI,CAApB;AAOD,CA1CoC,CAArC;AA2CAJ,aAAa,CAACiB,SAAd,GAA0B;AACxB;AACF;AACA;AACEd,EAAAA,mBAAmB,EAAEX,SAAS,CAAC0B;AAJP,CAA1B;AAMA,eAAelB,aAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar noop = function noop() {};\n\nvar style = {\n  position: 'fixed',\n  top: -500,\n  left: -500,\n  width: 100,\n  overflowY: 'scroll'\n};\nvar ScrollbarSize = /*#__PURE__*/memo(function ScrollbarSize(_ref) {\n  var _ref$handleScrollbarS = _ref.handleScrollbarSize,\n      handleScrollbarSize = _ref$handleScrollbarS === void 0 ? noop : _ref$handleScrollbarS;\n  var innerRef = useRef();\n  var outerRef = useRef();\n\n  var _useState = useState({\n    innerWidth: null,\n    outerWidth: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      widths = _useState2[0],\n      setWidths = _useState2[1];\n\n  useEffect(function () {\n    var newWidths = {\n      innerWidth: null,\n      outerWidth: null\n    };\n\n    if (innerRef.current) {\n      newWidths.innerWidth = innerRef.current.getBoundingClientRect().width;\n    }\n\n    if (outerRef.current) {\n      newWidths.outerWidth = outerRef.current.getBoundingClientRect().width;\n    }\n\n    setWidths(newWidths);\n  }, []);\n  useEffect(function () {\n    if (widths.innerWidth && widths.outerWidth) {\n      handleScrollbarSize(widths.outerWidth - widths.innerWidth);\n    }\n  }, [widths, handleScrollbarSize]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: outerRef,\n    \"aria-hidden\": true,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: innerRef\n  }));\n});\nScrollbarSize.propTypes = {\n  /**\n   * Returns the size of the scrollbar by creating a hidden fixed div.\n   */\n  handleScrollbarSize: PropTypes.func\n};\nexport default ScrollbarSize;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}