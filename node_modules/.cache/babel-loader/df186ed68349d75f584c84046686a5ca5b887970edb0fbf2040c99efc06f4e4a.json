{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\WifiAssistant\\\\WifiAssistant\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Heading, Link, Pane, Paragraph } from 'evergreen-ui';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../src/images/wifi.png';\nimport { Settings } from './components/Settings';\nimport { WifiCard } from './components/WifiCard';\nimport './style.css'; // import { Translations } from './translations';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const html = document.querySelector('html');\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const firstLoad = useRef(true);\n  const [settings, setSettings] = useState({\n    // Network SSID name\n    ssid: '',\n    // Network password\n    password: '',\n    // Settings: Network encryption mode\n    encryptionMode: 'WPA',\n    // Settings: EAP Method\n    eapMethod: 'PWD',\n    // Settings: EAP identity\n    eapIdentity: '',\n    // Settings: Hide password on the printed card\n    hidePassword: false,\n    // Settings: Mark your network as hidden SSID\n    hiddenSSID: false,\n    // Settings: Portrait orientation\n    portrait: false\n  });\n  const [errors, setErrors] = useState({\n    ssidError: '',\n    passwordError: '',\n    eapIdentityError: ''\n  });\n\n  const htmlDirection = languageID => {\n    var _Translations$filter$;\n\n    languageID = languageID || i18n.language;\n    const rtl = (_Translations$filter$ = Translations.filter(t => t.id === languageID)[0]) === null || _Translations$filter$ === void 0 ? void 0 : _Translations$filter$.rtl;\n    return rtl ? 'rtl' : 'ltr';\n  };\n\n  const onChangeLanguage = language => {\n    html.style.direction = htmlDirection(language);\n    i18n.changeLanguage(language);\n  };\n\n  const onPrint = () => {\n    if (!settings.ssid.length) {\n      setErrors({ ...errors,\n        ssidError: t('wifi.alert.name')\n      });\n      return;\n    }\n\n    if (settings.password.length < 8 && settings.encryptionMode === 'WPA') {\n      setErrors({ ...errors,\n        passwordError: t('wifi.alert.password.length.8')\n      });\n      return;\n    }\n\n    if (settings.password.length < 5 && settings.encryptionMode === 'WEP') {\n      setErrors({ ...errors,\n        passwordError: t('wifi.alert.password.length.5')\n      });\n      return;\n    }\n\n    if (settings.password.length < 1 && settings.encryptionMode === 'WPA2-EAP') {\n      setErrors({ ...errors,\n        passwordError: t('wifi.alert.password')\n      });\n      return;\n    }\n\n    if (settings.eapIdentity.length < 1 && settings.encryptionMode === 'WPA2-EAP') {\n      setErrors({ ...errors,\n        eapIdentityError: t('wifi.alert.eapIdentity')\n      });\n      return;\n    }\n\n    document.title = 'WiFi Card - ' + settings.ssid;\n    window.print();\n  };\n\n  const onSSIDChange = ssid => {\n    setErrors({ ...errors,\n      ssidError: ''\n    });\n    setSettings({ ...settings,\n      ssid\n    });\n  };\n\n  const onPasswordChange = password => {\n    setErrors({ ...errors,\n      passwordError: ''\n    });\n    setSettings({ ...settings,\n      password\n    });\n  };\n\n  const onEncryptionModeChange = encryptionMode => {\n    setErrors({ ...errors,\n      passwordError: ''\n    });\n    setSettings({ ...settings,\n      encryptionMode\n    });\n  };\n\n  const onEapMethodChange = eapMethod => {\n    setSettings({ ...settings,\n      eapMethod\n    });\n  };\n\n  const onEapIdentityChange = eapIdentity => {\n    setErrors({ ...errors,\n      eapIdentityError: ''\n    });\n    setSettings({ ...settings,\n      eapIdentity\n    });\n  };\n\n  const onOrientationChange = portrait => {\n    setSettings({ ...settings,\n      portrait\n    });\n  };\n\n  const onHidePasswordChange = hidePassword => {\n    setSettings({ ...settings,\n      hidePassword\n    });\n  };\n\n  const onHiddenSSIDChange = hiddenSSID => {\n    setSettings({ ...settings,\n      hiddenSSID\n    });\n  };\n\n  const onFirstLoad = () => {\n    html.style.direction = htmlDirection();\n    firstLoad.current = false;\n  };\n\n  useEffect(() => {\n    if (htmlDirection() === 'rtl') {\n      html.style.direction = 'rtl';\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    children: [/*#__PURE__*/_jsxDEV(Pane, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"icon\",\n        src: logo,\n        width: \"32\",\n        height: \"32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: 900,\n        paddingRight: 16,\n        paddingLeft: 16,\n        children: 'WiFi连接码'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pane, {\n      children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n        marginTop: 22,\n        children: '输入您的 Wifi 名称和密码，生成相应 WiFi 连接二维码。无需手动输入，扫码直接连接！'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        marginTop: 12,\n        children: '您的 WiFi 信息永远只在本地储存，不会发送到服务端，请放心使用。'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WifiCard, {\n      settings: settings,\n      ssidError: errors.ssidError,\n      passwordError: errors.passwordError,\n      eapIdentityError: errors.eapIdentityError,\n      onSSIDChange: onSSIDChange,\n      onEapIdentityChange: onEapIdentityChange,\n      onPasswordChange: onPasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      settings: settings,\n      firstLoad: firstLoad,\n      onFirstLoad: onFirstLoad,\n      onEncryptionModeChange: onEncryptionModeChange,\n      onEapMethodChange: onEapMethodChange,\n      onOrientationChange: onOrientationChange,\n      onHidePasswordChange: onHidePasswordChange,\n      onHiddenSSIDChange: onHiddenSSIDChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: \"print\",\n      appearance: \"primary\",\n      height: 40,\n      marginRight: 16,\n      onClick: onPrint,\n      children: '打印连接码'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6rCCUvzjzPaWBGKN1FFkwrIB4kQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/src/App.js"],"names":["Button","Heading","Link","Pane","Paragraph","React","useEffect","useRef","useState","useTranslation","logo","Settings","WifiCard","App","html","document","querySelector","t","i18n","firstLoad","settings","setSettings","ssid","password","encryptionMode","eapMethod","eapIdentity","hidePassword","hiddenSSID","portrait","errors","setErrors","ssidError","passwordError","eapIdentityError","htmlDirection","languageID","language","rtl","Translations","filter","id","onChangeLanguage","style","direction","changeLanguage","onPrint","length","title","window","print","onSSIDChange","onPasswordChange","onEncryptionModeChange","onEapMethodChange","onEapIdentityChange","onOrientationChange","onHidePasswordChange","onHiddenSSIDChange","onFirstLoad","current"],"mappings":"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","sourcesContent":["import { Button, Heading, Link, Pane, Paragraph } from 'evergreen-ui';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../src/images/wifi.png';\nimport { Settings } from './components/Settings';\nimport { WifiCard } from './components/WifiCard';\nimport './style.css';\n// import { Translations } from './translations';\n\nfunction App() {\n  const html = document.querySelector('html');\n  const { t, i18n } = useTranslation();\n  const firstLoad = useRef(true);\n  const [settings, setSettings] = useState({\n    // Network SSID name\n    ssid: '',\n    // Network password\n    password: '',\n    // Settings: Network encryption mode\n    encryptionMode: 'WPA',\n    // Settings: EAP Method\n    eapMethod: 'PWD',\n    // Settings: EAP identity\n    eapIdentity: '',\n    // Settings: Hide password on the printed card\n    hidePassword: false,\n    // Settings: Mark your network as hidden SSID\n    hiddenSSID: false,\n    // Settings: Portrait orientation\n    portrait: false,\n  });\n  const [errors, setErrors] = useState({\n    ssidError: '',\n    passwordError: '',\n    eapIdentityError: '',\n  });\n\n  const htmlDirection = (languageID) => {\n    languageID = languageID || i18n.language;\n    const rtl = Translations.filter((t) => t.id === languageID)[0]?.rtl;\n    return rtl ? 'rtl' : 'ltr';\n  };\n\n  const onChangeLanguage = (language) => {\n    html.style.direction = htmlDirection(language);\n    i18n.changeLanguage(language);\n  };\n\n  const onPrint = () => {\n    if (!settings.ssid.length) {\n      setErrors({\n        ...errors,\n        ssidError: t('wifi.alert.name'),\n      });\n      return;\n    }\n    if (settings.password.length < 8 && settings.encryptionMode === 'WPA') {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password.length.8'),\n      });\n      return;\n    }\n    if (settings.password.length < 5 && settings.encryptionMode === 'WEP') {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password.length.5'),\n      });\n      return;\n    }\n    if (\n      settings.password.length < 1 &&\n      settings.encryptionMode === 'WPA2-EAP'\n    ) {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password'),\n      });\n      return;\n    }\n    if (\n      settings.eapIdentity.length < 1 &&\n      settings.encryptionMode === 'WPA2-EAP'\n    ) {\n      setErrors({\n        ...errors,\n        eapIdentityError: t('wifi.alert.eapIdentity'),\n      });\n      return;\n    }\n    document.title = 'WiFi Card - ' + settings.ssid;\n    window.print();\n  };\n\n  const onSSIDChange = (ssid) => {\n    setErrors({ ...errors, ssidError: '' });\n    setSettings({ ...settings, ssid });\n  };\n  const onPasswordChange = (password) => {\n    setErrors({ ...errors, passwordError: '' });\n    setSettings({ ...settings, password });\n  };\n  const onEncryptionModeChange = (encryptionMode) => {\n    setErrors({ ...errors, passwordError: '' });\n    setSettings({ ...settings, encryptionMode });\n  };\n  const onEapMethodChange = (eapMethod) => {\n    setSettings({ ...settings, eapMethod });\n  };\n  const onEapIdentityChange = (eapIdentity) => {\n    setErrors({ ...errors, eapIdentityError: '' });\n    setSettings({ ...settings, eapIdentity });\n  };\n  const onOrientationChange = (portrait) => {\n    setSettings({ ...settings, portrait });\n  };\n  const onHidePasswordChange = (hidePassword) => {\n    setSettings({ ...settings, hidePassword });\n  };\n  const onHiddenSSIDChange = (hiddenSSID) => {\n    setSettings({ ...settings, hiddenSSID });\n  };\n  const onFirstLoad = () => {\n    html.style.direction = htmlDirection();\n    firstLoad.current = false;\n  };\n\n  useEffect(() => {\n    if (htmlDirection() === 'rtl') {\n      html.style.direction = 'rtl';\n    }\n  });\n\n  return (\n    <Pane>\n      <Pane display=\"flex\">\n        <img alt=\"icon\" src={logo} width=\"32\" height=\"32\" />\n        <Heading size={900} paddingRight={16} paddingLeft={16}>\n          {'WiFi连接码'}\n        </Heading>\n      </Pane>\n\n      <Pane>\n        <Paragraph marginTop={22}>{'输入您的 Wifi 名称和密码，生成相应 WiFi 连接二维码。无需手动输入，扫码直接连接！'}</Paragraph>\n\n        <Paragraph marginTop={12}>\n          {'您的 WiFi 信息永远只在本地储存，不会发送到服务端，请放心使用。'}\n        </Paragraph>\n      </Pane>\n\n      <WifiCard\n        settings={settings}\n        ssidError={errors.ssidError}\n        passwordError={errors.passwordError}\n        eapIdentityError={errors.eapIdentityError}\n        onSSIDChange={onSSIDChange}\n        onEapIdentityChange={onEapIdentityChange}\n        onPasswordChange={onPasswordChange}\n      />\n\n      <Settings\n        settings={settings}\n        firstLoad={firstLoad}\n        onFirstLoad={onFirstLoad}\n        onEncryptionModeChange={onEncryptionModeChange}\n        onEapMethodChange={onEapMethodChange}\n        onOrientationChange={onOrientationChange}\n        onHidePasswordChange={onHidePasswordChange}\n        onHiddenSSIDChange={onHiddenSSIDChange}\n      />\n\n      <Button\n        id=\"print\"\n        appearance=\"primary\"\n        height={40}\n        marginRight={16}\n        onClick={onPrint}\n      >\n        {'打印连接码'}\n      </Button>\n    </Pane>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}