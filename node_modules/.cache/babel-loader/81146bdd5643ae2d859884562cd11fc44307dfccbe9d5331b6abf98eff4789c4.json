{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"title\", \"width\", \"height\", \"options\", \"onSelect\", \"onDeselect\", \"onFilterChange\", \"selected\", \"position\", \"hasTitle\", \"hasFilter\", \"filterPlaceholder\", \"filterIcon\", \"detailView\", \"emptyView\", \"titleView\", \"isMultiSelect\", \"closeOnSelect\", \"itemRenderer\", \"itemHeight\", \"shouldAutoFocus\"];\nimport React, { memo, useMemo } from 'react';\nimport arrify from 'arrify';\nimport PropTypes from 'prop-types';\nimport { Position } from '../../constants';\nimport { SearchIcon } from '../../icons';\nimport { Popover } from '../../popover';\nimport OptionShapePropType from './OptionShapePropType';\nimport SelectedPropType from './SelectedPropType';\nimport SelectMenuContent from './SelectMenuContent';\n\nvar noop = function noop() {};\n\nvar SelectMenu = /*#__PURE__*/memo(function SelectMenu(props) {\n  var title = props.title,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 240 : _props$width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 248 : _props$height,\n      options = props.options,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      _props$onDeselect = props.onDeselect,\n      onDeselect = _props$onDeselect === void 0 ? noop : _props$onDeselect,\n      onFilterChange = props.onFilterChange,\n      selected = props.selected,\n      _props$position = props.position,\n      position = _props$position === void 0 ? Position.BOTTOM_LEFT : _props$position,\n      hasTitle = props.hasTitle,\n      hasFilter = props.hasFilter,\n      _props$filterPlacehol = props.filterPlaceholder,\n      filterPlaceholder = _props$filterPlacehol === void 0 ? 'Filter...' : _props$filterPlacehol,\n      _props$filterIcon = props.filterIcon,\n      filterIcon = _props$filterIcon === void 0 ? SearchIcon : _props$filterIcon,\n      detailView = props.detailView,\n      emptyView = props.emptyView,\n      titleView = props.titleView,\n      _props$isMultiSelect = props.isMultiSelect,\n      isMultiSelect = _props$isMultiSelect === void 0 ? false : _props$isMultiSelect,\n      _props$closeOnSelect = props.closeOnSelect,\n      closeOnSelect = _props$closeOnSelect === void 0 ? false : _props$closeOnSelect,\n      itemRenderer = props.itemRenderer,\n      itemHeight = props.itemHeight,\n      shouldAutoFocus = props.shouldAutoFocus,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var selectedArray = useMemo(function () {\n    return arrify(selected);\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    minWidth: width,\n    position: position,\n    minHeight: height,\n    content: function content(_ref) {\n      var close = _ref.close;\n      return /*#__PURE__*/React.createElement(SelectMenuContent, {\n        width: width,\n        height: height,\n        options: options,\n        title: title,\n        hasFilter: hasFilter,\n        filterPlaceholder: filterPlaceholder,\n        filterIcon: filterIcon,\n        hasTitle: hasTitle,\n        isMultiSelect: isMultiSelect,\n        titleView: titleView,\n        listProps: {\n          onSelect: onSelect,\n          onDeselect: onDeselect,\n          onFilterChange: onFilterChange,\n          selected: selectedArray,\n          renderItem: itemRenderer,\n          optionSize: itemHeight,\n          shouldAutoFocus: shouldAutoFocus\n        },\n        close: close,\n        detailView: typeof detailView === 'function' ? detailView({\n          close: close\n        }) : detailView,\n        emptyView: typeof emptyView === 'function' ? emptyView({\n          close: close\n        }) : emptyView,\n        closeOnSelect: closeOnSelect\n      });\n    }\n  }, rest));\n});\nSelectMenu.propTypes = {\n  /**\n   * The title of the Select Menu.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The width of the Select Menu.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The height of the Select Menu.\n   */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The options to show in the menu.\n   * [{ label: String, value: String | Number }]\n   */\n  options: PropTypes.arrayOf(OptionShapePropType),\n\n  /**\n   * Function that is called when an option is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Function that is called when an option is deselected.\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * The selected value/values.\n   */\n  selected: SelectedPropType,\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /**\n   * When true, show the title.\n   */\n  hasTitle: PropTypes.bool,\n\n  /**\n   * When true, show the filter.\n   */\n  hasFilter: PropTypes.bool,\n\n  /**\n   * The placeholder of the search filter.\n   */\n  filterPlaceholder: PropTypes.string,\n\n  /**\n   * The icon of the search filter.\n   */\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Function that is called as the onChange() event for the filter.\n   */\n  onFilterChange: PropTypes.func,\n\n  /**\n   * The position of the Select Menu.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.TOP_LEFT, Position.TOP_RIGHT, Position.BOTTOM, Position.BOTTOM_LEFT, Position.BOTTOM_RIGHT]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered on the right side of the Select Menu to give additional\n   * information when an option is selected.\n   */\n  detailView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered in the header section of the Select Menu to customize\n   * the header.\n   */\n  titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered instead of the options list when there are no options.\n   */\n  emptyView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /*\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Can pass a method that can be used to render custom items in the\n   * select menu\n   */\n  itemRenderer: PropTypes.func,\n\n  /**\n   * The height of the items in the select menu list\n   */\n  itemHeight: PropTypes.number,\n\n  /**\n   * When true, menu auto focuses on the search/filter bar.\n   */\n  shouldAutoFocus: PropTypes.bool\n};\nexport default SelectMenu;","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/evergreen-ui/esm/select-menu/src/SelectMenu.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","memo","useMemo","arrify","PropTypes","Position","SearchIcon","Popover","OptionShapePropType","SelectedPropType","SelectMenuContent","noop","SelectMenu","props","title","_props$width","width","_props$height","height","options","_props$onSelect","onSelect","_props$onDeselect","onDeselect","onFilterChange","selected","_props$position","position","BOTTOM_LEFT","hasTitle","hasFilter","_props$filterPlacehol","filterPlaceholder","_props$filterIcon","filterIcon","detailView","emptyView","titleView","_props$isMultiSelect","isMultiSelect","_props$closeOnSelect","closeOnSelect","itemRenderer","itemHeight","shouldAutoFocus","rest","selectedArray","createElement","minWidth","minHeight","content","_ref","close","listProps","renderItem","optionSize","propTypes","string","oneOfType","number","arrayOf","func","bool","elementType","element","oneOf","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_RIGHT","node"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"title\", \"width\", \"height\", \"options\", \"onSelect\", \"onDeselect\", \"onFilterChange\", \"selected\", \"position\", \"hasTitle\", \"hasFilter\", \"filterPlaceholder\", \"filterIcon\", \"detailView\", \"emptyView\", \"titleView\", \"isMultiSelect\", \"closeOnSelect\", \"itemRenderer\", \"itemHeight\", \"shouldAutoFocus\"];\nimport React, { memo, useMemo } from 'react';\nimport arrify from 'arrify';\nimport PropTypes from 'prop-types';\nimport { Position } from '../../constants';\nimport { SearchIcon } from '../../icons';\nimport { Popover } from '../../popover';\nimport OptionShapePropType from './OptionShapePropType';\nimport SelectedPropType from './SelectedPropType';\nimport SelectMenuContent from './SelectMenuContent';\n\nvar noop = function noop() {};\n\nvar SelectMenu = /*#__PURE__*/memo(function SelectMenu(props) {\n  var title = props.title,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 240 : _props$width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 248 : _props$height,\n      options = props.options,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      _props$onDeselect = props.onDeselect,\n      onDeselect = _props$onDeselect === void 0 ? noop : _props$onDeselect,\n      onFilterChange = props.onFilterChange,\n      selected = props.selected,\n      _props$position = props.position,\n      position = _props$position === void 0 ? Position.BOTTOM_LEFT : _props$position,\n      hasTitle = props.hasTitle,\n      hasFilter = props.hasFilter,\n      _props$filterPlacehol = props.filterPlaceholder,\n      filterPlaceholder = _props$filterPlacehol === void 0 ? 'Filter...' : _props$filterPlacehol,\n      _props$filterIcon = props.filterIcon,\n      filterIcon = _props$filterIcon === void 0 ? SearchIcon : _props$filterIcon,\n      detailView = props.detailView,\n      emptyView = props.emptyView,\n      titleView = props.titleView,\n      _props$isMultiSelect = props.isMultiSelect,\n      isMultiSelect = _props$isMultiSelect === void 0 ? false : _props$isMultiSelect,\n      _props$closeOnSelect = props.closeOnSelect,\n      closeOnSelect = _props$closeOnSelect === void 0 ? false : _props$closeOnSelect,\n      itemRenderer = props.itemRenderer,\n      itemHeight = props.itemHeight,\n      shouldAutoFocus = props.shouldAutoFocus,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var selectedArray = useMemo(function () {\n    return arrify(selected);\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    minWidth: width,\n    position: position,\n    minHeight: height,\n    content: function content(_ref) {\n      var close = _ref.close;\n      return /*#__PURE__*/React.createElement(SelectMenuContent, {\n        width: width,\n        height: height,\n        options: options,\n        title: title,\n        hasFilter: hasFilter,\n        filterPlaceholder: filterPlaceholder,\n        filterIcon: filterIcon,\n        hasTitle: hasTitle,\n        isMultiSelect: isMultiSelect,\n        titleView: titleView,\n        listProps: {\n          onSelect: onSelect,\n          onDeselect: onDeselect,\n          onFilterChange: onFilterChange,\n          selected: selectedArray,\n          renderItem: itemRenderer,\n          optionSize: itemHeight,\n          shouldAutoFocus: shouldAutoFocus\n        },\n        close: close,\n        detailView: typeof detailView === 'function' ? detailView({\n          close: close\n        }) : detailView,\n        emptyView: typeof emptyView === 'function' ? emptyView({\n          close: close\n        }) : emptyView,\n        closeOnSelect: closeOnSelect\n      });\n    }\n  }, rest));\n});\nSelectMenu.propTypes = {\n  /**\n   * The title of the Select Menu.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The width of the Select Menu.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The height of the Select Menu.\n   */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The options to show in the menu.\n   * [{ label: String, value: String | Number }]\n   */\n  options: PropTypes.arrayOf(OptionShapePropType),\n\n  /**\n   * Function that is called when an option is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Function that is called when an option is deselected.\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * The selected value/values.\n   */\n  selected: SelectedPropType,\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /**\n   * When true, show the title.\n   */\n  hasTitle: PropTypes.bool,\n\n  /**\n   * When true, show the filter.\n   */\n  hasFilter: PropTypes.bool,\n\n  /**\n   * The placeholder of the search filter.\n   */\n  filterPlaceholder: PropTypes.string,\n\n  /**\n   * The icon of the search filter.\n   */\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Function that is called as the onChange() event for the filter.\n   */\n  onFilterChange: PropTypes.func,\n\n  /**\n   * The position of the Select Menu.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.TOP_LEFT, Position.TOP_RIGHT, Position.BOTTOM, Position.BOTTOM_LEFT, Position.BOTTOM_RIGHT]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered on the right side of the Select Menu to give additional\n   * information when an option is selected.\n   */\n  detailView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered in the header section of the Select Menu to customize\n   * the header.\n   */\n  titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Can be a function that returns a node, or a node itself, that is\n   * rendered instead of the options list when there are no options.\n   */\n  emptyView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /*\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Can pass a method that can be used to render custom items in the\n   * select menu\n   */\n  itemRenderer: PropTypes.func,\n\n  /**\n   * The height of the items in the select menu list\n   */\n  itemHeight: PropTypes.number,\n\n  /**\n   * When true, menu auto focuses on the search/filter bar.\n   */\n  shouldAutoFocus: PropTypes.bool\n};\nexport default SelectMenu;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}