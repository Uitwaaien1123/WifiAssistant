{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\WifiAssistant\\\\WifiAssistant\\\\src\\\\components\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Pane, RadioGroup } from 'evergreen-ui';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../i18n';\nimport { Translations } from '../translations';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Settings = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const encryptionModes = [{\n    label: '无',\n    value: ''\n  }, {\n    label: 'WPA/WPA2/WPA3',\n    value: 'WPA'\n  }, // { label: 'WPA2-EAP', value: 'WPA2-EAP' },\n  {\n    label: 'WEP',\n    value: 'WEP'\n  }];\n\n  const langSelectDefaultValue = () => {\n    const t = Translations.filter(t => t.id === i18n.language);\n\n    if (t.length !== 1) {\n      return 'en-US';\n    }\n\n    return t[0].id;\n  };\n\n  useEffect(() => {\n    if (props.firstLoad.current && window.innerWidth < 500) {\n      props.onFirstLoad();\n      props.onOrientationChange(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    id: \"settings\",\n    maxWidth: props.settings.portrait ? '350px' : '100%',\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      label: t('button.rotate'),\n      checked: props.settings.portrait,\n      onChange: () => props.onOrientationChange(!props.settings.portrait)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: t('wifi.password.hide'),\n      checked: props.settings.hidePassword,\n      onChange: () => props.onHidePasswordChange(!props.settings.hidePassword)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      label: '请选择该wifi的加密方式',\n      size: 16,\n      value: props.settings.encryptionMode,\n      options: encryptionModes,\n      onChange: e => props.onEncryptionModeChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/src/components/Settings.js"],"names":["Checkbox","Pane","RadioGroup","useEffect","useTranslation","i18n","Translations","Settings","props","t","encryptionModes","label","value","langSelectDefaultValue","filter","id","language","length","firstLoad","current","window","innerWidth","onFirstLoad","onOrientationChange","settings","portrait","hidePassword","onHidePasswordChange","encryptionMode","e","onEncryptionModeChange","target"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,cAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,QAAMM,eAAe,GAAG,CACtB;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADsB,EAEtB;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAFsB,EAGtB;AACA;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJsB,CAAxB;;AAMA,QAAMC,sBAAsB,GAAG,MAAM;AACnC,UAAMJ,CAAC,GAAGH,YAAY,CAACQ,MAAb,CAAqBL,CAAD,IAAOA,CAAC,CAACM,EAAF,KAASV,IAAI,CAACW,QAAzC,CAAV;;AACA,QAAIP,CAAC,CAACQ,MAAF,KAAa,CAAjB,EAAoB;AAClB,aAAO,OAAP;AACD;;AACD,WAAOR,CAAC,CAAC,CAAD,CAAD,CAAKM,EAAZ;AACD,GAND;;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACU,SAAN,CAAgBC,OAAhB,IAA2BC,MAAM,CAACC,UAAP,GAAoB,GAAnD,EAAwD;AACtDb,MAAAA,KAAK,CAACc,WAAN;AACAd,MAAAA,KAAK,CAACe,mBAAN,CAA0B,IAA1B;AACD;AACF,GALQ,CAAT;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,QAAQ,EAAEf,KAAK,CAACgB,QAAN,CAAeC,QAAf,GAA0B,OAA1B,GAAoC,MAAlE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEhB,CAAC,CAAC,eAAD,CADV;AAEE,MAAA,OAAO,EAAED,KAAK,CAACgB,QAAN,CAAeC,QAF1B;AAGE,MAAA,QAAQ,EAAE,MAAMjB,KAAK,CAACe,mBAAN,CAA0B,CAACf,KAAK,CAACgB,QAAN,CAAeC,QAA1C;AAHlB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,QAAD;AACE,MAAA,KAAK,EAAEhB,CAAC,CAAC,oBAAD,CADV;AAEE,MAAA,OAAO,EAAED,KAAK,CAACgB,QAAN,CAAeE,YAF1B;AAGE,MAAA,QAAQ,EAAE,MACRlB,KAAK,CAACmB,oBAAN,CAA2B,CAACnB,KAAK,CAACgB,QAAN,CAAeE,YAA3C;AAJJ;AAAA;AAAA;AAAA;AAAA,YANF,eAaE,QAAC,UAAD;AACE,MAAA,KAAK,EAAE,eADT;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAElB,KAAK,CAACgB,QAAN,CAAeI,cAHxB;AAIE,MAAA,OAAO,EAAElB,eAJX;AAKE,MAAA,QAAQ,EAAGmB,CAAD,IAAOrB,KAAK,CAACsB,sBAAN,CAA6BD,CAAC,CAACE,MAAF,CAASnB,KAAtC;AALnB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9CM;;GAAML,Q;UACGH,c;;;KADHG,Q","sourcesContent":["import { Checkbox, Pane, RadioGroup } from 'evergreen-ui';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../i18n';\nimport { Translations } from '../translations';\nimport './style.css';\n\nexport const Settings = (props) => {\n  const { t } = useTranslation();\n  const encryptionModes = [\n    { label: '无', value: '' },\n    { label: 'WPA/WPA2/WPA3', value: 'WPA' },\n    // { label: 'WPA2-EAP', value: 'WPA2-EAP' },\n    { label: 'WEP', value: 'WEP' },\n  ];\n  const langSelectDefaultValue = () => {\n    const t = Translations.filter((t) => t.id === i18n.language);\n    if (t.length !== 1) {\n      return 'en-US';\n    }\n    return t[0].id;\n  };\n\n  useEffect(() => {\n    if (props.firstLoad.current && window.innerWidth < 500) {\n      props.onFirstLoad();\n      props.onOrientationChange(true);\n    }\n  });\n\n  return (\n    <Pane id=\"settings\" maxWidth={props.settings.portrait ? '350px' : '100%'}>\n      <Checkbox\n        label={t('button.rotate')}\n        checked={props.settings.portrait}\n        onChange={() => props.onOrientationChange(!props.settings.portrait)}\n      />\n      <Checkbox\n        label={t('wifi.password.hide')}\n        checked={props.settings.hidePassword}\n        onChange={() =>\n          props.onHidePasswordChange(!props.settings.hidePassword)\n        }\n      />\n      <RadioGroup\n        label={'请选择该wifi的加密方式'}\n        size={16}\n        value={props.settings.encryptionMode}\n        options={encryptionModes}\n        onChange={(e) => props.onEncryptionModeChange(e.target.value)}\n      />\n    </Pane>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}