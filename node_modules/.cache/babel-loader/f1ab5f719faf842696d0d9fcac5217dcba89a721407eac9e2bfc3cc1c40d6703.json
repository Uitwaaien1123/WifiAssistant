{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"accept\", \"browseOrReplaceText\", \"capture\", \"className\", \"disabled\", \"height\", \"inputText\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"placeholder\", \"required\"];\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Button } from '../../buttons';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { TextInput } from '../../text-input';\nexport var CLASS_PREFIX = 'evergreen-file-picker';\n\nvar getBrowseOrReplaceText = function getBrowseOrReplaceText(fileCount) {\n  var action = fileCount === 0 ? 'Select' : 'Replace';\n  var fileLabel = fileCount > 1 ? 'files' : 'file';\n  return \"\".concat(action, \" \").concat(fileLabel);\n};\n\nvar getInputValue = function getInputValue(files) {\n  if (files.length === 1) {\n    return files[0].name;\n  }\n\n  if (files.length > 1) {\n    return \"\".concat(files.length, \" files\");\n  }\n\n  return '';\n};\n\nvar FilePicker = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FilePicker(props, ref) {\n  var accept = props.accept,\n      _props$browseOrReplac = props.browseOrReplaceText,\n      browseOrReplaceText = _props$browseOrReplac === void 0 ? getBrowseOrReplaceText : _props$browseOrReplac,\n      capture = props.capture,\n      className = props.className,\n      disabled = props.disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      _props$inputText = props.inputText,\n      inputText = _props$inputText === void 0 ? getInputValue : _props$inputText,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? 'Select a file to uploadâ€¦' : _props$placeholder,\n      required = props.required,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var fileInputRef = useRef();\n  var handleFileChange = useCallback(function (e) {\n    // Firefox returns the same array instance each time for some reason\n    var filesCopy = _toConsumableArray(e.target.files);\n\n    setFiles(filesCopy);\n    safeInvoke(onChange, filesCopy);\n  }, [onChange]);\n  var handleButtonClick = useCallback(function () {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    // Setting e.target.files to an array fails. It must be a FileList\n    if (e && e.target) {\n      e.target.files = fileInputRef.current && fileInputRef.current.files;\n    }\n\n    safeInvoke(onBlur, e);\n  }, [onBlur]);\n  var rootClassNames = cx(\"\".concat(CLASS_PREFIX, \"-root\"), className);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    display: \"flex\",\n    className: rootClassNames,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(Box, {\n    ref: fileInputRef,\n    className: \"\".concat(CLASS_PREFIX, \"-file-input\"),\n    is: \"input\",\n    type: \"file\",\n    name: name,\n    accept: accept,\n    required: required,\n    multiple: multiple,\n    disabled: disabled,\n    capture: capture,\n    onChange: handleFileChange,\n    display: \"none\"\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    className: \"\".concat(CLASS_PREFIX, \"-text-input\"),\n    readOnly: true,\n    value: inputText(files),\n    placeholder: placeholder // There's a weird specifity issue when there's two differently sized inputs on the page\n    ,\n    borderTopRightRadius: \"0 !important\",\n    borderBottomRightRadius: \"0 !important\",\n    height: height,\n    flex: 1,\n    textOverflow: \"ellipsis\",\n    onBlur: handleBlur\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"\".concat(CLASS_PREFIX, \"-button\"),\n    onClick: handleButtonClick,\n    disabled: disabled,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    marginLeft: -1,\n    height: height,\n    flexShrink: 0,\n    type: \"button\",\n    onBlur: handleBlur\n  }, browseOrReplaceText(files.length)));\n}));\nFilePicker.propTypes = {\n  /**\n   * Name attribute of the input.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The accept attribute of the input.\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * When true, the file picker is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, accept multiple files.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * When true, the filepicker is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The capture attribute of the input.\n   */\n  capture: PropTypes.bool,\n\n  /**\n   * The height of the file picker.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Function called when onChange is fired.\n   * (files: FileList) => void\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Function called when onBlur is fired.\n   * (event: React.FocusEvent) => void\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Placeholder of the text input\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Class name passed to the FilePicker.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Function that returns the call-to-action button text for selecting files.\n   * @type {(fileCount: number) => string}\n   */\n  browseOrReplaceText: PropTypes.func,\n\n  /**\n   * Function that returns the text in the input field.\n   * @type {(files: File[]) => string}\n   */\n  inputText: PropTypes.func\n};\nexport default FilePicker;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/evergreen-ui/esm/file-picker/src/FilePicker.js"],"names":["_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","memo","forwardRef","useState","useRef","useCallback","cx","PropTypes","Box","Button","safeInvoke","TextInput","CLASS_PREFIX","getBrowseOrReplaceText","fileCount","action","fileLabel","concat","getInputValue","files","length","name","FilePicker","props","ref","accept","_props$browseOrReplac","browseOrReplaceText","capture","className","disabled","_props$height","height","_props$inputText","inputText","multiple","onBlur","onChange","_props$placeholder","placeholder","required","rest","_useState","_useState2","setFiles","fileInputRef","handleFileChange","e","filesCopy","target","handleButtonClick","current","click","handleBlur","rootClassNames","createElement","display","is","type","readOnly","value","borderTopRightRadius","borderBottomRightRadius","flex","textOverflow","onClick","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","flexShrink","propTypes","string","oneOfType","arrayOf","bool","number","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"accept\", \"browseOrReplaceText\", \"capture\", \"className\", \"disabled\", \"height\", \"inputText\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"placeholder\", \"required\"];\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Button } from '../../buttons';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { TextInput } from '../../text-input';\nexport var CLASS_PREFIX = 'evergreen-file-picker';\n\nvar getBrowseOrReplaceText = function getBrowseOrReplaceText(fileCount) {\n  var action = fileCount === 0 ? 'Select' : 'Replace';\n  var fileLabel = fileCount > 1 ? 'files' : 'file';\n  return \"\".concat(action, \" \").concat(fileLabel);\n};\n\nvar getInputValue = function getInputValue(files) {\n  if (files.length === 1) {\n    return files[0].name;\n  }\n\n  if (files.length > 1) {\n    return \"\".concat(files.length, \" files\");\n  }\n\n  return '';\n};\n\nvar FilePicker = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FilePicker(props, ref) {\n  var accept = props.accept,\n      _props$browseOrReplac = props.browseOrReplaceText,\n      browseOrReplaceText = _props$browseOrReplac === void 0 ? getBrowseOrReplaceText : _props$browseOrReplac,\n      capture = props.capture,\n      className = props.className,\n      disabled = props.disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      _props$inputText = props.inputText,\n      inputText = _props$inputText === void 0 ? getInputValue : _props$inputText,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? 'Select a file to uploadâ€¦' : _props$placeholder,\n      required = props.required,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var fileInputRef = useRef();\n  var handleFileChange = useCallback(function (e) {\n    // Firefox returns the same array instance each time for some reason\n    var filesCopy = _toConsumableArray(e.target.files);\n\n    setFiles(filesCopy);\n    safeInvoke(onChange, filesCopy);\n  }, [onChange]);\n  var handleButtonClick = useCallback(function () {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    // Setting e.target.files to an array fails. It must be a FileList\n    if (e && e.target) {\n      e.target.files = fileInputRef.current && fileInputRef.current.files;\n    }\n\n    safeInvoke(onBlur, e);\n  }, [onBlur]);\n  var rootClassNames = cx(\"\".concat(CLASS_PREFIX, \"-root\"), className);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    display: \"flex\",\n    className: rootClassNames,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(Box, {\n    ref: fileInputRef,\n    className: \"\".concat(CLASS_PREFIX, \"-file-input\"),\n    is: \"input\",\n    type: \"file\",\n    name: name,\n    accept: accept,\n    required: required,\n    multiple: multiple,\n    disabled: disabled,\n    capture: capture,\n    onChange: handleFileChange,\n    display: \"none\"\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    className: \"\".concat(CLASS_PREFIX, \"-text-input\"),\n    readOnly: true,\n    value: inputText(files),\n    placeholder: placeholder // There's a weird specifity issue when there's two differently sized inputs on the page\n    ,\n    borderTopRightRadius: \"0 !important\",\n    borderBottomRightRadius: \"0 !important\",\n    height: height,\n    flex: 1,\n    textOverflow: \"ellipsis\",\n    onBlur: handleBlur\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"\".concat(CLASS_PREFIX, \"-button\"),\n    onClick: handleButtonClick,\n    disabled: disabled,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    marginLeft: -1,\n    height: height,\n    flexShrink: 0,\n    type: \"button\",\n    onBlur: handleBlur\n  }, browseOrReplaceText(files.length)));\n}));\nFilePicker.propTypes = {\n  /**\n   * Name attribute of the input.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The accept attribute of the input.\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * When true, the file picker is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, accept multiple files.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * When true, the filepicker is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The capture attribute of the input.\n   */\n  capture: PropTypes.bool,\n\n  /**\n   * The height of the file picker.\n   */\n  height: PropTypes.number,\n\n  /**\n   * Function called when onChange is fired.\n   * (files: FileList) => void\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Function called when onBlur is fired.\n   * (event: React.FocusEvent) => void\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Placeholder of the text input\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Class name passed to the FilePicker.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Function that returns the call-to-action button text for selecting files.\n   * @type {(fileCount: number) => string}\n   */\n  browseOrReplaceText: PropTypes.func,\n\n  /**\n   * Function that returns the text in the input field.\n   * @type {(files: File[]) => string}\n   */\n  inputText: PropTypes.func\n};\nexport default FilePicker;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}