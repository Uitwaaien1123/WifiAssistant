{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"addOnBlur\", \"disabled\", \"height\", \"separator\", \"values\", \"tagSubmitKey\", \"tagProps\", \"onAdd\", \"onChange\", \"onRemove\", \"onBlur\", \"onFocus\", \"onInputChange\", \"className\", \"inputProps\", \"inputRef\", \"isInvalid\", \"autocompleteItems\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"onBlur\", \"onChange\", \"onKeyDown\"];\n/**\n * @overview TagInput accepts multiple values that can be individually removed\n */\n\nimport React, { memo, forwardRef, useState } from 'react';\nimport cx from 'classnames';\nimport omit from 'lodash.omit';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Autocomplete } from '../../autocomplete';\nimport { Button } from '../../buttons';\nimport { useId, useStyleConfig } from '../../hooks';\nimport { CaretDownIcon } from '../../icons';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale, minorScale } from '../../scales';\nimport { TextInput } from '../../text-input';\nimport Tag from './Tag';\nvar GET_KEY_FOR_TAG_DELIMITER = {\n  enter: 'Enter',\n  space: ' '\n};\nvar emptyProps = {};\nvar emptyArray = [];\nvar internalStyles = {\n  alignItems: 'center',\n  display: 'inline-flex',\n  flexWrap: 'wrap',\n  position: 'relative'\n};\nvar pseudoSelectors = {\n  _focused: '&[aria-activedescendant]',\n  _disabled: '&[aria-disabled=\"true\"]',\n  _invalid: '&[aria-invalid=\"true\"]:not(:focus)'\n};\nvar TagInput = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TagInput(props, ref) {\n  var _props$addOnBlur = props.addOnBlur,\n      addOnBlur = _props$addOnBlur === void 0 ? false : _props$addOnBlur,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? /[,\\n\\r]/ : _props$separator,\n      _props$values = props.values,\n      values = _props$values === void 0 ? emptyArray : _props$values,\n      _props$tagSubmitKey = props.tagSubmitKey,\n      tagSubmitKey = _props$tagSubmitKey === void 0 ? 'enter' : _props$tagSubmitKey,\n      _props$tagProps = props.tagProps,\n      tagProps = _props$tagProps === void 0 ? emptyProps : _props$tagProps,\n      onAdd = props.onAdd,\n      onChange = props.onChange,\n      onRemove = props.onRemove,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      onInputChange = props.onInputChange,\n      className = props.className,\n      _props$inputProps = props.inputProps,\n      inputProps = _props$inputProps === void 0 ? emptyProps : _props$inputProps,\n      inputRef = props.inputRef,\n      isInvalid = props.isInvalid,\n      autocompleteItems = props.autocompleteItems,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocused = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var id = useId('TagInput');\n  var autocompleteId = \"TagInputAutocomplete-\".concat(values.length);\n  var inputId = inputProps && inputProps.id ? inputProps.id : id;\n  var hasAutocomplete = Array.isArray(autocompleteItems) && autocompleteItems.length > 0;\n\n  var getValues = function getValues() {\n    var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    inputValue = inputValue || '';\n    return separator ? inputValue.split(separator).map(function (v) {\n      return v.trim();\n    }).filter(function (v) {\n      return v.length > 0;\n    }) : [inputValue];\n  };\n\n  var addTags = function addTags() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var newValues = getValues(value);\n    var shouldClearInput = safeInvoke(onAdd, newValues);\n\n    if (typeof onChange === 'function') {\n      shouldClearInput = shouldClearInput || onChange(values.concat(newValues));\n    }\n\n    if (shouldClearInput !== false) {\n      setInputValue('');\n    }\n  };\n\n  var removeTagAtIndex = function removeTagAtIndex(index) {\n    safeInvoke(onRemove, values[index], index); // Remove item at index as a new array\n\n    var newValues = values.filter(function (_, i) {\n      return i !== index;\n    });\n    safeInvoke(onChange, newValues);\n  };\n\n  var handleBackspaceToRemove = function handleBackspaceToRemove() {\n    removeTagAtIndex(values.length - 1);\n  };\n\n  var handleBlur = function handleBlur(event) {\n    var container = event.target;\n    requestAnimationFrame(function () {\n      if (!container.contains(document.activeElement)) {\n        if (addOnBlur && inputValue) {\n          addTags(inputValue);\n          setInputValue('');\n        }\n\n        setIsFocused(false);\n      }\n    });\n    safeInvoke(onBlur, event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setInputValue(event.target.value);\n    safeInvoke(onInputChange, event);\n  };\n\n  var handleInputFocus = function handleInputFocus(event) {\n    setIsFocused(true);\n    safeInvoke(onFocus, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var _event$target = event.target,\n        selectionEnd = _event$target.selectionEnd,\n        value = _event$target.value;\n    var key = GET_KEY_FOR_TAG_DELIMITER[tagSubmitKey];\n\n    if (event.key === key) {\n      event.preventDefault();\n      addTags(value);\n    } else if (event.key === 'Backspace' && selectionEnd === 0) {\n      handleBackspaceToRemove(event);\n    }\n  };\n\n  var handleRemoveTag = function handleRemoveTag(event) {\n    // Using data attribute to simplify callback logic -- one handler for all children\n    var index = Number(event.currentTarget.parentElement.getAttribute('data-tag-index'));\n    removeTagAtIndex(index);\n  };\n\n  var maybeRenderTag = function maybeRenderTag(tag, index) {\n    if (!tag) {\n      return null;\n    }\n\n    var propsForElement = safeInvoke(tagProps, tag, index) || tagProps;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      key: \"\".concat(tag, \":\").concat(index),\n      \"data-tag-index\": index,\n      marginX: majorScale(1),\n      marginY: minorScale(1) * 1.5,\n      onRemove: disabled ? null : handleRemoveTag,\n      isRemovable: !disabled\n    }, propsForElement), tag);\n  };\n\n  var _useStyleConfig = useStyleConfig('TagInput', {\n    appearance: 'default',\n    height: height\n  }, pseudoSelectors, internalStyles),\n      themedContainerClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled || undefined,\n    \"aria-activedescendant\": isFocused ? inputId : undefined,\n    \"aria-invalid\": isInvalid,\n    className: cx(themedContainerClassName, className),\n    ref: ref,\n    onBlur: handleBlur\n  }, boxProps, rest, {\n    paddingRight: hasAutocomplete ? majorScale(3) : undefined\n  }), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: \"1\",\n    display: \"inline-block\"\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: function onChange(changedItem) {\n      addTags(changedItem);\n      setInputValue('');\n    },\n    items: hasAutocomplete ? autocompleteItems : [],\n    id: autocompleteId,\n    selectedItem: \"\",\n    inputValue: inputValue\n  }, function (autocompleteProps) {\n    var closeMenu = autocompleteProps.closeMenu,\n        getInputProps = autocompleteProps.getInputProps,\n        autocompleteGetRef = autocompleteProps.getRef,\n        getToggleButtonProps = autocompleteProps.getToggleButtonProps,\n        highlightedIndex = autocompleteProps.highlightedIndex;\n\n    var _getInputProps = getInputProps(),\n        autocompleteOnBlur = _getInputProps.onBlur,\n        autocompleteOnChange = _getInputProps.onChange,\n        autocompleteKeyDown = _getInputProps.onKeyDown,\n        autocompleteRestProps = _objectWithoutProperties(_getInputProps, _excluded3);\n\n    var handleAutocompleteKeydown = function handleAutocompleteKeydown(e) {\n      autocompleteKeyDown(e);\n\n      if (e.key === 'Backspace' || !(highlightedIndex > -1)) {\n        handleKeyDown(e);\n\n        if (e.key === GET_KEY_FOR_TAG_DELIMITER[tagSubmitKey]) {\n          closeMenu();\n          setInputValue('');\n        }\n      }\n\n      if (e.key === 'Backspace' && e.target.selectionEnd === 0) {\n        closeMenu();\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      ref: function ref(boxInputRef) {\n        autocompleteGetRef(boxInputRef);\n      },\n      flexWrap: \"wrap\",\n      width: inputProps.width\n    }, values.map(maybeRenderTag), /*#__PURE__*/React.createElement(TextInput, _extends({\n      appearance: \"none\",\n      disabled: disabled,\n      height: height - 4,\n      flexGrow: \"1\",\n      type: \"text\"\n    }, omit(inputProps, ['width']), autocompleteRestProps, {\n      value: inputValue,\n      id: inputId,\n      ref: function ref(textInputRef) {\n        if (inputRef instanceof Function) {\n          inputRef(textInputRef);\n        } else if (inputRef) {\n          inputRef.current = textInputRef;\n        }\n      },\n      onBlur: function onBlur(e) {\n        autocompleteOnBlur(e);\n        safeInvoke(inputProps.onBlur, e);\n      },\n      onFocus: function onFocus(e) {\n        handleInputFocus(e);\n        safeInvoke(inputProps.onFocus, e);\n      },\n      onChange: function onChange(e) {\n        handleInputChange(e);\n        autocompleteOnChange(e);\n      },\n      onKeyDown: handleAutocompleteKeydown\n    })), hasAutocomplete && /*#__PURE__*/React.createElement(Button, _extends({\n      appearance: \"none\",\n      background: \"gray100\",\n      position: \"absolute\",\n      top: minorScale(1) * 1.5,\n      right: minorScale(1),\n      height: minorScale(5),\n      padding: 0,\n      width: minorScale(5),\n      minWidth: minorScale(5),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: minorScale(1),\n      cursor: disabled ? undefined : 'pointer',\n      \"data-testid\": \"TagInput-autocomplete-toggle\"\n    }, getToggleButtonProps()), /*#__PURE__*/React.createElement(CaretDownIcon, {\n      color: \"muted\"\n    })));\n  })));\n}));\nTagInput.propTypes = {\n  /** Whether or not the inputValue should be added to the tags when the input blurs. */\n  addOnBlur: PropTypes.bool,\n\n  /** Autocomplete options to show when typing in a new value */\n  autocompleteItems: PropTypes.array,\n\n  /** The class name to apply to the container component. */\n  className: PropTypes.string,\n\n  /** Whether or not the input should be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Whether or not the input is invalid. */\n  isInvalid: PropTypes.bool,\n\n  /** The vertical size of the input */\n  height: PropTypes.number,\n\n  /** Props to pass to the input component. Note that `ref` and `key` are not supported. See `inputRef`. */\n  inputProps: PropTypes.object,\n\n  /**\n   * Ref handler for the input element.\n   * (input: HTMLInputElement | null) => void\n   */\n  inputRef: PropTypes.func,\n\n  /**\n   * Callback invoked when new tags are added.\n   * Returning `false` will prevent clearing the input.\n   * (values: Array) => void | false\n   */\n  onAdd: PropTypes.func,\n\n  /**\n   * Callback invoked when focus on the input blurs.\n   * (event) => void\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback invoked when the tag values change.\n   * Returning `false` will prevent clearing the input.\n   * (values: Array) => void | false\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback invoked when the input receives focus.\n   * (event) => void\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback invoked when the value of the input is changed. Shorthand for `inputProps={{ onChange }}`.\n   * (event) => void\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback invoked when a tag is removed.\n   * Receives value and index of removed tag.\n   * (value: string | node, index: number) => void\n   */\n  onRemove: PropTypes.func,\n\n  /** Value or RegExp to split on pasted text or on enter keypress */\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp), PropTypes.oneOf([false])]),\n\n  /** Provide props to tag component (actually `Badge`, for now). */\n  tagProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /** Key to press in order to submit a new tag while typing.  */\n  tagSubmitKey: PropTypes.oneOf(['enter', 'space']),\n\n  /** Controlled tag values. Each value is rendered inside a tag. */\n  values: PropTypes.arrayOf(PropTypes.node)\n};\nexport default TagInput;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/evergreen-ui/esm/tag-input/src/TagInput.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","_excluded2","_excluded3","React","memo","forwardRef","useState","cx","omit","PropTypes","Box","Autocomplete","Button","useId","useStyleConfig","CaretDownIcon","safeInvoke","majorScale","minorScale","TextInput","Tag","GET_KEY_FOR_TAG_DELIMITER","enter","space","emptyProps","emptyArray","internalStyles","alignItems","display","flexWrap","position","pseudoSelectors","_focused","_disabled","_invalid","TagInput","props","ref","_props$addOnBlur","addOnBlur","_props$disabled","disabled","_props$height","height","_props$separator","separator","_props$values","values","_props$tagSubmitKey","tagSubmitKey","_props$tagProps","tagProps","onAdd","onChange","onRemove","onBlur","onFocus","onInputChange","className","_props$inputProps","inputProps","inputRef","isInvalid","autocompleteItems","rest","_useState","_useState2","inputValue","setInputValue","_useState3","_useState4","isFocused","setIsFocused","id","autocompleteId","concat","length","inputId","hasAutocomplete","Array","isArray","getValues","arguments","undefined","split","map","v","trim","filter","addTags","value","newValues","shouldClearInput","removeTagAtIndex","index","_","i","handleBackspaceToRemove","handleBlur","event","container","target","requestAnimationFrame","contains","document","activeElement","handleInputChange","handleInputFocus","handleKeyDown","_event$target","selectionEnd","key","preventDefault","handleRemoveTag","Number","currentTarget","parentElement","getAttribute","maybeRenderTag","tag","propsForElement","createElement","marginX","marginY","isRemovable","_useStyleConfig","appearance","themedContainerClassName","boxProps","paddingRight","flexGrow","changedItem","items","selectedItem","autocompleteProps","closeMenu","getInputProps","autocompleteGetRef","getRef","getToggleButtonProps","highlightedIndex","_getInputProps","autocompleteOnBlur","autocompleteOnChange","autocompleteKeyDown","onKeyDown","autocompleteRestProps","handleAutocompleteKeydown","e","boxInputRef","width","type","textInputRef","Function","current","background","top","right","padding","minWidth","justifyContent","borderRadius","cursor","color","propTypes","bool","array","string","number","object","func","oneOfType","instanceOf","RegExp","oneOf","arrayOf","node"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"addOnBlur\", \"disabled\", \"height\", \"separator\", \"values\", \"tagSubmitKey\", \"tagProps\", \"onAdd\", \"onChange\", \"onRemove\", \"onBlur\", \"onFocus\", \"onInputChange\", \"className\", \"inputProps\", \"inputRef\", \"isInvalid\", \"autocompleteItems\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"onBlur\", \"onChange\", \"onKeyDown\"];\n\n/**\n * @overview TagInput accepts multiple values that can be individually removed\n */\nimport React, { memo, forwardRef, useState } from 'react';\nimport cx from 'classnames';\nimport omit from 'lodash.omit';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Autocomplete } from '../../autocomplete';\nimport { Button } from '../../buttons';\nimport { useId, useStyleConfig } from '../../hooks';\nimport { CaretDownIcon } from '../../icons';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale, minorScale } from '../../scales';\nimport { TextInput } from '../../text-input';\nimport Tag from './Tag';\nvar GET_KEY_FOR_TAG_DELIMITER = {\n  enter: 'Enter',\n  space: ' '\n};\nvar emptyProps = {};\nvar emptyArray = [];\nvar internalStyles = {\n  alignItems: 'center',\n  display: 'inline-flex',\n  flexWrap: 'wrap',\n  position: 'relative'\n};\nvar pseudoSelectors = {\n  _focused: '&[aria-activedescendant]',\n  _disabled: '&[aria-disabled=\"true\"]',\n  _invalid: '&[aria-invalid=\"true\"]:not(:focus)'\n};\nvar TagInput = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TagInput(props, ref) {\n  var _props$addOnBlur = props.addOnBlur,\n      addOnBlur = _props$addOnBlur === void 0 ? false : _props$addOnBlur,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? /[,\\n\\r]/ : _props$separator,\n      _props$values = props.values,\n      values = _props$values === void 0 ? emptyArray : _props$values,\n      _props$tagSubmitKey = props.tagSubmitKey,\n      tagSubmitKey = _props$tagSubmitKey === void 0 ? 'enter' : _props$tagSubmitKey,\n      _props$tagProps = props.tagProps,\n      tagProps = _props$tagProps === void 0 ? emptyProps : _props$tagProps,\n      onAdd = props.onAdd,\n      onChange = props.onChange,\n      onRemove = props.onRemove,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      onInputChange = props.onInputChange,\n      className = props.className,\n      _props$inputProps = props.inputProps,\n      inputProps = _props$inputProps === void 0 ? emptyProps : _props$inputProps,\n      inputRef = props.inputRef,\n      isInvalid = props.isInvalid,\n      autocompleteItems = props.autocompleteItems,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocused = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var id = useId('TagInput');\n  var autocompleteId = \"TagInputAutocomplete-\".concat(values.length);\n  var inputId = inputProps && inputProps.id ? inputProps.id : id;\n  var hasAutocomplete = Array.isArray(autocompleteItems) && autocompleteItems.length > 0;\n\n  var getValues = function getValues() {\n    var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    inputValue = inputValue || '';\n    return separator ? inputValue.split(separator).map(function (v) {\n      return v.trim();\n    }).filter(function (v) {\n      return v.length > 0;\n    }) : [inputValue];\n  };\n\n  var addTags = function addTags() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var newValues = getValues(value);\n    var shouldClearInput = safeInvoke(onAdd, newValues);\n\n    if (typeof onChange === 'function') {\n      shouldClearInput = shouldClearInput || onChange(values.concat(newValues));\n    }\n\n    if (shouldClearInput !== false) {\n      setInputValue('');\n    }\n  };\n\n  var removeTagAtIndex = function removeTagAtIndex(index) {\n    safeInvoke(onRemove, values[index], index); // Remove item at index as a new array\n\n    var newValues = values.filter(function (_, i) {\n      return i !== index;\n    });\n    safeInvoke(onChange, newValues);\n  };\n\n  var handleBackspaceToRemove = function handleBackspaceToRemove() {\n    removeTagAtIndex(values.length - 1);\n  };\n\n  var handleBlur = function handleBlur(event) {\n    var container = event.target;\n    requestAnimationFrame(function () {\n      if (!container.contains(document.activeElement)) {\n        if (addOnBlur && inputValue) {\n          addTags(inputValue);\n          setInputValue('');\n        }\n\n        setIsFocused(false);\n      }\n    });\n    safeInvoke(onBlur, event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setInputValue(event.target.value);\n    safeInvoke(onInputChange, event);\n  };\n\n  var handleInputFocus = function handleInputFocus(event) {\n    setIsFocused(true);\n    safeInvoke(onFocus, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var _event$target = event.target,\n        selectionEnd = _event$target.selectionEnd,\n        value = _event$target.value;\n    var key = GET_KEY_FOR_TAG_DELIMITER[tagSubmitKey];\n\n    if (event.key === key) {\n      event.preventDefault();\n      addTags(value);\n    } else if (event.key === 'Backspace' && selectionEnd === 0) {\n      handleBackspaceToRemove(event);\n    }\n  };\n\n  var handleRemoveTag = function handleRemoveTag(event) {\n    // Using data attribute to simplify callback logic -- one handler for all children\n    var index = Number(event.currentTarget.parentElement.getAttribute('data-tag-index'));\n    removeTagAtIndex(index);\n  };\n\n  var maybeRenderTag = function maybeRenderTag(tag, index) {\n    if (!tag) {\n      return null;\n    }\n\n    var propsForElement = safeInvoke(tagProps, tag, index) || tagProps;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      key: \"\".concat(tag, \":\").concat(index),\n      \"data-tag-index\": index,\n      marginX: majorScale(1),\n      marginY: minorScale(1) * 1.5,\n      onRemove: disabled ? null : handleRemoveTag,\n      isRemovable: !disabled\n    }, propsForElement), tag);\n  };\n\n  var _useStyleConfig = useStyleConfig('TagInput', {\n    appearance: 'default',\n    height: height\n  }, pseudoSelectors, internalStyles),\n      themedContainerClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled || undefined,\n    \"aria-activedescendant\": isFocused ? inputId : undefined,\n    \"aria-invalid\": isInvalid,\n    className: cx(themedContainerClassName, className),\n    ref: ref,\n    onBlur: handleBlur\n  }, boxProps, rest, {\n    paddingRight: hasAutocomplete ? majorScale(3) : undefined\n  }), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: \"1\",\n    display: \"inline-block\"\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: function onChange(changedItem) {\n      addTags(changedItem);\n      setInputValue('');\n    },\n    items: hasAutocomplete ? autocompleteItems : [],\n    id: autocompleteId,\n    selectedItem: \"\",\n    inputValue: inputValue\n  }, function (autocompleteProps) {\n    var closeMenu = autocompleteProps.closeMenu,\n        getInputProps = autocompleteProps.getInputProps,\n        autocompleteGetRef = autocompleteProps.getRef,\n        getToggleButtonProps = autocompleteProps.getToggleButtonProps,\n        highlightedIndex = autocompleteProps.highlightedIndex;\n\n    var _getInputProps = getInputProps(),\n        autocompleteOnBlur = _getInputProps.onBlur,\n        autocompleteOnChange = _getInputProps.onChange,\n        autocompleteKeyDown = _getInputProps.onKeyDown,\n        autocompleteRestProps = _objectWithoutProperties(_getInputProps, _excluded3);\n\n    var handleAutocompleteKeydown = function handleAutocompleteKeydown(e) {\n      autocompleteKeyDown(e);\n\n      if (e.key === 'Backspace' || !(highlightedIndex > -1)) {\n        handleKeyDown(e);\n\n        if (e.key === GET_KEY_FOR_TAG_DELIMITER[tagSubmitKey]) {\n          closeMenu();\n          setInputValue('');\n        }\n      }\n\n      if (e.key === 'Backspace' && e.target.selectionEnd === 0) {\n        closeMenu();\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      ref: function ref(boxInputRef) {\n        autocompleteGetRef(boxInputRef);\n      },\n      flexWrap: \"wrap\",\n      width: inputProps.width\n    }, values.map(maybeRenderTag), /*#__PURE__*/React.createElement(TextInput, _extends({\n      appearance: \"none\",\n      disabled: disabled,\n      height: height - 4,\n      flexGrow: \"1\",\n      type: \"text\"\n    }, omit(inputProps, ['width']), autocompleteRestProps, {\n      value: inputValue,\n      id: inputId,\n      ref: function ref(textInputRef) {\n        if (inputRef instanceof Function) {\n          inputRef(textInputRef);\n        } else if (inputRef) {\n          inputRef.current = textInputRef;\n        }\n      },\n      onBlur: function onBlur(e) {\n        autocompleteOnBlur(e);\n        safeInvoke(inputProps.onBlur, e);\n      },\n      onFocus: function onFocus(e) {\n        handleInputFocus(e);\n        safeInvoke(inputProps.onFocus, e);\n      },\n      onChange: function onChange(e) {\n        handleInputChange(e);\n        autocompleteOnChange(e);\n      },\n      onKeyDown: handleAutocompleteKeydown\n    })), hasAutocomplete && /*#__PURE__*/React.createElement(Button, _extends({\n      appearance: \"none\",\n      background: \"gray100\",\n      position: \"absolute\",\n      top: minorScale(1) * 1.5,\n      right: minorScale(1),\n      height: minorScale(5),\n      padding: 0,\n      width: minorScale(5),\n      minWidth: minorScale(5),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: minorScale(1),\n      cursor: disabled ? undefined : 'pointer',\n      \"data-testid\": \"TagInput-autocomplete-toggle\"\n    }, getToggleButtonProps()), /*#__PURE__*/React.createElement(CaretDownIcon, {\n      color: \"muted\"\n    })));\n  })));\n}));\nTagInput.propTypes = {\n  /** Whether or not the inputValue should be added to the tags when the input blurs. */\n  addOnBlur: PropTypes.bool,\n\n  /** Autocomplete options to show when typing in a new value */\n  autocompleteItems: PropTypes.array,\n\n  /** The class name to apply to the container component. */\n  className: PropTypes.string,\n\n  /** Whether or not the input should be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Whether or not the input is invalid. */\n  isInvalid: PropTypes.bool,\n\n  /** The vertical size of the input */\n  height: PropTypes.number,\n\n  /** Props to pass to the input component. Note that `ref` and `key` are not supported. See `inputRef`. */\n  inputProps: PropTypes.object,\n\n  /**\n   * Ref handler for the input element.\n   * (input: HTMLInputElement | null) => void\n   */\n  inputRef: PropTypes.func,\n\n  /**\n   * Callback invoked when new tags are added.\n   * Returning `false` will prevent clearing the input.\n   * (values: Array) => void | false\n   */\n  onAdd: PropTypes.func,\n\n  /**\n   * Callback invoked when focus on the input blurs.\n   * (event) => void\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback invoked when the tag values change.\n   * Returning `false` will prevent clearing the input.\n   * (values: Array) => void | false\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback invoked when the input receives focus.\n   * (event) => void\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback invoked when the value of the input is changed. Shorthand for `inputProps={{ onChange }}`.\n   * (event) => void\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback invoked when a tag is removed.\n   * Receives value and index of removed tag.\n   * (value: string | node, index: number) => void\n   */\n  onRemove: PropTypes.func,\n\n  /** Value or RegExp to split on pasted text or on enter keypress */\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp), PropTypes.oneOf([false])]),\n\n  /** Provide props to tag component (actually `Badge`, for now). */\n  tagProps: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /** Key to press in order to submit a new tag while typing.  */\n  tagSubmitKey: PropTypes.oneOf(['enter', 'space']),\n\n  /** Controlled tag values. Each value is rendered inside a tag. */\n  values: PropTypes.arrayOf(PropTypes.node)\n};\nexport default TagInput;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}