{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"color\", \"forceShowInitials\", \"getInitials\", \"hashValue\", \"name\", \"shape\", \"size\", \"sizeLimitOneCharacter\", \"src\"],\n    _excluded2 = [\"className\"];\nimport React, { useState, memo, forwardRef, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nimport { Image } from '../../image';\nimport { Text } from '../../typography';\nimport globalGetInitials from './utils/getInitials';\nimport globalHash from './utils/hash';\nvar imageStyles = {\n  objectFit: 'cover'\n};\nvar pseudoSelectors = {};\nvar internalStyles = {\n  overflow: 'hidden',\n  position: 'relative',\n  display: 'inline-flex',\n  flexShrink: 0,\n  justifyContent: 'center'\n};\nvar isObjectFitSupported = typeof document !== 'undefined' && 'objectFit' in document.documentElement.style;\n\nvar getAvatarInitialsFontSize = function getAvatarInitialsFontSize(size, sizeLimitOneCharacter) {\n  if (size <= sizeLimitOneCharacter) {\n    return Math.floor(size / 2.2);\n  }\n\n  return Math.floor(size / 2.6);\n};\n\nvar Avatar = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Avatar(props, ref) {\n  var className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'automatic' : _props$color,\n      _props$forceShowIniti = props.forceShowInitials,\n      forceShowInitials = _props$forceShowIniti === void 0 ? false : _props$forceShowIniti,\n      _props$getInitials = props.getInitials,\n      getInitials = _props$getInitials === void 0 ? globalGetInitials : _props$getInitials,\n      propsHashValue = props.hashValue,\n      name = props.name,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'round' : _props$shape,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 24 : _props$size,\n      _props$sizeLimitOneCh = props.sizeLimitOneCharacter,\n      sizeLimitOneCharacter = _props$sizeLimitOneCh === void 0 ? 20 : _props$sizeLimitOneCh,\n      src = props.src,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var hashValue = globalHash(propsHashValue || name);\n\n  var _useStyleConfig = useStyleConfig('Avatar', {\n    color: color,\n    hashValue: hashValue,\n    shape: shape\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageHasFailedLoading = _useState2[0],\n      setImageHasFailedLoading = _useState2[1];\n\n  var onError = useCallback(function () {\n    return setImageHasFailedLoading(true);\n  }, []);\n  var imageUnavailable = !src || imageHasFailedLoading;\n  var initialsFontSize = \"\".concat(getAvatarInitialsFontSize(size, sizeLimitOneCharacter), \"px\");\n  var initials = getInitials(name);\n\n  if (size <= sizeLimitOneCharacter) {\n    initials = initials.slice(0, 1);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    width: size,\n    height: size,\n    title: name,\n    ref: ref,\n    className: cx(className, themedClassName)\n  }, styleProps, restProps), (imageUnavailable || forceShowInitials) && /*#__PURE__*/React.createElement(Text, {\n    top: 0,\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: initialsFontSize,\n    lineHeight: initialsFontSize,\n    width: size,\n    height: size,\n    color: \"inherit\"\n  }, initials), !imageUnavailable && /*#__PURE__*/React.createElement(Image, {\n    style: imageStyles // Unsupported by ui-box directly\n    ,\n    width: isObjectFitSupported ? '100%' : 'auto' // Fallback to old behaviour on IE\n    ,\n    height: \"100%\",\n    src: src,\n    onError: onError\n  }));\n}));\nAvatar.propTypes = {\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The src attribute of the image.\n   * When it's not available, render initials instead.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The size of the avatar.\n   */\n  size: PropTypes.number,\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value used for the hash function.\n   * The name is used as the hashValue by default.\n   * When dealing with anonymous users you should use the id instead.\n   */\n  hashValue: PropTypes.string,\n\n  /**\n   * The color used for the avatar.\n   * When the value is `automatic`, use the hash function to determine the color.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Function to get the initials based on the name.\n   */\n  getInitials: PropTypes.func,\n\n  /**\n   * When true, force show the initials.\n   * This is useful in some cases when using Gravatar and transparent pngs.\n   */\n  forceShowInitials: PropTypes.bool,\n\n  /**\n   * When the size is smaller than this number, use a single initial for the avatar.\n   */\n  sizeLimitOneCharacter: PropTypes.number,\n\n  /**\n   * Allows for the shape of the avatar component to either be round or square\n   */\n  shape: PropTypes.oneOf(['round', 'square'])\n};\nexport default Avatar;","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/evergreen-ui/esm/avatar/src/Avatar.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","_excluded2","React","useState","memo","forwardRef","useCallback","cx","PropTypes","Box","useStyleConfig","Image","Text","globalGetInitials","globalHash","imageStyles","objectFit","pseudoSelectors","internalStyles","overflow","position","display","flexShrink","justifyContent","isObjectFitSupported","document","documentElement","style","getAvatarInitialsFontSize","size","sizeLimitOneCharacter","Math","floor","Avatar","props","ref","className","_props$color","color","_props$forceShowIniti","forceShowInitials","_props$getInitials","getInitials","propsHashValue","hashValue","name","_props$shape","shape","_props$size","_props$sizeLimitOneCh","src","restProps","_useStyleConfig","themedClassName","styleProps","_useState","_useState2","imageHasFailedLoading","setImageHasFailedLoading","onError","imageUnavailable","initialsFontSize","concat","initials","slice","createElement","width","height","title","top","alignItems","fontSize","lineHeight","propTypes","string","number","func","bool","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"color\", \"forceShowInitials\", \"getInitials\", \"hashValue\", \"name\", \"shape\", \"size\", \"sizeLimitOneCharacter\", \"src\"],\n    _excluded2 = [\"className\"];\nimport React, { useState, memo, forwardRef, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nimport { Image } from '../../image';\nimport { Text } from '../../typography';\nimport globalGetInitials from './utils/getInitials';\nimport globalHash from './utils/hash';\nvar imageStyles = {\n  objectFit: 'cover'\n};\nvar pseudoSelectors = {};\nvar internalStyles = {\n  overflow: 'hidden',\n  position: 'relative',\n  display: 'inline-flex',\n  flexShrink: 0,\n  justifyContent: 'center'\n};\nvar isObjectFitSupported = typeof document !== 'undefined' && 'objectFit' in document.documentElement.style;\n\nvar getAvatarInitialsFontSize = function getAvatarInitialsFontSize(size, sizeLimitOneCharacter) {\n  if (size <= sizeLimitOneCharacter) {\n    return Math.floor(size / 2.2);\n  }\n\n  return Math.floor(size / 2.6);\n};\n\nvar Avatar = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Avatar(props, ref) {\n  var className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'automatic' : _props$color,\n      _props$forceShowIniti = props.forceShowInitials,\n      forceShowInitials = _props$forceShowIniti === void 0 ? false : _props$forceShowIniti,\n      _props$getInitials = props.getInitials,\n      getInitials = _props$getInitials === void 0 ? globalGetInitials : _props$getInitials,\n      propsHashValue = props.hashValue,\n      name = props.name,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'round' : _props$shape,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 24 : _props$size,\n      _props$sizeLimitOneCh = props.sizeLimitOneCharacter,\n      sizeLimitOneCharacter = _props$sizeLimitOneCh === void 0 ? 20 : _props$sizeLimitOneCh,\n      src = props.src,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var hashValue = globalHash(propsHashValue || name);\n\n  var _useStyleConfig = useStyleConfig('Avatar', {\n    color: color,\n    hashValue: hashValue,\n    shape: shape\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageHasFailedLoading = _useState2[0],\n      setImageHasFailedLoading = _useState2[1];\n\n  var onError = useCallback(function () {\n    return setImageHasFailedLoading(true);\n  }, []);\n  var imageUnavailable = !src || imageHasFailedLoading;\n  var initialsFontSize = \"\".concat(getAvatarInitialsFontSize(size, sizeLimitOneCharacter), \"px\");\n  var initials = getInitials(name);\n\n  if (size <= sizeLimitOneCharacter) {\n    initials = initials.slice(0, 1);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    width: size,\n    height: size,\n    title: name,\n    ref: ref,\n    className: cx(className, themedClassName)\n  }, styleProps, restProps), (imageUnavailable || forceShowInitials) && /*#__PURE__*/React.createElement(Text, {\n    top: 0,\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: initialsFontSize,\n    lineHeight: initialsFontSize,\n    width: size,\n    height: size,\n    color: \"inherit\"\n  }, initials), !imageUnavailable && /*#__PURE__*/React.createElement(Image, {\n    style: imageStyles // Unsupported by ui-box directly\n    ,\n    width: isObjectFitSupported ? '100%' : 'auto' // Fallback to old behaviour on IE\n    ,\n    height: \"100%\",\n    src: src,\n    onError: onError\n  }));\n}));\nAvatar.propTypes = {\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The src attribute of the image.\n   * When it's not available, render initials instead.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The size of the avatar.\n   */\n  size: PropTypes.number,\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value used for the hash function.\n   * The name is used as the hashValue by default.\n   * When dealing with anonymous users you should use the id instead.\n   */\n  hashValue: PropTypes.string,\n\n  /**\n   * The color used for the avatar.\n   * When the value is `automatic`, use the hash function to determine the color.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Function to get the initials based on the name.\n   */\n  getInitials: PropTypes.func,\n\n  /**\n   * When true, force show the initials.\n   * This is useful in some cases when using Gravatar and transparent pngs.\n   */\n  forceShowInitials: PropTypes.bool,\n\n  /**\n   * When the size is smaller than this number, use a single initial for the avatar.\n   */\n  sizeLimitOneCharacter: PropTypes.number,\n\n  /**\n   * Allows for the shape of the avatar component to either be round or square\n   */\n  shape: PropTypes.oneOf(['round', 'square'])\n};\nexport default Avatar;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}