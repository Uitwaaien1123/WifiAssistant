{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"D:/study/WifiAssistant/WifiAssistant/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar inline_style_prefixer_1 = require(\"inline-style-prefixer\");\n\nvar decamelize_1 = __importDefault(require(\"./utils/decamelize\"));\n\nvar prefixRegex = /^(Webkit|ms|Moz|O)/;\n\nfunction prefixer(property, value) {\n  var rules = inline_style_prefixer_1.prefix(_defineProperty({}, property, value));\n  var rulesArray = [];\n  var propertyNames = Object.keys(rules);\n\n  for (var i = 0; i < propertyNames.length; i++) {\n    var propertyName = propertyNames[i];\n    var prefixedProp = propertyName.match(prefixRegex) ? \"-\".concat(propertyName) : propertyName;\n    var prop = decamelize_1.default(prefixedProp);\n    var values = rules[propertyName];\n\n    if (Array.isArray(values)) {\n      for (var j = 0; j < values.length; j++) {\n        rulesArray.push({\n          property: prop,\n          value: values[j]\n        });\n      }\n    } else {\n      rulesArray.push({\n        property: prop,\n        value: values\n      });\n    }\n  }\n\n  return rulesArray;\n}\n\nexports.default = prefixer;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/ui-box/dist/src/prefixer.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","inline_style_prefixer_1","require","decamelize_1","prefixRegex","prefixer","property","rules","prefix","rulesArray","propertyNames","keys","i","length","propertyName","prefixedProp","match","prop","default","values","Array","isArray","j","push"],"mappings":"AAAA;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,uBAAuB,GAAGC,OAAO,CAAC,uBAAD,CAAvC;;AACA,IAAMC,YAAY,GAAGT,eAAe,CAACQ,OAAO,CAAC,oBAAD,CAAR,CAApC;;AACA,IAAME,WAAW,GAAG,oBAApB;;AACA,SAASC,QAAT,CAAkBC,QAAlB,EAA4BN,KAA5B,EAAmC;AAC/B,MAAMO,KAAK,GAAGN,uBAAuB,CAACO,MAAxB,qBAAkCF,QAAlC,EAA6CN,KAA7C,EAAd;AACA,MAAMS,UAAU,GAAG,EAAnB;AACA,MAAMC,aAAa,GAAGb,MAAM,CAACc,IAAP,CAAYJ,KAAZ,CAAtB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,QAAME,YAAY,GAAGJ,aAAa,CAACE,CAAD,CAAlC;AACA,QAAMG,YAAY,GAAGD,YAAY,CAACE,KAAb,CAAmBZ,WAAnB,eACXU,YADW,IAEfA,YAFN;AAGA,QAAMG,IAAI,GAAGd,YAAY,CAACe,OAAb,CAAqBH,YAArB,CAAb;AACA,QAAMI,MAAM,GAAGZ,KAAK,CAACO,YAAD,CAApB;;AACA,QAAIM,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvB,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACN,MAA3B,EAAmCS,CAAC,EAApC,EAAwC;AACpCb,QAAAA,UAAU,CAACc,IAAX,CAAgB;AAAEjB,UAAAA,QAAQ,EAAEW,IAAZ;AAAkBjB,UAAAA,KAAK,EAAEmB,MAAM,CAACG,CAAD;AAA/B,SAAhB;AACH;AACJ,KAJD,MAKK;AACDb,MAAAA,UAAU,CAACc,IAAX,CAAgB;AAAEjB,QAAAA,QAAQ,EAAEW,IAAZ;AAAkBjB,QAAAA,KAAK,EAAEmB;AAAzB,OAAhB;AACH;AACJ;;AACD,SAAOV,UAAP;AACH;;AACDV,OAAO,CAACmB,OAAR,GAAkBb,QAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst inline_style_prefixer_1 = require(\"inline-style-prefixer\");\nconst decamelize_1 = __importDefault(require(\"./utils/decamelize\"));\nconst prefixRegex = /^(Webkit|ms|Moz|O)/;\nfunction prefixer(property, value) {\n    const rules = inline_style_prefixer_1.prefix({ [property]: value });\n    const rulesArray = [];\n    const propertyNames = Object.keys(rules);\n    for (let i = 0; i < propertyNames.length; i++) {\n        const propertyName = propertyNames[i];\n        const prefixedProp = propertyName.match(prefixRegex)\n            ? `-${propertyName}`\n            : propertyName;\n        const prop = decamelize_1.default(prefixedProp);\n        const values = rules[propertyName];\n        if (Array.isArray(values)) {\n            for (let j = 0; j < values.length; j++) {\n                rulesArray.push({ property: prop, value: values[j] });\n            }\n        }\n        else {\n            rulesArray.push({ property: prop, value: values });\n        }\n    }\n    return rulesArray;\n}\nexports.default = prefixer;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}