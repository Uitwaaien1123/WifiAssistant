{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\WifiAssistant\\\\WifiAssistant\\\\src\\\\components\\\\WifiCard.js\",\n    _s = $RefreshSig$();\n\nimport { CameraIcon, Card, Heading, MobilePhoneIcon, Pane, Paragraph, Text, TextareaField } from 'evergreen-ui';\nimport QRCode from 'qrcode.react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../../src/images/wifi.png';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WifiCard = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [qrvalue, setQrvalue] = useState('');\n\n  const escape = v => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n    let escaped = '';\n\n    for (const c of v) {\n      if (needsEscape.includes(c)) {\n        escaped += `\\\\${c}`;\n      } else {\n        escaped += c;\n      }\n    }\n\n    return escaped;\n  };\n\n  useEffect(() => {\n    const ssid = escape(props.settings.ssid);\n    const password = !props.settings.encryptionMode ? '' : escape(props.settings.password);\n    const qrval = `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};;`;\n    setQrvalue(qrval);\n  }, [props.settings]);\n\n  const portraitWidth = () => {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile ? '100%' : '280px';\n  };\n\n  const passwordFieldLabel = () => {\n    const hiddenPassword = props.settings.hidePassword || !props.settings.encryptionMode;\n    return hiddenPassword ? '' : '密码';\n  }; // const eapIdentityFieldLabel = () => {\n  //   const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n  //   return hiddenIdentity ? '' : t('wifi.identity');\n  // };\n  // const eapMethodFieldLabel = () => {\n  //   return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: \"print-area\",\n      elevation: 3,\n      style: {\n        maxWidth: props.settings.portrait ? portraitWidth() : '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pane, {\n        display: \"flex\",\n        paddingBottom: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"icon\",\n          src: logo,\n          width: \"24\",\n          height: \"24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: 700,\n          paddingRight: 10,\n          paddingLeft: 10,\n          textAlign: props.settings.portrait ? 'center' : 'unset',\n          children: '扫码连接 WiFi'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pane, {\n        className: \"details\",\n        style: {\n          flexDirection: props.settings.portrait ? 'column' : 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          className: \"qrcode\",\n          style: {\n            padding: '1em'\n          },\n          value: qrvalue,\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pane, {\n          width: '100%',\n          children: [/*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"ssid\",\n            type: \"text\",\n            marginTop: 25,\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: false,\n            maxLength: \"32\",\n            label: '网络名称',\n            placeholder: 'WiFi 网络名称',\n            value: props.settings.ssid,\n            onChange: e => props.onSSIDChange(e.target.value),\n            isInvalid: !!props.ssidError,\n            validationMessage: !!props.ssidError && props.ssidError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n            id: \"password\",\n            type: \"text\",\n            marginTop: 5,\n            maxLength: \"63\",\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: false,\n            className: `\n                ${(props.settings.hidePassword || !props.settings.encryptionMode) && 'hidden'}\n              `,\n            height: props.settings.portrait && props.settings.password.length > 40 ? '5em' : 'auto',\n            label: passwordFieldLabel(),\n            placeholder: 'WiFi 密码',\n            value: props.settings.password,\n            onChange: e => props.onPasswordChange(e.target.value),\n            isInvalid: !!props.passwordError,\n            validationMessage: !!props.passwordError && props.passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: [/*#__PURE__*/_jsxDEV(MobilePhoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: 300,\n          paddingRight: 8,\n          paddingLeft: 8,\n          children: '打开手机的相机功能，将摄像头对准二维码即可自动连接'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: [/*#__PURE__*/_jsxDEV(CameraIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: 300,\n          paddingRight: 8,\n          paddingLeft: 8,\n          children: '请不要使用微信或者支付宝的扫码功能'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WifiCard, \"JQmDaEYas/GfLViJ5/gqhd3qYPw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = WifiCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WifiCard\");","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/src/components/WifiCard.js"],"names":["CameraIcon","Card","Heading","MobilePhoneIcon","Pane","Paragraph","Text","TextareaField","QRCode","useEffect","useState","useTranslation","logo","WifiCard","props","t","qrvalue","setQrvalue","escape","v","needsEscape","escaped","c","includes","ssid","settings","password","encryptionMode","qrval","hiddenSSID","portraitWidth","isMobile","test","navigator","userAgent","passwordFieldLabel","hiddenPassword","hidePassword","maxWidth","portrait","flexDirection","padding","e","onSSIDChange","target","value","ssidError","length","onPasswordChange","passwordError"],"mappings":";;;AAAA,SACEA,UADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,eAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,aARF,QASO,cATP;AAUA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,MAAM,GAAIC,CAAD,IAAO;AACpB,UAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,CAApB;AAEA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,MAAMC,CAAX,IAAgBH,CAAhB,EAAmB;AACjB,UAAIC,WAAW,CAACG,QAAZ,CAAqBD,CAArB,CAAJ,EAA6B;AAC3BD,QAAAA,OAAO,IAAK,KAAIC,CAAE,EAAlB;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,IAAIC,CAAX;AACD;AACF;;AACD,WAAOD,OAAP;AACD,GAZD;;AAcAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,IAAI,GAAGN,MAAM,CAACJ,KAAK,CAACW,QAAN,CAAeD,IAAhB,CAAnB;AACA,UAAME,QAAQ,GAAG,CAACZ,KAAK,CAACW,QAAN,CAAeE,cAAhB,GACb,EADa,GAEbT,MAAM,CAACJ,KAAK,CAACW,QAAN,CAAeC,QAAhB,CAFV;AAGA,UAAME,KAAK,GAAI,UAASd,KAAK,CAACW,QAAN,CAAeE,cAAe,MAAKH,IAAK,MAAKE,QAAS,MAAKZ,KAAK,CAACW,QAAN,CAAeI,UAAW,IAA7G;AACAZ,IAAAA,UAAU,CAACW,KAAD,CAAV;AACD,GAPQ,EAON,CAACd,KAAK,CAACW,QAAP,CAPM,CAAT;;AASA,QAAMK,aAAa,GAAG,MAAM;AAC1B,UAAMC,QAAQ,GAAG,4BAA4BC,IAA5B,CAAiCC,SAAS,CAACC,SAA3C,CAAjB;AACA,WAAOH,QAAQ,GAAG,MAAH,GAAY,OAA3B;AACD,GAHD;;AAKA,QAAMI,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,cAAc,GAClBtB,KAAK,CAACW,QAAN,CAAeY,YAAf,IAA+B,CAACvB,KAAK,CAACW,QAAN,CAAeE,cADjD;AAEA,WAAOS,cAAc,GAAG,EAAH,GAAQ,IAA7B;AACD,GAJD,CAhCiC,CAsCjC;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,SAAS,EAAE,CAFb;AAGE,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAExB,KAAK,CAACW,QAAN,CAAec,QAAf,GAA0BT,aAAa,EAAvC,GAA4C;AAAxD,OAHT;AAAA,8BAKE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,MAAd;AAAqB,QAAA,aAAa,EAAE,EAApC;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,MAAT;AAAgB,UAAA,GAAG,EAAElB,IAArB;AAA2B,UAAA,KAAK,EAAC,IAAjC;AAAsC,UAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AACE,UAAA,IAAI,EAAE,GADR;AAEE,UAAA,YAAY,EAAE,EAFhB;AAGE,UAAA,WAAW,EAAE,EAHf;AAIE,UAAA,SAAS,EAAEE,KAAK,CAACW,QAAN,CAAec,QAAf,GAA0B,QAA1B,GAAqC,OAJlD;AAAA,oBAMG;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAiBE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE1B,KAAK,CAACW,QAAN,CAAec,QAAf,GAA0B,QAA1B,GAAqC;AAAtD,SAFT;AAAA,gCAIE,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAFT;AAGE,UAAA,KAAK,EAAEzB,OAHT;AAIE,UAAA,IAAI,EAAE;AAJR;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE,MAAb;AAAA,kCACE,QAAC,aAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,SAAS,EAAE,EAHb;AAIE,YAAA,YAAY,EAAC,KAJf;AAKE,YAAA,WAAW,EAAC,KALd;AAME,YAAA,cAAc,EAAC,MANjB;AAOE,YAAA,UAAU,EAAE,KAPd;AAQE,YAAA,SAAS,EAAC,IARZ;AASE,YAAA,KAAK,EAAE,MATT;AAUE,YAAA,WAAW,EAAE,WAVf;AAWE,YAAA,KAAK,EAAEF,KAAK,CAACW,QAAN,CAAeD,IAXxB;AAYE,YAAA,QAAQ,EAAGkB,CAAD,IAAO5B,KAAK,CAAC6B,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B,CAZnB;AAaE,YAAA,SAAS,EAAE,CAAC,CAAC/B,KAAK,CAACgC,SAbrB;AAcE,YAAA,iBAAiB,EAAE,CAAC,CAAChC,KAAK,CAACgC,SAAR,IAAqBhC,KAAK,CAACgC;AAdhD;AAAA;AAAA;AAAA;AAAA,kBADF,eAiDE,QAAC,aAAD;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,SAAS,EAAE,CAHb;AAIE,YAAA,SAAS,EAAC,IAJZ;AAKE,YAAA,YAAY,EAAC,KALf;AAME,YAAA,WAAW,EAAC,KANd;AAOE,YAAA,cAAc,EAAC,MAPjB;AAQE,YAAA,UAAU,EAAE,KARd;AASE,YAAA,SAAS,EAAG;AAC1B,kBACkB,CAAChC,KAAK,CAACW,QAAN,CAAeY,YAAf,IACC,CAACvB,KAAK,CAACW,QAAN,CAAeE,cADlB,KAEA,QACD;AACjB,eAfY;AAgBE,YAAA,MAAM,EACJb,KAAK,CAACW,QAAN,CAAec,QAAf,IAA2BzB,KAAK,CAACW,QAAN,CAAeC,QAAf,CAAwBqB,MAAxB,GAAiC,EAA5D,GACI,KADJ,GAEI,MAnBR;AAqBE,YAAA,KAAK,EAAEZ,kBAAkB,EArB3B;AAsBE,YAAA,WAAW,EAAE,SAtBf;AAuBE,YAAA,KAAK,EAAErB,KAAK,CAACW,QAAN,CAAeC,QAvBxB;AAwBE,YAAA,QAAQ,EAAGgB,CAAD,IAAO5B,KAAK,CAACkC,gBAAN,CAAuBN,CAAC,CAACE,MAAF,CAASC,KAAhC,CAxBnB;AAyBE,YAAA,SAAS,EAAE,CAAC,CAAC/B,KAAK,CAACmC,aAzBrB;AA0BE,YAAA,iBAAiB,EAAE,CAAC,CAACnC,KAAK,CAACmC,aAAR,IAAyBnC,KAAK,CAACmC;AA1BpD;AAAA;AAAA;AAAA;AAAA,kBAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eA2GE;AAAA;AAAA;AAAA;AAAA,cA3GF,eA4GE,QAAC,SAAD;AAAA,gCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,GAAZ;AAAiB,UAAA,YAAY,EAAE,CAA/B;AAAkC,UAAA,WAAW,EAAE,CAA/C;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5GF,eAkHE,QAAC,SAAD;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,GAAZ;AAAiB,UAAA,YAAY,EAAE,CAA/B;AAAkC,UAAA,WAAW,EAAE,CAA/C;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6HD,CA5KM;;GAAMpC,Q;UACGF,c;;;KADHE,Q","sourcesContent":["import {\n  CameraIcon,\n  Card,\n  Heading,\n  MobilePhoneIcon,\n  Pane,\n  Paragraph,\n  Text,\n  TextareaField,\n} from 'evergreen-ui';\nimport QRCode from 'qrcode.react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../../src/images/wifi.png';\nimport './style.css';\n\nexport const WifiCard = (props) => {\n  const { t } = useTranslation();\n  const [qrvalue, setQrvalue] = useState('');\n\n  const escape = (v) => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n\n    let escaped = '';\n    for (const c of v) {\n      if (needsEscape.includes(c)) {\n        escaped += `\\\\${c}`;\n      } else {\n        escaped += c;\n      }\n    }\n    return escaped;\n  };\n\n  useEffect(() => {\n    const ssid = escape(props.settings.ssid);\n    const password = !props.settings.encryptionMode\n      ? ''\n      : escape(props.settings.password);\n    const qrval = `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};;`;\n    setQrvalue(qrval);\n  }, [props.settings]);\n\n  const portraitWidth = () => {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile ? '100%' : '280px';\n  };\n\n  const passwordFieldLabel = () => {\n    const hiddenPassword =\n      props.settings.hidePassword || !props.settings.encryptionMode;\n    return hiddenPassword ? '' : '密码';\n  };\n\n  // const eapIdentityFieldLabel = () => {\n  //   const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n  //   return hiddenIdentity ? '' : t('wifi.identity');\n  // };\n\n  // const eapMethodFieldLabel = () => {\n  //   return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n  // };\n\n  return (\n    <Pane>\n      <Card\n        id=\"print-area\"\n        elevation={3}\n        style={{ maxWidth: props.settings.portrait ? portraitWidth() : '100%' }}\n      >\n        <Pane display=\"flex\" paddingBottom={12}>\n          <img alt=\"icon\" src={logo} width=\"24\" height=\"24\" />\n          <Heading\n            size={700}\n            paddingRight={10}\n            paddingLeft={10}\n            textAlign={props.settings.portrait ? 'center' : 'unset'}\n          >\n            {'扫码连接 WiFi'}\n          </Heading>\n        </Pane>\n\n        <Pane\n          className=\"details\"\n          style={{ flexDirection: props.settings.portrait ? 'column' : 'row' }}\n        >\n          <QRCode\n            className=\"qrcode\"\n            style={{ padding: '1em' }}\n            value={qrvalue}\n            size={150}\n          />\n\n          <Pane width={'100%'}>\n            <TextareaField\n              id=\"ssid\"\n              type=\"text\"\n              marginTop={25}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              maxLength=\"32\"\n              label={'网络名称'}\n              placeholder={'WiFi 网络名称'}\n              value={props.settings.ssid}\n              onChange={(e) => props.onSSIDChange(e.target.value)}\n              isInvalid={!!props.ssidError}\n              validationMessage={!!props.ssidError && props.ssidError}\n            />\n            {/* <TextareaField\n              id=\"eapmethod\"\n              type=\"text\"\n              marginBottom={5}\n              readOnly={true}\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapMethodFieldLabel()}\n              value={props.settings.eapMethod}\n            /> */}\n            {/* <TextareaField\n              id=\"identity\"\n              type=\"text\"\n              marginBottom={5}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapIdentityFieldLabel()}\n              placeholder={t('wifi.identity.placeholder')}\n              value={props.settings.eapIdentity}\n              onChange={(e) => props.onEapIdentityChange(e.target.value)}\n              isInvalid={!!props.eapIdentityError}\n              validationMessage={\n                !!props.eapIdentityError && props.eapIdentityError\n              }\n            /> */}\n            <TextareaField\n              id=\"password\"\n              type=\"text\"\n              marginTop={5}\n              maxLength=\"63\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${\n                  (props.settings.hidePassword ||\n                    !props.settings.encryptionMode) &&\n                  'hidden'\n                }\n              `}\n              height={\n                props.settings.portrait && props.settings.password.length > 40\n                  ? '5em'\n                  : 'auto'\n              }\n              label={passwordFieldLabel()}\n              placeholder={'WiFi 密码'}\n              value={props.settings.password}\n              onChange={(e) => props.onPasswordChange(e.target.value)}\n              isInvalid={!!props.passwordError}\n              validationMessage={!!props.passwordError && props.passwordError}\n            />\n          </Pane>\n        </Pane>\n        <hr />\n        <Paragraph>\n          <MobilePhoneIcon />\n          <Text size={300} paddingRight={8} paddingLeft={8}>\n            {'打开手机的相机功能，将摄像头对准二维码即可自动连接'}\n          </Text>\n        </Paragraph>\n        <Paragraph>\n          <CameraIcon />\n          <Text size={300} paddingRight={8} paddingLeft={8}>\n            {'请不要使用微信或者支付宝的扫码功能'}\n          </Text>\n        </Paragraph>\n      </Card>\n    </Pane>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}