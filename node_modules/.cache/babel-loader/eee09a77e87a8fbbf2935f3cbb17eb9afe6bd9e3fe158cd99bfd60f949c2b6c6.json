{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet cache = new Map();\n\nfunction get(property, value) {\n  let selectorHead = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return cache.get(selectorHead + property + value);\n}\n\nexports.get = get;\n\nfunction set(property, value, className) {\n  let selectorHead = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  if (process.env.NODE_ENV !== 'production') {\n    const valueType = typeof value;\n\n    if (valueType !== 'boolean' && valueType !== 'number' && valueType !== 'string') {\n      const encodedValue = JSON.stringify(value);\n      throw new TypeError(`üì¶ ui-box: invalid cache value ‚Äú${encodedValue}‚Äù. Only booleans, numbers and strings are supported.`);\n    }\n  }\n\n  cache.set(selectorHead + property + value, className);\n}\n\nexports.set = set;\n\nfunction entries() {\n  return [...cache];\n}\n\nexports.entries = entries;\n\nfunction hydrate(newEntries) {\n  cache = new Map([...cache, ...newEntries]);\n}\n\nexports.hydrate = hydrate;\n\nfunction clear() {\n  cache.clear();\n}\n\nexports.clear = clear;","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/ui-box/dist/src/cache.js"],"names":["Object","defineProperty","exports","value","cache","Map","get","property","selectorHead","set","className","process","env","NODE_ENV","valueType","encodedValue","JSON","stringify","TypeError","entries","hydrate","newEntries","clear"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ;;AACA,SAASC,GAAT,CAAaC,QAAb,EAAuBJ,KAAvB,EAAiD;AAAA,MAAnBK,YAAmB,uEAAJ,EAAI;AAC7C,SAAOJ,KAAK,CAACE,GAAN,CAAUE,YAAY,GAAGD,QAAf,GAA0BJ,KAApC,CAAP;AACH;;AACDD,OAAO,CAACI,GAAR,GAAcA,GAAd;;AACA,SAASG,GAAT,CAAaF,QAAb,EAAuBJ,KAAvB,EAA8BO,SAA9B,EAA4D;AAAA,MAAnBF,YAAmB,uEAAJ,EAAI;;AACxD,MAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,UAAMC,SAAS,GAAG,OAAOX,KAAzB;;AACA,QAAIW,SAAS,KAAK,SAAd,IACAA,SAAS,KAAK,QADd,IAEAA,SAAS,KAAK,QAFlB,EAE4B;AACxB,YAAMC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAed,KAAf,CAArB;AACA,YAAM,IAAIe,SAAJ,CAAe,mCAAkCH,YAAa,sDAA9D,CAAN;AACH;AACJ;;AACDX,EAAAA,KAAK,CAACK,GAAN,CAAUD,YAAY,GAAGD,QAAf,GAA0BJ,KAApC,EAA2CO,SAA3C;AACH;;AACDR,OAAO,CAACO,GAAR,GAAcA,GAAd;;AACA,SAASU,OAAT,GAAmB;AACf,SAAO,CAAC,GAAGf,KAAJ,CAAP;AACH;;AACDF,OAAO,CAACiB,OAAR,GAAkBA,OAAlB;;AACA,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AACzBjB,EAAAA,KAAK,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,KAAJ,EAAW,GAAGiB,UAAd,CAAR,CAAR;AACH;;AACDnB,OAAO,CAACkB,OAAR,GAAkBA,OAAlB;;AACA,SAASE,KAAT,GAAiB;AACblB,EAAAA,KAAK,CAACkB,KAAN;AACH;;AACDpB,OAAO,CAACoB,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet cache = new Map();\nfunction get(property, value, selectorHead = '') {\n    return cache.get(selectorHead + property + value);\n}\nexports.get = get;\nfunction set(property, value, className, selectorHead = '') {\n    if (process.env.NODE_ENV !== 'production') {\n        const valueType = typeof value;\n        if (valueType !== 'boolean' &&\n            valueType !== 'number' &&\n            valueType !== 'string') {\n            const encodedValue = JSON.stringify(value);\n            throw new TypeError(`üì¶ ui-box: invalid cache value ‚Äú${encodedValue}‚Äù. Only booleans, numbers and strings are supported.`);\n        }\n    }\n    cache.set(selectorHead + property + value, className);\n}\nexports.set = set;\nfunction entries() {\n    return [...cache];\n}\nexports.entries = entries;\nfunction hydrate(newEntries) {\n    cache = new Map([...cache, ...newEntries]);\n}\nexports.hydrate = hydrate;\nfunction clear() {\n    cache.clear();\n}\nexports.clear = clear;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}