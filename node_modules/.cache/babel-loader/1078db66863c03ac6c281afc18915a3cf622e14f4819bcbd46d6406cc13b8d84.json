{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isAstrixShown\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../../typography';\nvar FormFieldLabel = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FormFieldLabel(props, ref) {\n  var children = props.children,\n      isAstrixShown = props.isAstrixShown,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    display: \"block\",\n    marginBottom: 0\n  }, rest, {\n    ref: ref\n  }), children, isAstrixShown && /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(\"span\", {\n    title: \"This field is required.\"\n  }, \"*\")));\n}));\nFormFieldLabel.propTypes = _objectSpread(_objectSpread({}, Label.propTypes), {}, {\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  isAstrixShown: PropTypes.bool\n});\nexport default FormFieldLabel;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/evergreen-ui/esm/form-field/src/FormFieldLabel.js"],"names":["_defineProperty","_extends","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","memo","forwardRef","PropTypes","Label","FormFieldLabel","props","ref","children","isAstrixShown","rest","createElement","display","marginBottom","Fragment","title","propTypes","bool"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isAstrixShown\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../../typography';\nvar FormFieldLabel = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FormFieldLabel(props, ref) {\n  var children = props.children,\n      isAstrixShown = props.isAstrixShown,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    display: \"block\",\n    marginBottom: 0\n  }, rest, {\n    ref: ref\n  }), children, isAstrixShown && /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(\"span\", {\n    title: \"This field is required.\"\n  }, \"*\")));\n}));\nFormFieldLabel.propTypes = _objectSpread(_objectSpread({}, Label.propTypes), {}, {\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  isAstrixShown: PropTypes.bool\n});\nexport default FormFieldLabel;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}