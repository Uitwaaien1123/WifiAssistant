{"ast":null,"code":"import _objectSpread from\"D:/study/WifiAssistant/WifiAssistant/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/study/WifiAssistant/WifiAssistant/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Heading,Link,Pane,Paragraph}from'evergreen-ui';import React,{useEffect,useRef,useState}from'react';import{useTranslation}from'react-i18next';import logo from'../src/images/wifi.png';import{Settings}from'./components/Settings';import{WifiCard}from'./components/WifiCard';import'./style.css';import{Translations}from'./translations';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var html=document.querySelector('html');var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var firstLoad=useRef(true);var _useState=useState({// Network SSID name\nssid:'',// Network password\npassword:'',// Settings: Network encryption mode\nencryptionMode:'WPA',// Settings: EAP Method\neapMethod:'PWD',// Settings: EAP identity\neapIdentity:'',// Settings: Hide password on the printed card\nhidePassword:false,// Settings: Mark your network as hidden SSID\nhiddenSSID:false,// Settings: Portrait orientation\nportrait:false}),_useState2=_slicedToArray(_useState,2),settings=_useState2[0],setSettings=_useState2[1];var _useState3=useState({ssidError:'',passwordError:'',eapIdentityError:''}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var htmlDirection=function htmlDirection(languageID){var _Translations$filter$;languageID=languageID||i18n.language;var rtl=(_Translations$filter$=Translations.filter(function(t){return t.id===languageID;})[0])===null||_Translations$filter$===void 0?void 0:_Translations$filter$.rtl;return rtl?'rtl':'ltr';};var onChangeLanguage=function onChangeLanguage(language){html.style.direction=htmlDirection(language);i18n.changeLanguage(language);};var onPrint=function onPrint(){if(!settings.ssid.length){setErrors(_objectSpread(_objectSpread({},errors),{},{ssidError:t('wifi.alert.name')}));return;}if(settings.password.length<8&&settings.encryptionMode==='WPA'){setErrors(_objectSpread(_objectSpread({},errors),{},{passwordError:t('wifi.alert.password.length.8')}));return;}if(settings.password.length<5&&settings.encryptionMode==='WEP'){setErrors(_objectSpread(_objectSpread({},errors),{},{passwordError:t('wifi.alert.password.length.5')}));return;}if(settings.password.length<1&&settings.encryptionMode==='WPA2-EAP'){setErrors(_objectSpread(_objectSpread({},errors),{},{passwordError:t('wifi.alert.password')}));return;}if(settings.eapIdentity.length<1&&settings.encryptionMode==='WPA2-EAP'){setErrors(_objectSpread(_objectSpread({},errors),{},{eapIdentityError:t('wifi.alert.eapIdentity')}));return;}document.title='WiFi Card - '+settings.ssid;window.print();};var onSSIDChange=function onSSIDChange(ssid){setErrors(_objectSpread(_objectSpread({},errors),{},{ssidError:''}));setSettings(_objectSpread(_objectSpread({},settings),{},{ssid:ssid}));};var onPasswordChange=function onPasswordChange(password){setErrors(_objectSpread(_objectSpread({},errors),{},{passwordError:''}));setSettings(_objectSpread(_objectSpread({},settings),{},{password:password}));};var onEncryptionModeChange=function onEncryptionModeChange(encryptionMode){setErrors(_objectSpread(_objectSpread({},errors),{},{passwordError:''}));setSettings(_objectSpread(_objectSpread({},settings),{},{encryptionMode:encryptionMode}));};var onEapMethodChange=function onEapMethodChange(eapMethod){setSettings(_objectSpread(_objectSpread({},settings),{},{eapMethod:eapMethod}));};var onEapIdentityChange=function onEapIdentityChange(eapIdentity){setErrors(_objectSpread(_objectSpread({},errors),{},{eapIdentityError:''}));setSettings(_objectSpread(_objectSpread({},settings),{},{eapIdentity:eapIdentity}));};var onOrientationChange=function onOrientationChange(portrait){setSettings(_objectSpread(_objectSpread({},settings),{},{portrait:portrait}));};var onHidePasswordChange=function onHidePasswordChange(hidePassword){setSettings(_objectSpread(_objectSpread({},settings),{},{hidePassword:hidePassword}));};var onHiddenSSIDChange=function onHiddenSSIDChange(hiddenSSID){setSettings(_objectSpread(_objectSpread({},settings),{},{hiddenSSID:hiddenSSID}));};var onFirstLoad=function onFirstLoad(){html.style.direction=htmlDirection();firstLoad.current=false;};useEffect(function(){// Ensure the page direction is set properly on first load\nif(htmlDirection()==='rtl'){html.style.direction='rtl';}});return/*#__PURE__*/_jsxs(Pane,{children:[/*#__PURE__*/_jsxs(Pane,{display:\"flex\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"icon\",src:logo,width:\"32\",height:\"32\"}),/*#__PURE__*/_jsx(Heading,{size:900,paddingRight:16,paddingLeft:16,children:'WiFi 连接二维码'})]}),/*#__PURE__*/_jsxs(Pane,{children:[/*#__PURE__*/_jsx(Paragraph,{marginTop:12,children:'打印一张带有 WiFi 详细信息的登录卡片，把它贴到冰箱上、放到你的钱包里...'}),/*#__PURE__*/_jsx(Paragraph,{marginTop:12,children:'您的 WiFi 信息永远不会发送到服务端。本网站不使用追踪、分析或指纹识别。'})]}),/*#__PURE__*/_jsx(WifiCard,{settings:settings,ssidError:errors.ssidError,passwordError:errors.passwordError,eapIdentityError:errors.eapIdentityError,onSSIDChange:onSSIDChange,onEapIdentityChange:onEapIdentityChange,onPasswordChange:onPasswordChange}),/*#__PURE__*/_jsx(Settings,{settings:settings,firstLoad:firstLoad,onFirstLoad:onFirstLoad// onLanguageChange={onChangeLanguage}\n,onEncryptionModeChange:onEncryptionModeChange,onEapMethodChange:onEapMethodChange,onOrientationChange:onOrientationChange,onHidePasswordChange:onHidePasswordChange,onHiddenSSIDChange:onHiddenSSIDChange}),/*#__PURE__*/_jsx(Button,{id:\"print\",appearance:\"primary\",height:40,marginRight:16,onClick:onPrint,children:t('button.print')})]});}export default App;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/src/App.js"],"names":["Button","Heading","Link","Pane","Paragraph","React","useEffect","useRef","useState","useTranslation","logo","Settings","WifiCard","Translations","App","html","document","querySelector","t","i18n","firstLoad","ssid","password","encryptionMode","eapMethod","eapIdentity","hidePassword","hiddenSSID","portrait","settings","setSettings","ssidError","passwordError","eapIdentityError","errors","setErrors","htmlDirection","languageID","language","rtl","filter","id","onChangeLanguage","style","direction","changeLanguage","onPrint","length","title","window","print","onSSIDChange","onPasswordChange","onEncryptionModeChange","onEapMethodChange","onEapIdentityChange","onOrientationChange","onHidePasswordChange","onHiddenSSIDChange","onFirstLoad","current"],"mappings":"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","sourcesContent":["import { Button, Heading, Link, Pane, Paragraph } from 'evergreen-ui';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../src/images/wifi.png';\nimport { Settings } from './components/Settings';\nimport { WifiCard } from './components/WifiCard';\nimport './style.css';\nimport { Translations } from './translations';\n\nfunction App() {\n  const html = document.querySelector('html');\n  const { t, i18n } = useTranslation();\n  const firstLoad = useRef(true);\n  const [settings, setSettings] = useState({\n    // Network SSID name\n    ssid: '',\n    // Network password\n    password: '',\n    // Settings: Network encryption mode\n    encryptionMode: 'WPA',\n    // Settings: EAP Method\n    eapMethod: 'PWD',\n    // Settings: EAP identity\n    eapIdentity: '',\n    // Settings: Hide password on the printed card\n    hidePassword: false,\n    // Settings: Mark your network as hidden SSID\n    hiddenSSID: false,\n    // Settings: Portrait orientation\n    portrait: false,\n  });\n  const [errors, setErrors] = useState({\n    ssidError: '',\n    passwordError: '',\n    eapIdentityError: '',\n  });\n\n  const htmlDirection = (languageID) => {\n    languageID = languageID || i18n.language;\n    const rtl = Translations.filter((t) => t.id === languageID)[0]?.rtl;\n    return rtl ? 'rtl' : 'ltr';\n  };\n\n  const onChangeLanguage = (language) => {\n    html.style.direction = htmlDirection(language);\n    i18n.changeLanguage(language);\n  };\n\n  const onPrint = () => {\n    if (!settings.ssid.length) {\n      setErrors({\n        ...errors,\n        ssidError: t('wifi.alert.name'),\n      });\n      return;\n    }\n    if (settings.password.length < 8 && settings.encryptionMode === 'WPA') {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password.length.8'),\n      });\n      return;\n    }\n    if (settings.password.length < 5 && settings.encryptionMode === 'WEP') {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password.length.5'),\n      });\n      return;\n    }\n    if (\n      settings.password.length < 1 &&\n      settings.encryptionMode === 'WPA2-EAP'\n    ) {\n      setErrors({\n        ...errors,\n        passwordError: t('wifi.alert.password'),\n      });\n      return;\n    }\n    if (\n      settings.eapIdentity.length < 1 &&\n      settings.encryptionMode === 'WPA2-EAP'\n    ) {\n      setErrors({\n        ...errors,\n        eapIdentityError: t('wifi.alert.eapIdentity'),\n      });\n      return;\n    }\n    document.title = 'WiFi Card - ' + settings.ssid;\n    window.print();\n  };\n\n  const onSSIDChange = (ssid) => {\n    setErrors({ ...errors, ssidError: '' });\n    setSettings({ ...settings, ssid });\n  };\n  const onPasswordChange = (password) => {\n    setErrors({ ...errors, passwordError: '' });\n    setSettings({ ...settings, password });\n  };\n  const onEncryptionModeChange = (encryptionMode) => {\n    setErrors({ ...errors, passwordError: '' });\n    setSettings({ ...settings, encryptionMode });\n  };\n  const onEapMethodChange = (eapMethod) => {\n    setSettings({ ...settings, eapMethod });\n  };\n  const onEapIdentityChange = (eapIdentity) => {\n    setErrors({ ...errors, eapIdentityError: '' });\n    setSettings({ ...settings, eapIdentity });\n  };\n  const onOrientationChange = (portrait) => {\n    setSettings({ ...settings, portrait });\n  };\n  const onHidePasswordChange = (hidePassword) => {\n    setSettings({ ...settings, hidePassword });\n  };\n  const onHiddenSSIDChange = (hiddenSSID) => {\n    setSettings({ ...settings, hiddenSSID });\n  };\n  const onFirstLoad = () => {\n    html.style.direction = htmlDirection();\n    firstLoad.current = false;\n  };\n\n  useEffect(() => {\n    // Ensure the page direction is set properly on first load\n    if (htmlDirection() === 'rtl') {\n      html.style.direction = 'rtl';\n    }\n  });\n\n  return (\n    <Pane>\n      <Pane display=\"flex\">\n        <img alt=\"icon\" src={logo} width=\"32\" height=\"32\" />\n        <Heading size={900} paddingRight={16} paddingLeft={16}>\n          {'WiFi 连接二维码'}\n        </Heading>\n      </Pane>\n\n      <Pane>\n        <Paragraph marginTop={12}>{'打印一张带有 WiFi 详细信息的登录卡片，把它贴到冰箱上、放到你的钱包里...'}</Paragraph>\n\n        <Paragraph marginTop={12}>\n          {'您的 WiFi 信息永远不会发送到服务端。本网站不使用追踪、分析或指纹识别。'}\n        </Paragraph>\n      </Pane>\n\n      <WifiCard\n        settings={settings}\n        ssidError={errors.ssidError}\n        passwordError={errors.passwordError}\n        eapIdentityError={errors.eapIdentityError}\n        onSSIDChange={onSSIDChange}\n        onEapIdentityChange={onEapIdentityChange}\n        onPasswordChange={onPasswordChange}\n      />\n\n      <Settings\n        settings={settings}\n        firstLoad={firstLoad}\n        onFirstLoad={onFirstLoad}\n        // onLanguageChange={onChangeLanguage}\n        onEncryptionModeChange={onEncryptionModeChange}\n        onEapMethodChange={onEapMethodChange}\n        onOrientationChange={onOrientationChange}\n        onHidePasswordChange={onHidePasswordChange}\n        onHiddenSSIDChange={onHiddenSSIDChange}\n      />\n\n      <Button\n        id=\"print\"\n        appearance=\"primary\"\n        height={40}\n        marginRight={16}\n        onClick={onPrint}\n      >\n        {t('button.print')}\n      </Button>\n    </Pane>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}