{"ast":null,"code":"import tinycolor from 'tinycolor2';\nimport { Intent } from '../../../constants';\nimport colors from './foundational-styles/colors';\n/**\n * @param {String} top - color.\n * @param {String} bottom - color.\n * @return {String} CSS background propery.\n */\n\nvar linearGradient = function linearGradient(top, bottom) {\n  return \"linear-gradient(to bottom, \".concat(top, \", \").concat(bottom, \")\");\n};\n/**\n * @param {Intent} intent\n * @return {String} color\n */\n\n\nvar getTextColorForIntent = function getTextColorForIntent(intent, defaultColor) {\n  switch (intent) {\n    case Intent.SUCCESS:\n      return colors.text.success;\n\n    case Intent.DANGER:\n      return colors.text.danger;\n\n    case Intent.WARNING:\n      return colors.text.warning;\n\n    default:\n      return defaultColor || colors.text[\"default\"];\n  }\n};\n/**\n * @param {String} startColor\n * @param {String} endColor\n * @param {Number} intensityMultiplier - Some colors need more darkening.\n */\n\n\nvar getLinearGradientWithStates = function getLinearGradientWithStates(startColor, endColor) {\n  var intensityMultiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return {\n    base: linearGradient(startColor, endColor),\n    hover: linearGradient(tinycolor(startColor).darken(5 * intensityMultiplier).toString(), tinycolor(endColor).darken(5 * intensityMultiplier).toString()),\n    active: linearGradient(tinycolor(endColor).darken(5 * intensityMultiplier).toString(), tinycolor(endColor).darken(5 * intensityMultiplier).toString())\n  };\n};\n/**\n * Gradients in the default theme have a intentional hue shift.\n * @param {Intent} intent - intent of the gradient.\n * @return {Object} { base, hover, active }\n */\n\n\nvar getPrimaryButtonStylesForIntent = function getPrimaryButtonStylesForIntent(intent) {\n  switch (intent) {\n    case Intent.SUCCESS:\n      {\n        var startColor = '#23C277';\n        var endColor = '#399D6C';\n        return {\n          linearGradient: getLinearGradientWithStates(startColor, endColor),\n          focusColor: tinycolor(startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case Intent.WARNING:\n      {\n        var _startColor = '#EE9913';\n        var _endColor = '#D9822B';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor, _endColor),\n          focusColor: tinycolor(_startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case Intent.DANGER:\n      {\n        var _startColor2 = '#EC4C47';\n        var _endColor2 = '#D64540';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor2, _endColor2),\n          focusColor: tinycolor(_startColor2).setAlpha(0.4).toString()\n        };\n      }\n\n    default:\n      {\n        var _startColor3 = '#0788DE';\n        var _endColor3 = '#116AB8';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor3, _endColor3),\n          focusColor: tinycolor(_startColor3).setAlpha(0.4).toString()\n        };\n      }\n  }\n};\n\nexport { linearGradient, getTextColorForIntent, getLinearGradientWithStates, getPrimaryButtonStylesForIntent };","map":{"version":3,"sources":["D:/0xtest/WifiAssistant/node_modules/evergreen-ui/esm/themes/classic/deprecated/helpers.js"],"names":["tinycolor","Intent","colors","linearGradient","top","bottom","concat","getTextColorForIntent","intent","defaultColor","SUCCESS","text","success","DANGER","danger","WARNING","warning","getLinearGradientWithStates","startColor","endColor","intensityMultiplier","arguments","length","undefined","base","hover","darken","toString","active","getPrimaryButtonStylesForIntent","focusColor","setAlpha","_startColor","_endColor","_startColor2","_endColor2","_startColor3","_endColor3"],"mappings":"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","sourcesContent":["import tinycolor from 'tinycolor2';\nimport { Intent } from '../../../constants';\nimport colors from './foundational-styles/colors';\n/**\n * @param {String} top - color.\n * @param {String} bottom - color.\n * @return {String} CSS background propery.\n */\n\nvar linearGradient = function linearGradient(top, bottom) {\n  return \"linear-gradient(to bottom, \".concat(top, \", \").concat(bottom, \")\");\n};\n/**\n * @param {Intent} intent\n * @return {String} color\n */\n\n\nvar getTextColorForIntent = function getTextColorForIntent(intent, defaultColor) {\n  switch (intent) {\n    case Intent.SUCCESS:\n      return colors.text.success;\n\n    case Intent.DANGER:\n      return colors.text.danger;\n\n    case Intent.WARNING:\n      return colors.text.warning;\n\n    default:\n      return defaultColor || colors.text[\"default\"];\n  }\n};\n/**\n * @param {String} startColor\n * @param {String} endColor\n * @param {Number} intensityMultiplier - Some colors need more darkening.\n */\n\n\nvar getLinearGradientWithStates = function getLinearGradientWithStates(startColor, endColor) {\n  var intensityMultiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return {\n    base: linearGradient(startColor, endColor),\n    hover: linearGradient(tinycolor(startColor).darken(5 * intensityMultiplier).toString(), tinycolor(endColor).darken(5 * intensityMultiplier).toString()),\n    active: linearGradient(tinycolor(endColor).darken(5 * intensityMultiplier).toString(), tinycolor(endColor).darken(5 * intensityMultiplier).toString())\n  };\n};\n/**\n * Gradients in the default theme have a intentional hue shift.\n * @param {Intent} intent - intent of the gradient.\n * @return {Object} { base, hover, active }\n */\n\n\nvar getPrimaryButtonStylesForIntent = function getPrimaryButtonStylesForIntent(intent) {\n  switch (intent) {\n    case Intent.SUCCESS:\n      {\n        var startColor = '#23C277';\n        var endColor = '#399D6C';\n        return {\n          linearGradient: getLinearGradientWithStates(startColor, endColor),\n          focusColor: tinycolor(startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case Intent.WARNING:\n      {\n        var _startColor = '#EE9913';\n        var _endColor = '#D9822B';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor, _endColor),\n          focusColor: tinycolor(_startColor).setAlpha(0.4).toString()\n        };\n      }\n\n    case Intent.DANGER:\n      {\n        var _startColor2 = '#EC4C47';\n        var _endColor2 = '#D64540';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor2, _endColor2),\n          focusColor: tinycolor(_startColor2).setAlpha(0.4).toString()\n        };\n      }\n\n    default:\n      {\n        var _startColor3 = '#0788DE';\n        var _endColor3 = '#116AB8';\n        return {\n          linearGradient: getLinearGradientWithStates(_startColor3, _endColor3),\n          focusColor: tinycolor(_startColor3).setAlpha(0.4).toString()\n        };\n      }\n  }\n};\n\nexport { linearGradient, getTextColorForIntent, getLinearGradientWithStates, getPrimaryButtonStylesForIntent };"]},"metadata":{},"sourceType":"module","externalDependencies":[]}