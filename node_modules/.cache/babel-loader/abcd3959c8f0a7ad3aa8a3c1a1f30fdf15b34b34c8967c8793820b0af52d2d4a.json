{"ast":null,"code":"/**\n * Truncates a string in the center with ellipsis, if needed\n * @param {string} value Value to truncate\n * @param {number | undefined} maximumChars Maximum number of characters (including the ellipsis) to show\n * @returns {string}\n */\nvar truncateCenter = function truncateCenter(value) {\n  var maximumChars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 55;\n  var length = value.length;\n\n  if (length <= maximumChars) {\n    return value;\n  }\n\n  var separator = '...';\n  var charsToShow = maximumChars - separator.length;\n  var startCharCount = Math.ceil(charsToShow / 2);\n  var endCharCount = Math.floor(charsToShow / 2);\n  return [value.substring(0, startCharCount), separator, value.substring(value.length - endCharCount)].join('');\n};\n\nexport default truncateCenter;","map":{"version":3,"sources":["D:/0xtest/WifiAssistant/node_modules/evergreen-ui/esm/file-uploader/src/utils/truncate-center.js"],"names":["truncateCenter","value","maximumChars","arguments","length","undefined","separator","charsToShow","startCharCount","Math","ceil","endCharCount","floor","substring","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAvF;AACA,MAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;;AAEA,MAAIA,MAAM,IAAIF,YAAd,EAA4B;AAC1B,WAAOD,KAAP;AACD;;AAED,MAAIK,SAAS,GAAG,KAAhB;AACA,MAAIC,WAAW,GAAGL,YAAY,GAAGI,SAAS,CAACF,MAA3C;AACA,MAAII,cAAc,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,GAAG,CAAxB,CAArB;AACA,MAAII,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWL,WAAW,GAAG,CAAzB,CAAnB;AACA,SAAO,CAACN,KAAK,CAACY,SAAN,CAAgB,CAAhB,EAAmBL,cAAnB,CAAD,EAAqCF,SAArC,EAAgDL,KAAK,CAACY,SAAN,CAAgBZ,KAAK,CAACG,MAAN,GAAeO,YAA/B,CAAhD,EAA8FG,IAA9F,CAAmG,EAAnG,CAAP;AACD,CAbD;;AAeA,eAAed,cAAf","sourcesContent":["/**\n * Truncates a string in the center with ellipsis, if needed\n * @param {string} value Value to truncate\n * @param {number | undefined} maximumChars Maximum number of characters (including the ellipsis) to show\n * @returns {string}\n */\nvar truncateCenter = function truncateCenter(value) {\n  var maximumChars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 55;\n  var length = value.length;\n\n  if (length <= maximumChars) {\n    return value;\n  }\n\n  var separator = '...';\n  var charsToShow = maximumChars - separator.length;\n  var startCharCount = Math.ceil(charsToShow / 2);\n  var endCharCount = Math.floor(charsToShow / 2);\n  return [value.substring(0, startCharCount), separator, value.substring(value.length - endCharCount)].join('');\n};\n\nexport default truncateCenter;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}