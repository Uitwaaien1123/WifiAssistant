{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from '../../buttons';\nimport { CrossIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport OptionShapePropType from './OptionShapePropType';\nimport OptionsList from './OptionsList';\n\nvar DefaultTitleView = function DefaultTitleView(_ref) {\n  var close = _ref.close,\n      headerHeight = _ref.headerHeight,\n      title = _ref.title;\n  return /*#__PURE__*/React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"default\",\n    padding: 8,\n    height: headerHeight,\n    boxSizing: \"border-box\"\n  }, /*#__PURE__*/React.createElement(Pane, {\n    flex: \"1\",\n    display: \"flex\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: 300,\n    textTransform: \"uppercase\"\n  }, title)), /*#__PURE__*/React.createElement(IconButton, {\n    icon: CrossIcon,\n    appearance: \"minimal\",\n    height: 24,\n    onClick: close,\n    border: \"none\"\n  }));\n};\n\nDefaultTitleView.displayName = \"DefaultTitleView\";\nDefaultTitleView.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  headerHeight: PropTypes.number\n};\nvar emptyArray = [];\nvar SelectMenuContent = /*#__PURE__*/memo(function SelectMenuContent(props) {\n  var title = props.title,\n      width = props.width,\n      height = props.height,\n      _props$options = props.options,\n      options = _props$options === void 0 ? emptyArray : _props$options,\n      _props$hasTitle = props.hasTitle,\n      hasTitle = _props$hasTitle === void 0 ? true : _props$hasTitle,\n      _props$hasFilter = props.hasFilter,\n      hasFilter = _props$hasFilter === void 0 ? true : _props$hasFilter,\n      filterPlaceholder = props.filterPlaceholder,\n      filterIcon = props.filterIcon,\n      close = props.close,\n      listProps = props.listProps,\n      _props$titleView = props.titleView,\n      titleView = _props$titleView === void 0 ? DefaultTitleView : _props$titleView,\n      detailView = props.detailView,\n      emptyView = props.emptyView,\n      isMultiSelect = props.isMultiSelect,\n      closeOnSelect = props.closeOnSelect;\n  var headerHeight = 40;\n  var optionsListHeight = hasTitle ? height - headerHeight : height;\n  var hasDetailView = Boolean(detailView);\n  var hasEmptyView = Boolean(emptyView);\n  return /*#__PURE__*/React.createElement(Pane, {\n    display: \"flex\",\n    height: height\n  }, /*#__PURE__*/React.createElement(Pane, {\n    width: width,\n    height: height,\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderRight: hasDetailView ? 'muted' : null\n  }, hasTitle && titleView({\n    close: close,\n    title: title,\n    headerHeight: headerHeight\n  }), options.length === 0 && hasEmptyView ? /*#__PURE__*/React.createElement(Pane, {\n    height: optionsListHeight\n  }, emptyView) : /*#__PURE__*/React.createElement(OptionsList, _extends({\n    height: optionsListHeight,\n    hasFilter: hasFilter,\n    filterPlaceholder: filterPlaceholder,\n    filterIcon: filterIcon,\n    options: options,\n    isMultiSelect: isMultiSelect,\n    close: close,\n    closeOnSelect: closeOnSelect\n  }, listProps))), hasDetailView && detailView);\n});\nSelectMenuContent.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  headerHeight: PropTypes.number,\n  options: PropTypes.arrayOf(OptionShapePropType),\n  hasTitle: PropTypes.bool,\n  hasFilter: PropTypes.bool,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n  listProps: PropTypes.shape(OptionsList.propTypes),\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /*\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Node that is placed in the header section, above the options.\n   */\n  titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Node that is placed right next to the options.\n   */\n  detailView: PropTypes.node,\n\n  /**\n   * Node that is displayed instead of options list when there are no options.\n   */\n  emptyView: PropTypes.node\n};\nexport default SelectMenuContent;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/evergreen-ui/esm/select-menu/src/SelectMenuContent.js"],"names":["_extends","React","memo","PropTypes","IconButton","CrossIcon","Pane","Text","OptionShapePropType","OptionsList","DefaultTitleView","_ref","close","headerHeight","title","createElement","display","alignItems","borderBottom","padding","height","boxSizing","flex","size","textTransform","icon","appearance","onClick","border","displayName","propTypes","func","string","number","emptyArray","SelectMenuContent","props","width","_props$options","options","_props$hasTitle","hasTitle","_props$hasFilter","hasFilter","filterPlaceholder","filterIcon","listProps","_props$titleView","titleView","detailView","emptyView","isMultiSelect","closeOnSelect","optionsListHeight","hasDetailView","Boolean","hasEmptyView","flexDirection","borderRight","length","oneOfType","arrayOf","bool","elementType","element","shape","node"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton } from '../../buttons';\nimport { CrossIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport OptionShapePropType from './OptionShapePropType';\nimport OptionsList from './OptionsList';\n\nvar DefaultTitleView = function DefaultTitleView(_ref) {\n  var close = _ref.close,\n      headerHeight = _ref.headerHeight,\n      title = _ref.title;\n  return /*#__PURE__*/React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"default\",\n    padding: 8,\n    height: headerHeight,\n    boxSizing: \"border-box\"\n  }, /*#__PURE__*/React.createElement(Pane, {\n    flex: \"1\",\n    display: \"flex\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: 300,\n    textTransform: \"uppercase\"\n  }, title)), /*#__PURE__*/React.createElement(IconButton, {\n    icon: CrossIcon,\n    appearance: \"minimal\",\n    height: 24,\n    onClick: close,\n    border: \"none\"\n  }));\n};\n\nDefaultTitleView.displayName = \"DefaultTitleView\";\nDefaultTitleView.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  headerHeight: PropTypes.number\n};\nvar emptyArray = [];\nvar SelectMenuContent = /*#__PURE__*/memo(function SelectMenuContent(props) {\n  var title = props.title,\n      width = props.width,\n      height = props.height,\n      _props$options = props.options,\n      options = _props$options === void 0 ? emptyArray : _props$options,\n      _props$hasTitle = props.hasTitle,\n      hasTitle = _props$hasTitle === void 0 ? true : _props$hasTitle,\n      _props$hasFilter = props.hasFilter,\n      hasFilter = _props$hasFilter === void 0 ? true : _props$hasFilter,\n      filterPlaceholder = props.filterPlaceholder,\n      filterIcon = props.filterIcon,\n      close = props.close,\n      listProps = props.listProps,\n      _props$titleView = props.titleView,\n      titleView = _props$titleView === void 0 ? DefaultTitleView : _props$titleView,\n      detailView = props.detailView,\n      emptyView = props.emptyView,\n      isMultiSelect = props.isMultiSelect,\n      closeOnSelect = props.closeOnSelect;\n  var headerHeight = 40;\n  var optionsListHeight = hasTitle ? height - headerHeight : height;\n  var hasDetailView = Boolean(detailView);\n  var hasEmptyView = Boolean(emptyView);\n  return /*#__PURE__*/React.createElement(Pane, {\n    display: \"flex\",\n    height: height\n  }, /*#__PURE__*/React.createElement(Pane, {\n    width: width,\n    height: height,\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderRight: hasDetailView ? 'muted' : null\n  }, hasTitle && titleView({\n    close: close,\n    title: title,\n    headerHeight: headerHeight\n  }), options.length === 0 && hasEmptyView ? /*#__PURE__*/React.createElement(Pane, {\n    height: optionsListHeight\n  }, emptyView) : /*#__PURE__*/React.createElement(OptionsList, _extends({\n    height: optionsListHeight,\n    hasFilter: hasFilter,\n    filterPlaceholder: filterPlaceholder,\n    filterIcon: filterIcon,\n    options: options,\n    isMultiSelect: isMultiSelect,\n    close: close,\n    closeOnSelect: closeOnSelect\n  }, listProps))), hasDetailView && detailView);\n});\nSelectMenuContent.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  headerHeight: PropTypes.number,\n  options: PropTypes.arrayOf(OptionShapePropType),\n  hasTitle: PropTypes.bool,\n  hasFilter: PropTypes.bool,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n  listProps: PropTypes.shape(OptionsList.propTypes),\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /*\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Node that is placed in the header section, above the options.\n   */\n  titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Node that is placed right next to the options.\n   */\n  detailView: PropTypes.node,\n\n  /**\n   * Node that is displayed instead of options list when there are no options.\n   */\n  emptyView: PropTypes.node\n};\nexport default SelectMenuContent;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}