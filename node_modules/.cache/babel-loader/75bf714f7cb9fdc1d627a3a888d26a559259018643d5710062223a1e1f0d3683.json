{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"acceptedMimeTypes\", \"browseOrDragText\", \"dragMaxFilesMessage\", \"description\", \"disabled\", \"hint\", \"isRequired\", \"label\", \"labelFor\", \"maxFiles\", \"maxSizeInBytes\", \"onAccepted\", \"onChange\", \"onRejected\", \"onRemove\", \"renderFile\", \"validationMessage\", \"values\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Key } from '../../constants';\nimport { FormField } from '../../form-field';\nimport { useStyleConfig } from '../../hooks';\nimport { UploadIcon } from '../../icons';\nimport arrayToCsv from '../../lib/array-to-csv';\nimport isFunction from '../../lib/is-function';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport BrowseOrDragText from './BrowseOrDragText';\nimport FileCard from './FileCard';\nimport getFileDataTransferItems from './utils/get-file-data-transfer-items';\nimport { getMaxFilesMessage } from './utils/messages';\nimport splitFiles from './utils/split-files';\nvar UploaderState = {\n  Initial: 'initial',\n  Dragging: 'dragging',\n  Error: 'error'\n};\nvar disabledPseudoSelector = \"&[aria-disabled='true']\";\nvar dragHoverPseudoSelector = \"&[data-state='\".concat(UploaderState.Dragging, \"']\");\nvar invalidPseudoSelector = \"&[aria-invalid='true']\";\nvar hoverPseudoSelector = \"&:hover:not(\".concat(disabledPseudoSelector, \"):not(\").concat(dragHoverPseudoSelector, \"):not(\").concat(invalidPseudoSelector, \")\");\nvar hoverBrowseCopyPseudoSelector = \"\".concat(hoverPseudoSelector, \" span:first-of-type\");\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _focus: '&:focus',\n  _hover: hoverPseudoSelector,\n  _hoverBrowseCopy: hoverBrowseCopyPseudoSelector,\n  _hoverOrDragCopy: \"\".concat(hoverPseudoSelector, \" span:last-of-type:not(\").concat(hoverBrowseCopyPseudoSelector, \")\"),\n  _dragHover: dragHoverPseudoSelector,\n  _disabled: disabledPseudoSelector,\n  _invalid: invalidPseudoSelector\n};\nvar internalStyles = {};\nvar FileUploader = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var acceptedMimeTypes = props.acceptedMimeTypes,\n      browseOrDragText = props.browseOrDragText,\n      _props$dragMaxFilesMe = props.dragMaxFilesMessage,\n      dragMaxFilesMessage = _props$dragMaxFilesMe === void 0 ? getMaxFilesMessage : _props$dragMaxFilesMe,\n      description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      hint = props.hint,\n      isRequired = props.isRequired,\n      label = props.label,\n      labelFor = props.labelFor,\n      maxFiles = props.maxFiles,\n      maxSizeInBytes = props.maxSizeInBytes,\n      onAccepted = props.onAccepted,\n      onChange = props.onChange,\n      onRejected = props.onRejected,\n      onRemove = props.onRemove,\n      renderFile = props.renderFile,\n      validationMessageProp = props.validationMessage,\n      values = props.values,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileUploader', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(UploaderState.Initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validationMessage = _useState4[0],\n      setValidationMessage = _useState4[1];\n  /**\n   * The underlying <input type=\"file\" /> DOM element won't accept the same file after it has been\n   * picked unless it is rerendered manually - if a user selects and removes a file, they should\n   * still be able to pick it again without refreshing the page.\n   * https://stackoverflow.com/a/45846251\n   */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fileInputKey = _useState6[0],\n      setFileInputKey = _useState6[1];\n\n  var fileInputRef = useRef(null); // If the dropzone is meant to be a single file input and we already have a file, don't render\n  // the dropzone which will always result in rejected files/errors.\n\n  var renderDropzone = maxFiles !== 1 || isEmpty(values);\n  var resetState = useCallback(function () {\n    setState(UploaderState.Initial);\n    setValidationMessage('');\n  }, []);\n  var handleChange = useCallback(\n  /**\n   * @param {FileList} fileList\n   */\n  function (fileList) {\n    setFileInputKey(function (prev) {\n      return prev + 1;\n    });\n\n    if (isEmpty(fileList)) {\n      safeInvoke(onChange, []);\n      return;\n    }\n\n    var files = _toConsumableArray(fileList);\n\n    safeInvoke(onChange, files);\n\n    var _splitFiles = splitFiles(files, {\n      maxSizeInBytes: maxSizeInBytes,\n      acceptedMimeTypes: acceptedMimeTypes,\n      currentFileCount: values === null || values === void 0 ? void 0 : values.length,\n      maxFiles: maxFiles\n    }),\n        accepted = _splitFiles.accepted,\n        rejected = _splitFiles.rejected;\n\n    if (!isEmpty(accepted)) {\n      safeInvoke(onAccepted, accepted);\n    }\n\n    if (!isEmpty(rejected)) {\n      safeInvoke(onRejected, rejected);\n    }\n  }, [acceptedMimeTypes, maxFiles, maxSizeInBytes, onAccepted, onChange, onRejected, values === null || values === void 0 ? void 0 : values.length]);\n  var handleClick = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    if (fileInputRef.current == null) {\n      return;\n    }\n\n    fileInputRef.current.click();\n  }, [disabled]);\n  var handleDragOver = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy';\n\n    if (disabled) {\n      return;\n    }\n\n    var dragItems = getFileDataTransferItems(event.dataTransfer.items);\n    var draggingCount = dragItems.length;\n\n    var _ref = values !== null && values !== void 0 ? values : [],\n        currentCount = _ref.length;\n\n    if (maxFiles == null || maxFiles < 0) {\n      setState(UploaderState.Dragging);\n      return;\n    }\n\n    if (draggingCount > maxFiles || draggingCount + currentCount > maxFiles) {\n      setValidationMessage(dragMaxFilesMessage(maxFiles));\n      setState(UploaderState.Error);\n      return;\n    }\n\n    setState(UploaderState.Dragging);\n  }, [disabled, dragMaxFilesMessage, maxFiles, values]);\n  var handleDragLeave = useCallback(function () {\n    return resetState();\n  }, [resetState]);\n  var handleDrop = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    resetState();\n    handleChange(event.dataTransfer.files);\n  }, [disabled, handleChange, resetState]);\n  var handleInputChange = useCallback(\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   */\n  function (event) {\n    // Theoretically the input should not be accessible at all when disabled,\n    // but this should act as a safeguard\n    if (disabled) {\n      return;\n    }\n\n    handleChange(event.target.files);\n  }, [disabled, handleChange]);\n  var handleKeyDown = useCallback(\n  /**\n   * @param {React.KeyboardEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    if (event.key !== Key.Enter && event.key !== Key.Space) {\n      return;\n    }\n\n    event.preventDefault();\n    handleClick();\n  }, [handleClick]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: label,\n    labelFor: labelFor,\n    description: description,\n    hint: hint,\n    isRequired: isRequired // Always override the validationMessage from prop if we have a message to display from dragging\n    ,\n    validationMessage: !isEmpty(validationMessage) ? validationMessage : validationMessageProp\n  }, renderDropzone && /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled,\n    \"aria-invalid\": state === UploaderState.Error,\n    className: className,\n    \"data-state\": state,\n    onClick: handleClick,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: disabled ? undefined : 0\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    accept: arrayToCsv(acceptedMimeTypes),\n    display: \"none\",\n    is: \"input\",\n    tabIndex: -1,\n    key: fileInputKey,\n    multiple: maxFiles !== 1,\n    onChange: handleInputChange,\n    ref: fileInputRef,\n    type: \"file\"\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    backgroundColor: disabled ? colors.gray90 : colors.gray200,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    height: majorScale(7),\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    width: majorScale(7)\n  }, /*#__PURE__*/React.createElement(UploadIcon, {\n    color: disabled ? colors.gray400 : colors.gray500,\n    size: majorScale(3)\n  })), /*#__PURE__*/React.createElement(BrowseOrDragText, {\n    disabled: disabled,\n    maxFiles: maxFiles,\n    browseOrDragText: browseOrDragText\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: majorScale(2)\n  }, values === null || values === void 0 ? void 0 : values.map(\n  /**\n   * @param {File} file\n   * @param {number} index\n   */\n  function (file, index) {\n    return isFunction(renderFile) ? renderFile(file, index) : /*#__PURE__*/React.createElement(FileCard, {\n      key: \"\".concat(file.name, \"-\").concat(index),\n      name: file.name,\n      onRemove: isFunction(onRemove) ? function () {\n        return onRemove(file);\n      } : undefined,\n      sizeInBytes: file.size,\n      type: file.type\n    });\n  })));\n}));\nFileUploader.propTypes = _objectSpread(_objectSpread({}, FormField.propTypes), {}, {\n  /**\n   * MIME types (not file extensions) to accept\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n   */\n  acceptedMimeTypes: PropTypes.array,\n\n  /**\n   * Function to return a string or component for the 'Browse or drag' text\n   * @type {(maxFiles: number) => React.ReactNode}\n   */\n  browseOrDragText: PropTypes.func,\n\n  /**\n   * When true, displays a disabled state where drops don't fire and the native browser picker doesn't open\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Function to return a string when the max file limit has been hit while dragging\n   * @default You can upload up to {count} {file|files}.\n   * @type {(maxFiles: number) => string}\n   */\n  dragMaxFilesMessage: PropTypes.func,\n\n  /**\n   * Maximum number of files to accept\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Maximum size of an **individual** file to accept\n   */\n  maxSizeInBytes: PropTypes.number,\n\n  /**\n   * Callback for when files are accepted via drop or the native browser picker\n   * @type {(files: File[]) => void}\n   */\n  onAccepted: PropTypes.func,\n\n  /**\n   * Callback for when files are added via drop or the native browser picker, which includes both\n   * the accepted and rejected files\n   * @type {(files: File[]) => void}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback for when files are rejected via drop or the native browser picker\n   * @type {(fileRejections: FileRejection[]) => void}\n   */\n  onRejected: PropTypes.func,\n\n  /**\n   * Callback to fire when a file should be removed\n   * @type {(file: File) => void}\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Custom render function for displaying the file underneath the uploader\n   * @type {(file: File, index: number) => React.ReactNode}\n   */\n  renderFile: PropTypes.func,\n\n  /**\n   * File values to render underneath the uploader\n   * @type {File}\n   */\n  values: PropTypes.array\n});\nexport default FileUploader;","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/node_modules/evergreen-ui/esm/file-uploader/src/FileUploader.js"],"names":["_defineProperty","_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","_excluded2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","memo","forwardRef","useState","useRef","useCallback","isEmpty","PropTypes","Box","Key","FormField","useStyleConfig","UploadIcon","arrayToCsv","isFunction","safeInvoke","majorScale","useTheme","BrowseOrDragText","FileCard","getFileDataTransferItems","getMaxFilesMessage","splitFiles","UploaderState","Initial","Dragging","Error","disabledPseudoSelector","dragHoverPseudoSelector","concat","invalidPseudoSelector","hoverPseudoSelector","hoverBrowseCopyPseudoSelector","styleModifiers","pseudoSelectors","_focus","_hover","_hoverBrowseCopy","_hoverOrDragCopy","_dragHover","_disabled","_invalid","internalStyles","FileUploader","props","ref","acceptedMimeTypes","browseOrDragText","_props$dragMaxFilesMe","dragMaxFilesMessage","description","_props$disabled","disabled","hint","isRequired","label","labelFor","maxFiles","maxSizeInBytes","onAccepted","onChange","onRejected","onRemove","renderFile","validationMessageProp","validationMessage","values","rest","_useTheme","colors","_useStyleConfig","className","boxProps","_useState","_useState2","state","setState","_useState3","_useState4","setValidationMessage","_useState5","_useState6","fileInputKey","setFileInputKey","fileInputRef","renderDropzone","resetState","handleChange","fileList","prev","files","_splitFiles","currentFileCount","accepted","rejected","handleClick","current","click","handleDragOver","event","preventDefault","stopPropagation","dataTransfer","dropEffect","dragItems","items","draggingCount","_ref","currentCount","handleDragLeave","handleDrop","handleInputChange","handleKeyDown","Enter","Space","createElement","onClick","onDragLeave","onDragOver","onDrop","onKeyDown","tabIndex","undefined","accept","display","is","multiple","type","alignItems","backgroundColor","gray90","gray200","borderRadius","height","justifyContent","pointerEvents","width","color","gray400","gray500","size","marginTop","map","file","index","name","sizeInBytes","propTypes","array","func","bool","number"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"acceptedMimeTypes\", \"browseOrDragText\", \"dragMaxFilesMessage\", \"description\", \"disabled\", \"hint\", \"isRequired\", \"label\", \"labelFor\", \"maxFiles\", \"maxSizeInBytes\", \"onAccepted\", \"onChange\", \"onRejected\", \"onRemove\", \"renderFile\", \"validationMessage\", \"values\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Key } from '../../constants';\nimport { FormField } from '../../form-field';\nimport { useStyleConfig } from '../../hooks';\nimport { UploadIcon } from '../../icons';\nimport arrayToCsv from '../../lib/array-to-csv';\nimport isFunction from '../../lib/is-function';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport BrowseOrDragText from './BrowseOrDragText';\nimport FileCard from './FileCard';\nimport getFileDataTransferItems from './utils/get-file-data-transfer-items';\nimport { getMaxFilesMessage } from './utils/messages';\nimport splitFiles from './utils/split-files';\nvar UploaderState = {\n  Initial: 'initial',\n  Dragging: 'dragging',\n  Error: 'error'\n};\nvar disabledPseudoSelector = \"&[aria-disabled='true']\";\nvar dragHoverPseudoSelector = \"&[data-state='\".concat(UploaderState.Dragging, \"']\");\nvar invalidPseudoSelector = \"&[aria-invalid='true']\";\nvar hoverPseudoSelector = \"&:hover:not(\".concat(disabledPseudoSelector, \"):not(\").concat(dragHoverPseudoSelector, \"):not(\").concat(invalidPseudoSelector, \")\");\nvar hoverBrowseCopyPseudoSelector = \"\".concat(hoverPseudoSelector, \" span:first-of-type\");\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _focus: '&:focus',\n  _hover: hoverPseudoSelector,\n  _hoverBrowseCopy: hoverBrowseCopyPseudoSelector,\n  _hoverOrDragCopy: \"\".concat(hoverPseudoSelector, \" span:last-of-type:not(\").concat(hoverBrowseCopyPseudoSelector, \")\"),\n  _dragHover: dragHoverPseudoSelector,\n  _disabled: disabledPseudoSelector,\n  _invalid: invalidPseudoSelector\n};\nvar internalStyles = {};\nvar FileUploader = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var acceptedMimeTypes = props.acceptedMimeTypes,\n      browseOrDragText = props.browseOrDragText,\n      _props$dragMaxFilesMe = props.dragMaxFilesMessage,\n      dragMaxFilesMessage = _props$dragMaxFilesMe === void 0 ? getMaxFilesMessage : _props$dragMaxFilesMe,\n      description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      hint = props.hint,\n      isRequired = props.isRequired,\n      label = props.label,\n      labelFor = props.labelFor,\n      maxFiles = props.maxFiles,\n      maxSizeInBytes = props.maxSizeInBytes,\n      onAccepted = props.onAccepted,\n      onChange = props.onChange,\n      onRejected = props.onRejected,\n      onRemove = props.onRemove,\n      renderFile = props.renderFile,\n      validationMessageProp = props.validationMessage,\n      values = props.values,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileUploader', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(UploaderState.Initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validationMessage = _useState4[0],\n      setValidationMessage = _useState4[1];\n  /**\n   * The underlying <input type=\"file\" /> DOM element won't accept the same file after it has been\n   * picked unless it is rerendered manually - if a user selects and removes a file, they should\n   * still be able to pick it again without refreshing the page.\n   * https://stackoverflow.com/a/45846251\n   */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fileInputKey = _useState6[0],\n      setFileInputKey = _useState6[1];\n\n  var fileInputRef = useRef(null); // If the dropzone is meant to be a single file input and we already have a file, don't render\n  // the dropzone which will always result in rejected files/errors.\n\n  var renderDropzone = maxFiles !== 1 || isEmpty(values);\n  var resetState = useCallback(function () {\n    setState(UploaderState.Initial);\n    setValidationMessage('');\n  }, []);\n  var handleChange = useCallback(\n  /**\n   * @param {FileList} fileList\n   */\n  function (fileList) {\n    setFileInputKey(function (prev) {\n      return prev + 1;\n    });\n\n    if (isEmpty(fileList)) {\n      safeInvoke(onChange, []);\n      return;\n    }\n\n    var files = _toConsumableArray(fileList);\n\n    safeInvoke(onChange, files);\n\n    var _splitFiles = splitFiles(files, {\n      maxSizeInBytes: maxSizeInBytes,\n      acceptedMimeTypes: acceptedMimeTypes,\n      currentFileCount: values === null || values === void 0 ? void 0 : values.length,\n      maxFiles: maxFiles\n    }),\n        accepted = _splitFiles.accepted,\n        rejected = _splitFiles.rejected;\n\n    if (!isEmpty(accepted)) {\n      safeInvoke(onAccepted, accepted);\n    }\n\n    if (!isEmpty(rejected)) {\n      safeInvoke(onRejected, rejected);\n    }\n  }, [acceptedMimeTypes, maxFiles, maxSizeInBytes, onAccepted, onChange, onRejected, values === null || values === void 0 ? void 0 : values.length]);\n  var handleClick = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    if (fileInputRef.current == null) {\n      return;\n    }\n\n    fileInputRef.current.click();\n  }, [disabled]);\n  var handleDragOver = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy';\n\n    if (disabled) {\n      return;\n    }\n\n    var dragItems = getFileDataTransferItems(event.dataTransfer.items);\n    var draggingCount = dragItems.length;\n\n    var _ref = values !== null && values !== void 0 ? values : [],\n        currentCount = _ref.length;\n\n    if (maxFiles == null || maxFiles < 0) {\n      setState(UploaderState.Dragging);\n      return;\n    }\n\n    if (draggingCount > maxFiles || draggingCount + currentCount > maxFiles) {\n      setValidationMessage(dragMaxFilesMessage(maxFiles));\n      setState(UploaderState.Error);\n      return;\n    }\n\n    setState(UploaderState.Dragging);\n  }, [disabled, dragMaxFilesMessage, maxFiles, values]);\n  var handleDragLeave = useCallback(function () {\n    return resetState();\n  }, [resetState]);\n  var handleDrop = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    resetState();\n    handleChange(event.dataTransfer.files);\n  }, [disabled, handleChange, resetState]);\n  var handleInputChange = useCallback(\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   */\n  function (event) {\n    // Theoretically the input should not be accessible at all when disabled,\n    // but this should act as a safeguard\n    if (disabled) {\n      return;\n    }\n\n    handleChange(event.target.files);\n  }, [disabled, handleChange]);\n  var handleKeyDown = useCallback(\n  /**\n   * @param {React.KeyboardEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    if (event.key !== Key.Enter && event.key !== Key.Space) {\n      return;\n    }\n\n    event.preventDefault();\n    handleClick();\n  }, [handleClick]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: label,\n    labelFor: labelFor,\n    description: description,\n    hint: hint,\n    isRequired: isRequired // Always override the validationMessage from prop if we have a message to display from dragging\n    ,\n    validationMessage: !isEmpty(validationMessage) ? validationMessage : validationMessageProp\n  }, renderDropzone && /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled,\n    \"aria-invalid\": state === UploaderState.Error,\n    className: className,\n    \"data-state\": state,\n    onClick: handleClick,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: disabled ? undefined : 0\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    accept: arrayToCsv(acceptedMimeTypes),\n    display: \"none\",\n    is: \"input\",\n    tabIndex: -1,\n    key: fileInputKey,\n    multiple: maxFiles !== 1,\n    onChange: handleInputChange,\n    ref: fileInputRef,\n    type: \"file\"\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    backgroundColor: disabled ? colors.gray90 : colors.gray200,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    height: majorScale(7),\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    width: majorScale(7)\n  }, /*#__PURE__*/React.createElement(UploadIcon, {\n    color: disabled ? colors.gray400 : colors.gray500,\n    size: majorScale(3)\n  })), /*#__PURE__*/React.createElement(BrowseOrDragText, {\n    disabled: disabled,\n    maxFiles: maxFiles,\n    browseOrDragText: browseOrDragText\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: majorScale(2)\n  }, values === null || values === void 0 ? void 0 : values.map(\n  /**\n   * @param {File} file\n   * @param {number} index\n   */\n  function (file, index) {\n    return isFunction(renderFile) ? renderFile(file, index) : /*#__PURE__*/React.createElement(FileCard, {\n      key: \"\".concat(file.name, \"-\").concat(index),\n      name: file.name,\n      onRemove: isFunction(onRemove) ? function () {\n        return onRemove(file);\n      } : undefined,\n      sizeInBytes: file.size,\n      type: file.type\n    });\n  })));\n}));\nFileUploader.propTypes = _objectSpread(_objectSpread({}, FormField.propTypes), {}, {\n  /**\n   * MIME types (not file extensions) to accept\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n   */\n  acceptedMimeTypes: PropTypes.array,\n\n  /**\n   * Function to return a string or component for the 'Browse or drag' text\n   * @type {(maxFiles: number) => React.ReactNode}\n   */\n  browseOrDragText: PropTypes.func,\n\n  /**\n   * When true, displays a disabled state where drops don't fire and the native browser picker doesn't open\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Function to return a string when the max file limit has been hit while dragging\n   * @default You can upload up to {count} {file|files}.\n   * @type {(maxFiles: number) => string}\n   */\n  dragMaxFilesMessage: PropTypes.func,\n\n  /**\n   * Maximum number of files to accept\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Maximum size of an **individual** file to accept\n   */\n  maxSizeInBytes: PropTypes.number,\n\n  /**\n   * Callback for when files are accepted via drop or the native browser picker\n   * @type {(files: File[]) => void}\n   */\n  onAccepted: PropTypes.func,\n\n  /**\n   * Callback for when files are added via drop or the native browser picker, which includes both\n   * the accepted and rejected files\n   * @type {(files: File[]) => void}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback for when files are rejected via drop or the native browser picker\n   * @type {(fileRejections: FileRejection[]) => void}\n   */\n  onRejected: PropTypes.func,\n\n  /**\n   * Callback to fire when a file should be removed\n   * @type {(file: File) => void}\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Custom render function for displaying the file underneath the uploader\n   * @type {(file: File, index: number) => React.ReactNode}\n   */\n  renderFile: PropTypes.func,\n\n  /**\n   * File values to render underneath the uploader\n   * @type {File}\n   */\n  values: PropTypes.array\n});\nexport default FileUploader;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}