{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { memo, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport MenuDivider from './MenuDivider';\nimport MenuGroup from './MenuGroup';\nimport MenuItem from './MenuItem';\nimport MenuOption from './MenuOption';\nimport MenuOptionsGroup from './MenuOptionsGroup';\nvar Menu = /*#__PURE__*/memo(function Menu(props) {\n  var menuRef = useRef(null);\n  var firstItem = useRef();\n  var lastItem = useRef();\n  var menuItems = useRef();\n  useEffect(function () {\n    var currentMenuRef = menuRef.current;\n    menuItems.current = _toConsumableArray(currentMenuRef.querySelectorAll('[role=\"menuitemradio\"]:not([disabled]), [role=\"menuitem\"]:not([disabled])'));\n    firstItem.current = menuItems.current[0];\n    lastItem.current = menuItems.current[menuItems.current.length - 1]; // Go to next/previous item if it exists\n    // or loop around\n\n    var focusNext = function focusNext(currentItem, startItem) {\n      // Determine which item is the startItem (first or last)\n      var goingDown = startItem === firstItem.current; // Helper function for getting next legitimate element\n\n      var move = function move(elem) {\n        var indexOfItem = menuItems.current.indexOf(elem);\n\n        if (goingDown) {\n          if (indexOfItem < menuItems.current.length - 1) {\n            return menuItems.current[indexOfItem + 1];\n          }\n\n          return startItem;\n        }\n\n        if (indexOfItem - 1 > -1) {\n          return menuItems.current[indexOfItem - 1];\n        }\n\n        return startItem;\n      }; // Make first move\n\n\n      var nextItem = move(currentItem); // Focus the first one that's not disabled\n\n      nextItem.focus();\n    };\n\n    function onKeyPressListener(e) {\n      var target = e.target;\n      var menuItem = menuItems.current && menuItems.current.find(function (item) {\n        return item === target;\n      });\n      if (!menuItem) return;\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        focusNext(menuItem, firstItem.current);\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        focusNext(menuItem, lastItem.current);\n      }\n\n      if (e.key === 'Home') {\n        e.preventDefault();\n        firstItem.current.focus();\n      }\n\n      if (e.key === 'End') {\n        e.preventDefault();\n        lastItem.current.focus();\n      }\n    }\n\n    currentMenuRef.addEventListener('keydown', onKeyPressListener);\n    return function () {\n      currentMenuRef.removeEventListener('keydown', onKeyPressListener);\n    };\n  }, [menuRef]);\n  var children = props.children;\n\n  var renderEmptyChildren = function renderEmptyChildren() {\n    return /*#__PURE__*/React.createElement(MenuGroup, null, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true\n    }, \"No items...\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Pane, {\n    is: \"nav\",\n    ref: menuRef,\n    role: \"menu\",\n    outline: \"none\"\n  }, children || renderEmptyChildren());\n});\nMenu.Item = MenuItem;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Option = MenuOption;\nMenu.OptionsGroup = MenuOptionsGroup;\nMenu.propTypes = {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n};\nexport default Menu;","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/evergreen-ui/esm/menu/src/Menu.js"],"names":["_toConsumableArray","React","memo","useEffect","useRef","PropTypes","Pane","MenuDivider","MenuGroup","MenuItem","MenuOption","MenuOptionsGroup","Menu","props","menuRef","firstItem","lastItem","menuItems","currentMenuRef","current","querySelectorAll","length","focusNext","currentItem","startItem","goingDown","move","elem","indexOfItem","indexOf","nextItem","focus","onKeyPressListener","e","target","menuItem","find","item","key","preventDefault","addEventListener","removeEventListener","children","renderEmptyChildren","createElement","disabled","is","ref","role","outline","Item","Divider","Group","Option","OptionsGroup","propTypes","node"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,IAAIC,IAAI,GAAG,aAAaV,IAAI,CAAC,SAASU,IAAT,CAAcC,KAAd,EAAqB;AAChD,MAAIC,OAAO,GAAGV,MAAM,CAAC,IAAD,CAApB;AACA,MAAIW,SAAS,GAAGX,MAAM,EAAtB;AACA,MAAIY,QAAQ,GAAGZ,MAAM,EAArB;AACA,MAAIa,SAAS,GAAGb,MAAM,EAAtB;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIe,cAAc,GAAGJ,OAAO,CAACK,OAA7B;AACAF,IAAAA,SAAS,CAACE,OAAV,GAAoBnB,kBAAkB,CAACkB,cAAc,CAACE,gBAAf,CAAgC,2EAAhC,CAAD,CAAtC;AACAL,IAAAA,SAAS,CAACI,OAAV,GAAoBF,SAAS,CAACE,OAAV,CAAkB,CAAlB,CAApB;AACAH,IAAAA,QAAQ,CAACG,OAAT,GAAmBF,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACE,OAAV,CAAkBE,MAAlB,GAA2B,CAA7C,CAAnB,CAJoB,CAIgD;AACpE;;AAEA,QAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,WAAnB,EAAgCC,SAAhC,EAA2C;AACzD;AACA,UAAIC,SAAS,GAAGD,SAAS,KAAKT,SAAS,CAACI,OAAxC,CAFyD,CAER;;AAEjD,UAAIO,IAAI,GAAG,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAC7B,YAAIC,WAAW,GAAGX,SAAS,CAACE,OAAV,CAAkBU,OAAlB,CAA0BF,IAA1B,CAAlB;;AAEA,YAAIF,SAAJ,EAAe;AACb,cAAIG,WAAW,GAAGX,SAAS,CAACE,OAAV,CAAkBE,MAAlB,GAA2B,CAA7C,EAAgD;AAC9C,mBAAOJ,SAAS,CAACE,OAAV,CAAkBS,WAAW,GAAG,CAAhC,CAAP;AACD;;AAED,iBAAOJ,SAAP;AACD;;AAED,YAAII,WAAW,GAAG,CAAd,GAAkB,CAAC,CAAvB,EAA0B;AACxB,iBAAOX,SAAS,CAACE,OAAV,CAAkBS,WAAW,GAAG,CAAhC,CAAP;AACD;;AAED,eAAOJ,SAAP;AACD,OAhBD,CAJyD,CAoBtD;;;AAGH,UAAIM,QAAQ,GAAGJ,IAAI,CAACH,WAAD,CAAnB,CAvByD,CAuBvB;;AAElCO,MAAAA,QAAQ,CAACC,KAAT;AACD,KA1BD;;AA4BA,aAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B,UAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACA,UAAIC,QAAQ,GAAGlB,SAAS,CAACE,OAAV,IAAqBF,SAAS,CAACE,OAAV,CAAkBiB,IAAlB,CAAuB,UAAUC,IAAV,EAAgB;AACzE,eAAOA,IAAI,KAAKH,MAAhB;AACD,OAFmC,CAApC;AAGA,UAAI,CAACC,QAAL,EAAe;;AAEf,UAAIF,CAAC,CAACK,GAAF,KAAU,WAAd,EAA2B;AACzBL,QAAAA,CAAC,CAACM,cAAF;AACAjB,QAAAA,SAAS,CAACa,QAAD,EAAWpB,SAAS,CAACI,OAArB,CAAT;AACD;;AAED,UAAIc,CAAC,CAACK,GAAF,KAAU,SAAd,EAAyB;AACvBL,QAAAA,CAAC,CAACM,cAAF;AACAjB,QAAAA,SAAS,CAACa,QAAD,EAAWnB,QAAQ,CAACG,OAApB,CAAT;AACD;;AAED,UAAIc,CAAC,CAACK,GAAF,KAAU,MAAd,EAAsB;AACpBL,QAAAA,CAAC,CAACM,cAAF;AACAxB,QAAAA,SAAS,CAACI,OAAV,CAAkBY,KAAlB;AACD;;AAED,UAAIE,CAAC,CAACK,GAAF,KAAU,KAAd,EAAqB;AACnBL,QAAAA,CAAC,CAACM,cAAF;AACAvB,QAAAA,QAAQ,CAACG,OAAT,CAAiBY,KAAjB;AACD;AACF;;AAEDb,IAAAA,cAAc,CAACsB,gBAAf,CAAgC,SAAhC,EAA2CR,kBAA3C;AACA,WAAO,YAAY;AACjBd,MAAAA,cAAc,CAACuB,mBAAf,CAAmC,SAAnC,EAA8CT,kBAA9C;AACD,KAFD;AAGD,GAnEQ,EAmEN,CAAClB,OAAD,CAnEM,CAAT;AAoEA,MAAI4B,QAAQ,GAAG7B,KAAK,CAAC6B,QAArB;;AAEA,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,GAA+B;AACvD,WAAO,aAAa1C,KAAK,CAAC2C,aAAN,CAAoBpC,SAApB,EAA+B,IAA/B,EAAqC,aAAaP,KAAK,CAAC2C,aAAN,CAAoBnC,QAApB,EAA8B;AAClGoC,MAAAA,QAAQ,EAAE;AADwF,KAA9B,EAEnE,aAFmE,CAAlD,CAApB;AAGD,GAJD;;AAMA,SAAO,aAAa5C,KAAK,CAAC2C,aAAN,CAAoBtC,IAApB,EAA0B;AAC5CwC,IAAAA,EAAE,EAAE,KADwC;AAE5CC,IAAAA,GAAG,EAAEjC,OAFuC;AAG5CkC,IAAAA,IAAI,EAAE,MAHsC;AAI5CC,IAAAA,OAAO,EAAE;AAJmC,GAA1B,EAKjBP,QAAQ,IAAIC,mBAAmB,EALd,CAApB;AAMD,CAvF2B,CAA5B;AAwFA/B,IAAI,CAACsC,IAAL,GAAYzC,QAAZ;AACAG,IAAI,CAACuC,OAAL,GAAe5C,WAAf;AACAK,IAAI,CAACwC,KAAL,GAAa5C,SAAb;AACAI,IAAI,CAACuC,OAAL,GAAe5C,WAAf;AACAK,IAAI,CAACwC,KAAL,GAAa5C,SAAb;AACAI,IAAI,CAACyC,MAAL,GAAc3C,UAAd;AACAE,IAAI,CAAC0C,YAAL,GAAoB3C,gBAApB;AACAC,IAAI,CAAC2C,SAAL,GAAiB;AACf;AACF;AACA;AACEb,EAAAA,QAAQ,EAAErC,SAAS,CAACmD;AAJL,CAAjB;AAMA,eAAe5C,IAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { memo, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport MenuDivider from './MenuDivider';\nimport MenuGroup from './MenuGroup';\nimport MenuItem from './MenuItem';\nimport MenuOption from './MenuOption';\nimport MenuOptionsGroup from './MenuOptionsGroup';\nvar Menu = /*#__PURE__*/memo(function Menu(props) {\n  var menuRef = useRef(null);\n  var firstItem = useRef();\n  var lastItem = useRef();\n  var menuItems = useRef();\n  useEffect(function () {\n    var currentMenuRef = menuRef.current;\n    menuItems.current = _toConsumableArray(currentMenuRef.querySelectorAll('[role=\"menuitemradio\"]:not([disabled]), [role=\"menuitem\"]:not([disabled])'));\n    firstItem.current = menuItems.current[0];\n    lastItem.current = menuItems.current[menuItems.current.length - 1]; // Go to next/previous item if it exists\n    // or loop around\n\n    var focusNext = function focusNext(currentItem, startItem) {\n      // Determine which item is the startItem (first or last)\n      var goingDown = startItem === firstItem.current; // Helper function for getting next legitimate element\n\n      var move = function move(elem) {\n        var indexOfItem = menuItems.current.indexOf(elem);\n\n        if (goingDown) {\n          if (indexOfItem < menuItems.current.length - 1) {\n            return menuItems.current[indexOfItem + 1];\n          }\n\n          return startItem;\n        }\n\n        if (indexOfItem - 1 > -1) {\n          return menuItems.current[indexOfItem - 1];\n        }\n\n        return startItem;\n      }; // Make first move\n\n\n      var nextItem = move(currentItem); // Focus the first one that's not disabled\n\n      nextItem.focus();\n    };\n\n    function onKeyPressListener(e) {\n      var target = e.target;\n      var menuItem = menuItems.current && menuItems.current.find(function (item) {\n        return item === target;\n      });\n      if (!menuItem) return;\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        focusNext(menuItem, firstItem.current);\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        focusNext(menuItem, lastItem.current);\n      }\n\n      if (e.key === 'Home') {\n        e.preventDefault();\n        firstItem.current.focus();\n      }\n\n      if (e.key === 'End') {\n        e.preventDefault();\n        lastItem.current.focus();\n      }\n    }\n\n    currentMenuRef.addEventListener('keydown', onKeyPressListener);\n    return function () {\n      currentMenuRef.removeEventListener('keydown', onKeyPressListener);\n    };\n  }, [menuRef]);\n  var children = props.children;\n\n  var renderEmptyChildren = function renderEmptyChildren() {\n    return /*#__PURE__*/React.createElement(MenuGroup, null, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true\n    }, \"No items...\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Pane, {\n    is: \"nav\",\n    ref: menuRef,\n    role: \"menu\",\n    outline: \"none\"\n  }, children || renderEmptyChildren());\n});\nMenu.Item = MenuItem;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Option = MenuOption;\nMenu.OptionsGroup = MenuOptionsGroup;\nMenu.propTypes = {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n};\nexport default Menu;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}