{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"description\", \"disabled\", \"isInvalid\", \"isLoading\", \"name\", \"onRemove\", \"sizeInBytes\", \"src\", \"type\", \"validationMessage\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport humanize from 'humanize-plus';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { IconButton } from '../../buttons';\nimport { useStyleConfig } from '../../hooks';\nimport { InfoSignIcon, TrashIcon } from '../../icons';\nimport { Image } from '../../image';\nimport { Card } from '../../layers';\nimport hasValue from '../../lib/has-value';\nimport isFunction from '../../lib/is-function';\nimport { majorScale } from '../../scales';\nimport { Spinner } from '../../spinner';\nimport { useTheme } from '../../theme';\nimport { Paragraph } from '../../typography';\nimport getIconFromType from './utils/get-icon-from-type';\nimport isImage from './utils/is-image';\nvar imageSize = majorScale(5);\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _invalid: \"&[aria-invalid='true']\"\n};\nvar internalStyles = {};\nvar FileCard = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      _props$isLoading = props.isLoading,\n      isLoading = _props$isLoading === void 0 ? false : _props$isLoading,\n      name = props.name,\n      onRemove = props.onRemove,\n      sizeInBytes = props.sizeInBytes,\n      src = props.src,\n      type = props.type,\n      validationMessage = props.validationMessage,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileCard', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var FileTypeIcon = getIconFromType(type);\n  var renderImage = hasValue(src) && isImage(type);\n  var renderInvalidIcon = !isLoading && isInvalid;\n  var renderDefaultIcon = !isLoading && !isInvalid;\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: isInvalid ? majorScale(1) : majorScale(2)\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-invalid\": isInvalid,\n    className: className\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginLeft: majorScale(2),\n    marginRight: majorScale(1)\n  }, renderImage ? /*#__PURE__*/React.createElement(Image, {\n    height: imageSize,\n    src: src,\n    width: imageSize\n  }) : /*#__PURE__*/React.createElement(Card, {\n    alignItems: \"center\",\n    backgroundColor: isInvalid || isLoading ? undefined : colors.gray90,\n    display: \"flex\",\n    height: majorScale(5),\n    justifyContent: \"center\",\n    width: majorScale(5)\n  }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    size: majorScale(2)\n  }), renderInvalidIcon && /*#__PURE__*/React.createElement(InfoSignIcon, {\n    color: colors.red500,\n    size: majorScale(2)\n  }), renderDefaultIcon && /*#__PURE__*/React.createElement(FileTypeIcon, {\n    color: colors.gray600,\n    size: majorScale(2)\n  }))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\"\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.gray800,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }, name), /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.gray700,\n    size: 300\n  }, hasValue(description) ? description : humanize.fileSize(sizeInBytes, 0))), isFunction(onRemove) && /*#__PURE__*/React.createElement(IconButton, {\n    appearance: \"minimal\",\n    disabled: disabled || isLoading,\n    icon: TrashIcon,\n    onClick: onRemove,\n    marginLeft: \"auto\",\n    marginRight: majorScale(2),\n    type: \"button\"\n  }))), hasValue(validationMessage) && /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.red500,\n    size: \"small\"\n  }, validationMessage));\n}));\nFileCard.propTypes = {\n  /**\n   * Description to display under the file name. If not provided, defaults to the file size\n   */\n  description: PropTypes.string,\n\n  /**\n   * Disables the button to remove the file\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, displays the card in an error state\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * Sets a loading state on the card. If the remove button is rendered, it will be disabled\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Name of the file to display\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback to be fired when the remove button is clicked. If not provided, the button will not\n   * render\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Size of the file\n   */\n  sizeInBytes: PropTypes.number,\n\n  /**\n   * Url of the uploaded image\n   */\n  src: PropTypes.string,\n\n  /**\n   * MimeType of the file to display, which controls what type of icon is rendered\n   */\n  type: PropTypes.string,\n\n  /**\n   * Message to display underneath the card\n   */\n  validationMessage: PropTypes.string\n};\nexport default FileCard;","map":{"version":3,"sources":["D:/0xtest/WifiAssistant/node_modules/evergreen-ui/esm/file-uploader/src/FileCard.js"],"names":["_extends","_objectWithoutProperties","_excluded","_excluded2","React","memo","forwardRef","humanize","PropTypes","Box","IconButton","useStyleConfig","InfoSignIcon","TrashIcon","Image","Card","hasValue","isFunction","majorScale","Spinner","useTheme","Paragraph","getIconFromType","isImage","imageSize","styleModifiers","pseudoSelectors","_invalid","internalStyles","FileCard","props","ref","description","_props$disabled","disabled","_props$isInvalid","isInvalid","_props$isLoading","isLoading","name","onRemove","sizeInBytes","src","type","validationMessage","rest","_useTheme","colors","_useStyleConfig","className","boxProps","FileTypeIcon","renderImage","renderInvalidIcon","renderDefaultIcon","createElement","display","flexDirection","marginBottom","alignItems","width","marginLeft","marginRight","height","backgroundColor","undefined","gray90","justifyContent","size","color","red500","gray600","overflow","gray800","whiteSpace","textOverflow","gray700","fileSize","appearance","icon","onClick","propTypes","string","bool","func","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"description\", \"disabled\", \"isInvalid\", \"isLoading\", \"name\", \"onRemove\", \"sizeInBytes\", \"src\", \"type\", \"validationMessage\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport humanize from 'humanize-plus';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { IconButton } from '../../buttons';\nimport { useStyleConfig } from '../../hooks';\nimport { InfoSignIcon, TrashIcon } from '../../icons';\nimport { Image } from '../../image';\nimport { Card } from '../../layers';\nimport hasValue from '../../lib/has-value';\nimport isFunction from '../../lib/is-function';\nimport { majorScale } from '../../scales';\nimport { Spinner } from '../../spinner';\nimport { useTheme } from '../../theme';\nimport { Paragraph } from '../../typography';\nimport getIconFromType from './utils/get-icon-from-type';\nimport isImage from './utils/is-image';\nvar imageSize = majorScale(5);\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _invalid: \"&[aria-invalid='true']\"\n};\nvar internalStyles = {};\nvar FileCard = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      _props$isLoading = props.isLoading,\n      isLoading = _props$isLoading === void 0 ? false : _props$isLoading,\n      name = props.name,\n      onRemove = props.onRemove,\n      sizeInBytes = props.sizeInBytes,\n      src = props.src,\n      type = props.type,\n      validationMessage = props.validationMessage,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileCard', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var FileTypeIcon = getIconFromType(type);\n  var renderImage = hasValue(src) && isImage(type);\n  var renderInvalidIcon = !isLoading && isInvalid;\n  var renderDefaultIcon = !isLoading && !isInvalid;\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: isInvalid ? majorScale(1) : majorScale(2)\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-invalid\": isInvalid,\n    className: className\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    marginLeft: majorScale(2),\n    marginRight: majorScale(1)\n  }, renderImage ? /*#__PURE__*/React.createElement(Image, {\n    height: imageSize,\n    src: src,\n    width: imageSize\n  }) : /*#__PURE__*/React.createElement(Card, {\n    alignItems: \"center\",\n    backgroundColor: isInvalid || isLoading ? undefined : colors.gray90,\n    display: \"flex\",\n    height: majorScale(5),\n    justifyContent: \"center\",\n    width: majorScale(5)\n  }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    size: majorScale(2)\n  }), renderInvalidIcon && /*#__PURE__*/React.createElement(InfoSignIcon, {\n    color: colors.red500,\n    size: majorScale(2)\n  }), renderDefaultIcon && /*#__PURE__*/React.createElement(FileTypeIcon, {\n    color: colors.gray600,\n    size: majorScale(2)\n  }))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\"\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.gray800,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }, name), /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.gray700,\n    size: 300\n  }, hasValue(description) ? description : humanize.fileSize(sizeInBytes, 0))), isFunction(onRemove) && /*#__PURE__*/React.createElement(IconButton, {\n    appearance: \"minimal\",\n    disabled: disabled || isLoading,\n    icon: TrashIcon,\n    onClick: onRemove,\n    marginLeft: \"auto\",\n    marginRight: majorScale(2),\n    type: \"button\"\n  }))), hasValue(validationMessage) && /*#__PURE__*/React.createElement(Paragraph, {\n    color: colors.red500,\n    size: \"small\"\n  }, validationMessage));\n}));\nFileCard.propTypes = {\n  /**\n   * Description to display under the file name. If not provided, defaults to the file size\n   */\n  description: PropTypes.string,\n\n  /**\n   * Disables the button to remove the file\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, displays the card in an error state\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * Sets a loading state on the card. If the remove button is rendered, it will be disabled\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Name of the file to display\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback to be fired when the remove button is clicked. If not provided, the button will not\n   * render\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Size of the file\n   */\n  sizeInBytes: PropTypes.number,\n\n  /**\n   * Url of the uploaded image\n   */\n  src: PropTypes.string,\n\n  /**\n   * MimeType of the file to display, which controls what type of icon is rendered\n   */\n  type: PropTypes.string,\n\n  /**\n   * Message to display underneath the card\n   */\n  validationMessage: PropTypes.string\n};\nexport default FileCard;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}