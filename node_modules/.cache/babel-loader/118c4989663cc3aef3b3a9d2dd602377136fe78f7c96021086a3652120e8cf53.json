{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { Intent } from '../../constants';\nimport { TickCircleIcon, ErrorIcon, WarningSignIcon, InfoSignIcon } from '../../icons';\n/**\n * Get the properties for an icon based on the intent.\n * @param {Intent} intent\n */\n\nexport var getIconForIntent = function getIconForIntent(intent) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (intent) {\n    case Intent.SUCCESS:\n      return /*#__PURE__*/React.createElement(TickCircleIcon, _extends({\n        color: \"success\"\n      }, props));\n\n    case Intent.DANGER:\n      return /*#__PURE__*/React.createElement(ErrorIcon, _extends({\n        color: \"danger\"\n      }, props));\n\n    case Intent.WARNING:\n      return /*#__PURE__*/React.createElement(WarningSignIcon, _extends({\n        color: \"warning\"\n      }, props));\n\n    case Intent.NONE:\n    default:\n      return /*#__PURE__*/React.createElement(InfoSignIcon, _extends({\n        color: \"info\"\n      }, props));\n  }\n};","map":{"version":3,"sources":["D:/0xtest/WifiAssistant/node_modules/evergreen-ui/esm/alert/src/getIconForIntent.js"],"names":["_extends","React","Intent","TickCircleIcon","ErrorIcon","WarningSignIcon","InfoSignIcon","getIconForIntent","intent","props","arguments","length","undefined","SUCCESS","createElement","color","DANGER","WARNING","NONE"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,eAApC,EAAqDC,YAArD,QAAyE,aAAzE;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9D,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;;AAEA,UAAQF,MAAR;AACE,SAAKN,MAAM,CAACW,OAAZ;AACE,aAAO,aAAaZ,KAAK,CAACa,aAAN,CAAoBX,cAApB,EAAoCH,QAAQ,CAAC;AAC/De,QAAAA,KAAK,EAAE;AADwD,OAAD,EAE7DN,KAF6D,CAA5C,CAApB;;AAIF,SAAKP,MAAM,CAACc,MAAZ;AACE,aAAO,aAAaf,KAAK,CAACa,aAAN,CAAoBV,SAApB,EAA+BJ,QAAQ,CAAC;AAC1De,QAAAA,KAAK,EAAE;AADmD,OAAD,EAExDN,KAFwD,CAAvC,CAApB;;AAIF,SAAKP,MAAM,CAACe,OAAZ;AACE,aAAO,aAAahB,KAAK,CAACa,aAAN,CAAoBT,eAApB,EAAqCL,QAAQ,CAAC;AAChEe,QAAAA,KAAK,EAAE;AADyD,OAAD,EAE9DN,KAF8D,CAA7C,CAApB;;AAIF,SAAKP,MAAM,CAACgB,IAAZ;AACA;AACE,aAAO,aAAajB,KAAK,CAACa,aAAN,CAAoBR,YAApB,EAAkCN,QAAQ,CAAC;AAC7De,QAAAA,KAAK,EAAE;AADsD,OAAD,EAE3DN,KAF2D,CAA1C,CAApB;AAlBJ;AAsBD,CAzBM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { Intent } from '../../constants';\nimport { TickCircleIcon, ErrorIcon, WarningSignIcon, InfoSignIcon } from '../../icons';\n/**\n * Get the properties for an icon based on the intent.\n * @param {Intent} intent\n */\n\nexport var getIconForIntent = function getIconForIntent(intent) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (intent) {\n    case Intent.SUCCESS:\n      return /*#__PURE__*/React.createElement(TickCircleIcon, _extends({\n        color: \"success\"\n      }, props));\n\n    case Intent.DANGER:\n      return /*#__PURE__*/React.createElement(ErrorIcon, _extends({\n        color: \"danger\"\n      }, props));\n\n    case Intent.WARNING:\n      return /*#__PURE__*/React.createElement(WarningSignIcon, _extends({\n        color: \"warning\"\n      }, props));\n\n    case Intent.NONE:\n    default:\n      return /*#__PURE__*/React.createElement(InfoSignIcon, _extends({\n        color: \"info\"\n      }, props));\n  }\n};"]},"metadata":{},"sourceType":"module","externalDependencies":[]}