{"ast":null,"code":"import React from 'react';\n/**\n * React hook that returns the previous value\n * @param {any} value\n */\n\nexport function usePrevious(value, initialValue) {\n  var ref = React.useRef(initialValue); // Store current value in ref, only update if the value changes\n\n  React.useEffect(function () {\n    ref.current = value;\n  }, [value]); // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/evergreen-ui/esm/hooks/use-previous.js"],"names":["React","usePrevious","value","initialValue","ref","useRef","useEffect","current"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,YAA5B,EAA0C;AAC/C,MAAIC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAaF,YAAb,CAAV,CAD+C,CACT;;AAEtCH,EAAAA,KAAK,CAACM,SAAN,CAAgB,YAAY;AAC1BF,IAAAA,GAAG,CAACG,OAAJ,GAAcL,KAAd;AACD,GAFD,EAEG,CAACA,KAAD,CAFH,EAH+C,CAKlC;;AAEb,SAAOE,GAAG,CAACG,OAAX;AACD","sourcesContent":["import React from 'react';\n/**\n * React hook that returns the previous value\n * @param {any} value\n */\n\nexport function usePrevious(value, initialValue) {\n  var ref = React.useRef(initialValue); // Store current value in ref, only update if the value changes\n\n  React.useEffect(function () {\n    ref.current = value;\n  }, [value]); // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}