{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/study/WifiAssistant/WifiAssistant/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"D:/study/WifiAssistant/WifiAssistant/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{CameraIcon,Card,Heading,MobilePhoneIcon,Pane,Paragraph,Text,TextareaField}from'evergreen-ui';import QRCode from'qrcode.react';import{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import logo from'../../src/images/wifi.png';import'./style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var WifiCard=function WifiCard(props){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),qrvalue=_useState2[0],setQrvalue=_useState2[1];var escape=function escape(v){var needsEscape=['\"',';',',',':','\\\\'];var escaped='';var _iterator=_createForOfIteratorHelper(v),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var c=_step.value;if(needsEscape.includes(c)){escaped+=\"\\\\\".concat(c);}else{escaped+=c;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return escaped;};useEffect(function(){var ssid=escape(props.settings.ssid);var password=!props.settings.encryptionMode?'':escape(props.settings.password);var qrval=props.settings.encryptionMode==='WPA2-EAP'?\"WIFI:T:\".concat(props.settings.encryptionMode,\";S:\").concat(ssid,\";P:\").concat(password,\";H:\").concat(props.settings.hiddenSSID,\";E:\").concat(props.settings.eapMethod,\";I:\").concat(props.settings.eapIdentity,\";;\"):\"WIFI:T:\".concat(props.settings.encryptionMode,\";S:\").concat(ssid,\";P:\").concat(password,\";H:\").concat(props.settings.hiddenSSID,\";;\");setQrvalue(qrval);},[props.settings]);var portraitWidth=function portraitWidth(){var isMobile=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent);return isMobile?'100%':'280px';};var passwordFieldLabel=function passwordFieldLabel(){var hiddenPassword=props.settings.hidePassword||!props.settings.encryptionMode;return hiddenPassword?'':'密码';};// const eapIdentityFieldLabel = () => {\n//   const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n//   return hiddenIdentity ? '' : t('wifi.identity');\n// };\n// const eapMethodFieldLabel = () => {\n//   return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n// };\nreturn/*#__PURE__*/_jsx(Pane,{children:/*#__PURE__*/_jsxs(Card,{id:\"print-area\",elevation:3,style:{maxWidth:props.settings.portrait?portraitWidth():'100%'},children:[/*#__PURE__*/_jsxs(Pane,{display:\"flex\",paddingBottom:12,children:[/*#__PURE__*/_jsx(\"img\",{alt:\"icon\",src:logo,width:\"24\",height:\"24\"}),/*#__PURE__*/_jsx(Heading,{size:700,paddingRight:10,paddingLeft:10,textAlign:props.settings.portrait?'center':'unset',children:'连接 WiFi'})]}),/*#__PURE__*/_jsxs(Pane,{className:\"details\",style:{flexDirection:props.settings.portrait?'column':'row'},children:[/*#__PURE__*/_jsx(QRCode,{className:\"qrcode\",style:{padding:'1em'},value:qrvalue,size:150}),/*#__PURE__*/_jsxs(Pane,{width:'100%',children:[/*#__PURE__*/_jsx(TextareaField,{id:\"ssid\",type:\"text\",marginBottom:5,autoComplete:\"off\",autoCorrect:\"off\",autoCapitalize:\"none\",spellCheck:false,maxLength:\"32\",label:'网络名称',placeholder:'WiFi 网络名称',value:props.settings.ssid,onChange:function onChange(e){return props.onSSIDChange(e.target.value);},isInvalid:!!props.ssidError,validationMessage:!!props.ssidError&&props.ssidError}),/*#__PURE__*/_jsx(TextareaField,{id:\"password\",type:\"text\",maxLength:\"63\",autoComplete:\"off\",autoCorrect:\"off\",autoCapitalize:\"none\",spellCheck:false,className:\"\\n                \".concat((props.settings.hidePassword||!props.settings.encryptionMode)&&'hidden',\"\\n              \"),height:props.settings.portrait&&props.settings.password.length>40?'5em':'auto',label:passwordFieldLabel(),placeholder:'密码',value:props.settings.password,onChange:function onChange(e){return props.onPasswordChange(e.target.value);},isInvalid:!!props.passwordError,validationMessage:!!props.passwordError&&props.passwordError})]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(Paragraph,{children:[/*#__PURE__*/_jsx(MobilePhoneIcon,{}),/*#__PURE__*/_jsx(Text,{size:300,paddingRight:8,paddingLeft:8,children:'打开手机的相机功能，将摄像头对准二维码即可自动连接'})]}),/*#__PURE__*/_jsxs(Paragraph,{children:[/*#__PURE__*/_jsx(CameraIcon,{}),/*#__PURE__*/_jsx(Text,{size:300,paddingRight:8,paddingLeft:8,children:'请不要使用微信或者支付宝的扫码功能'})]})]})});};","map":{"version":3,"sources":["D:/study/WifiAssistant/WifiAssistant/src/components/WifiCard.js"],"names":["CameraIcon","Card","Heading","MobilePhoneIcon","Pane","Paragraph","Text","TextareaField","QRCode","useEffect","useState","useTranslation","logo","WifiCard","props","t","qrvalue","setQrvalue","escape","v","needsEscape","escaped","c","includes","ssid","settings","password","encryptionMode","qrval","hiddenSSID","eapMethod","eapIdentity","portraitWidth","isMobile","test","navigator","userAgent","passwordFieldLabel","hiddenPassword","hidePassword","maxWidth","portrait","flexDirection","padding","e","onSSIDChange","target","value","ssidError","length","onPasswordChange","passwordError"],"mappings":"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","sourcesContent":["import {\n  CameraIcon,\n  Card,\n  Heading,\n  MobilePhoneIcon,\n  Pane,\n  Paragraph,\n  Text,\n  TextareaField,\n} from 'evergreen-ui';\nimport QRCode from 'qrcode.react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logo from '../../src/images/wifi.png';\nimport './style.css';\n\nexport const WifiCard = (props) => {\n  const { t } = useTranslation();\n  const [qrvalue, setQrvalue] = useState('');\n\n  const escape = (v) => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n\n    let escaped = '';\n    for (const c of v) {\n      if (needsEscape.includes(c)) {\n        escaped += `\\\\${c}`;\n      } else {\n        escaped += c;\n      }\n    }\n    return escaped;\n  };\n\n  useEffect(() => {\n    const ssid = escape(props.settings.ssid);\n    const password = !props.settings.encryptionMode\n      ? ''\n      : escape(props.settings.password);\n    const qrval =\n      props.settings.encryptionMode === 'WPA2-EAP'\n        ? `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};E:${props.settings.eapMethod};I:${props.settings.eapIdentity};;`\n        : `WIFI:T:${props.settings.encryptionMode};S:${ssid};P:${password};H:${props.settings.hiddenSSID};;`;\n    setQrvalue(qrval);\n  }, [props.settings]);\n\n  const portraitWidth = () => {\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile ? '100%' : '280px';\n  };\n\n  const passwordFieldLabel = () => {\n    const hiddenPassword =\n      props.settings.hidePassword || !props.settings.encryptionMode;\n    return hiddenPassword ? '' : '密码';\n  };\n\n  // const eapIdentityFieldLabel = () => {\n  //   const hiddenIdentity = props.settings.encryptionMode !== 'WPA2-EAP';\n  //   return hiddenIdentity ? '' : t('wifi.identity');\n  // };\n\n  // const eapMethodFieldLabel = () => {\n  //   return !eapIdentityFieldLabel() ? '' : t('wifi.encryption.eapMethod');\n  // };\n\n  return (\n    <Pane>\n      <Card\n        id=\"print-area\"\n        elevation={3}\n        style={{ maxWidth: props.settings.portrait ? portraitWidth() : '100%' }}\n      >\n        <Pane display=\"flex\" paddingBottom={12}>\n          <img alt=\"icon\" src={logo} width=\"24\" height=\"24\" />\n          <Heading\n            size={700}\n            paddingRight={10}\n            paddingLeft={10}\n            textAlign={props.settings.portrait ? 'center' : 'unset'}\n          >\n            {'连接 WiFi'}\n          </Heading>\n        </Pane>\n\n        <Pane\n          className=\"details\"\n          style={{ flexDirection: props.settings.portrait ? 'column' : 'row' }}\n        >\n          <QRCode\n            className=\"qrcode\"\n            style={{ padding: '1em' }}\n            value={qrvalue}\n            size={150}\n          />\n\n          <Pane width={'100%'}>\n            <TextareaField\n              id=\"ssid\"\n              type=\"text\"\n              marginBottom={5}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              maxLength=\"32\"\n              label={'网络名称'}\n              placeholder={'WiFi 网络名称'}\n              value={props.settings.ssid}\n              onChange={(e) => props.onSSIDChange(e.target.value)}\n              isInvalid={!!props.ssidError}\n              validationMessage={!!props.ssidError && props.ssidError}\n            />\n            {/* <TextareaField\n              id=\"eapmethod\"\n              type=\"text\"\n              marginBottom={5}\n              readOnly={true}\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapMethodFieldLabel()}\n              value={props.settings.eapMethod}\n            /> */}\n            {/* <TextareaField\n              id=\"identity\"\n              type=\"text\"\n              marginBottom={5}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${props.settings.encryptionMode !== 'WPA2-EAP' && 'hidden'}\n              `}\n              label={eapIdentityFieldLabel()}\n              placeholder={t('wifi.identity.placeholder')}\n              value={props.settings.eapIdentity}\n              onChange={(e) => props.onEapIdentityChange(e.target.value)}\n              isInvalid={!!props.eapIdentityError}\n              validationMessage={\n                !!props.eapIdentityError && props.eapIdentityError\n              }\n            /> */}\n            <TextareaField\n              id=\"password\"\n              type=\"text\"\n              maxLength=\"63\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"none\"\n              spellCheck={false}\n              className={`\n                ${\n                  (props.settings.hidePassword ||\n                    !props.settings.encryptionMode) &&\n                  'hidden'\n                }\n              `}\n              height={\n                props.settings.portrait && props.settings.password.length > 40\n                  ? '5em'\n                  : 'auto'\n              }\n              label={passwordFieldLabel()}\n              placeholder={'密码'}\n              value={props.settings.password}\n              onChange={(e) => props.onPasswordChange(e.target.value)}\n              isInvalid={!!props.passwordError}\n              validationMessage={!!props.passwordError && props.passwordError}\n            />\n          </Pane>\n        </Pane>\n        <hr />\n        <Paragraph>\n          <MobilePhoneIcon />\n          <Text size={300} paddingRight={8} paddingLeft={8}>\n            {'打开手机的相机功能，将摄像头对准二维码即可自动连接'}\n          </Text>\n        </Paragraph>\n        <Paragraph>\n          <CameraIcon />\n          <Text size={300} paddingRight={8} paddingLeft={8}>\n            {'请不要使用微信或者支付宝的扫码功能'}\n          </Text>\n        </Paragraph>\n      </Card>\n    </Pane>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}