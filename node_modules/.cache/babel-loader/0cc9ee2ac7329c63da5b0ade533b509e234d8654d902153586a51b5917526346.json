{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"D:/0xtest/wifi-card-master/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar flattenObject = function flattenObject(object) {\n  var keys = Object.keys(object);\n  return keys.map(function (key) {\n    var value = object[key];\n    var type = typeof value;\n\n    if (Array.isArray(value)) {\n      return \"\".concat(key, \":array:[\").concat(value.map(function (value, index) {\n        return flattenObject(_defineProperty({}, index, value));\n      }), \"]\");\n    }\n\n    if (value != null && type === 'object') {\n      return \"\".concat(key, \":\").concat(type, \":\").concat(flattenObject(value));\n    }\n\n    return \"\".concat(key, \":\").concat(type, \":\").concat(value);\n  }).join(';');\n};\n\nexports.default = flattenObject;","map":{"version":3,"sources":["D:/0xtest/wifi-card-master/node_modules/ui-box/dist/src/utils/flatten-object.js"],"names":["Object","defineProperty","exports","value","flattenObject","object","keys","map","key","type","Array","isArray","index","join","default"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAC9B,MAAMC,IAAI,GAAGN,MAAM,CAACM,IAAP,CAAYD,MAAZ,CAAb;AACA,SAAOC,IAAI,CACNC,GADE,CACE,UAAAC,GAAG,EAAI;AACZ,QAAML,KAAK,GAAGE,MAAM,CAACG,GAAD,CAApB;AACA,QAAMC,IAAI,GAAG,OAAON,KAApB;;AACA,QAAIO,KAAK,CAACC,OAAN,CAAcR,KAAd,CAAJ,EAA0B;AACtB,uBAAUK,GAAV,qBAAwBL,KAAK,CAACI,GAAN,CAAU,UAACJ,KAAD,EAAQS,KAAR;AAAA,eAAkBR,aAAa,qBAAIQ,KAAJ,EAAYT,KAAZ,EAA/B;AAAA,OAAV,CAAxB;AACH;;AACD,QAAIA,KAAK,IAAI,IAAT,IAAiBM,IAAI,KAAK,QAA9B,EAAwC;AACpC,uBAAUD,GAAV,cAAiBC,IAAjB,cAAyBL,aAAa,CAACD,KAAD,CAAtC;AACH;;AACD,qBAAUK,GAAV,cAAiBC,IAAjB,cAAyBN,KAAzB;AACH,GAXM,EAYFU,IAZE,CAYG,GAZH,CAAP;AAaH,CAfD;;AAgBAX,OAAO,CAACY,OAAR,GAAkBV,aAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flattenObject = (object) => {\n    const keys = Object.keys(object);\n    return keys\n        .map(key => {\n        const value = object[key];\n        const type = typeof value;\n        if (Array.isArray(value)) {\n            return `${key}:array:[${value.map((value, index) => flattenObject({ [index]: value }))}]`;\n        }\n        if (value != null && type === 'object') {\n            return `${key}:${type}:${flattenObject(value)}`;\n        }\n        return `${key}:${type}:${value}`;\n    })\n        .join(';');\n};\nexports.default = flattenObject;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}